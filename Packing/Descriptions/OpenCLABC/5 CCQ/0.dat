


# [%t:CLMemory,Kernel%]CCQ
# [%t:CLValue,CLArray%]CCQ<T>
Представляет очередь-контейнер для команд GPU, применяемых к объекту типа {%t%}



# CLMemoryCCQ.(CLMemory)
# KernelCCQ.(Kernel)
# CLValueCCQ<T>.(CLValue<T>)
# CLArrayCCQ<T>.(CLArray<T>)
Создаёт контейнер команд, который будет применять команды к указанному объекту

# CLMemoryCCQ.(CommandQueue<CLMemory>)
# KernelCCQ.(CommandQueue<Kernel>)
# CLValueCCQ<T>.(CommandQueue<CLValue<T>>)
# CLArrayCCQ<T>.(CommandQueue<CLArray<T>>)
Создаёт контейнер команд, который будет применять команды к объекту, который вернёт указанная очередь
За каждое одно выполнение контейнера - q выполнится ровно один раз



# CLMemoryCCQ.ThenQueue(CommandQueueBase)
# KernelCCQ.ThenQueue(CommandQueueBase)
# CLValueCCQ<T>.ThenQueue(CommandQueueBase)
# CLArrayCCQ<T>.ThenQueue(CommandQueueBase)
Добавляет выполнение очереди в список обычных команд для GPU

# CLMemoryCCQ.Then[%when:,Quick%]Proc(CLMemory->())
# CLMemoryCCQ.Then[%when:,Quick%]Proc((CLMemory, Context)->())
# KernelCCQ.Then[%when:,Quick%]Proc(Kernel->())
# KernelCCQ.Then[%when:,Quick%]Proc((Kernel, Context)->())
# CLValueCCQ<T>.Then[%when:,Quick%]Proc(CLValue<T>->())
# CLValueCCQ<T>.Then[%when:,Quick%]Proc((CLValue<T>, Context)->())
# CLArrayCCQ<T>.Then[%when:,Quick%]Proc(CLArray<T>->())
# CLArrayCCQ<T>.Then[%when:,Quick%]Proc((CLArray<T>, Context)->())
Добавляет выполнение процедуры на CPU в список обычных команд для GPU
%DelegateExec:{%when?Background:Quick%}% {%when?начинающуюся на ".ThenQuick...":%}

# [%CLMemoryCCQ,KernelCCQ,CLValueCCQ<T>,CLArrayCCQ<T>%].ThenWait(WaitMarker)
Добавляет ожидание сигнала выполненности от заданного маркера


