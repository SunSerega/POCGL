


# WaitMarker
Представляет маркер для Wait очередей
Данный тип не является очередью
Но при выполнении преобразуется в очередь, выполняющую .SendSignal исходного маркера

# DetachedMarkerSignal:Head
Представляет оторванный сигнал маркера, являющийся обёрткой очереди
# DetachedMarkerSignal:Body
Данный тип не является маркером, но преобразуется в него при передаче в Wait-очереди

# DetachedMarkerSignalNil
%DetachedMarkerSignal:Head% без возвращаемого значения
%DetachedMarkerSignal:Body%

# DetachedMarkerSignal<T>
%DetachedMarkerSignal:Head% с возвращаемым значением
%DetachedMarkerSignal:Body%



# WaitMarker.Create
Создаёт новый простой маркер

# DetachedMarkerSignalNil.(CommandQueueNil, boolean)
# DetachedMarkerSignal<T>.(CommandQueue<T>, boolean)
Создаёт новый оторванный сигнал маркера
При выполнении сначала будет выполнена очередь q, а затем метод .SendSignal
signal_in_finally указывает, будут ли проигнорированы ошибки выполнения q при автоматическом вызове .SendSignal



# DetachedMarkerSignalNil.SignalInFinally
# DetachedMarkerSignal<T>.SignalInFinally
Указывает, будут ли проигнорированы ошибки выполнения исходной очереди при автоматическом вызове .SendSignal



# WaitMarker.SendSignal
# DetachedMarkerSignalNil.SendSignal
# DetachedMarkerSignal<T>.SendSignal
Посылает сигнал выполненности всем ожидающим Wait очередям



# WaitMarker.ToString
%CQ:ToString%

# WaitMarker.Print[%ln:,ln%]
%CQ:Print{%ln%}%


