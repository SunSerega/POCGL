


# clLoaderInfo (cl_loader_info)
	Enum [cl::ICDL_OCL_VERSION]
	Enum [cl::ICDL_VERSION]
	Enum [cl::ICDL_NAME]
	Enum [cl::ICDL_VENDOR]
	Func [cl::GetICDLoaderInfo + OCLICD]

# clLoaderLayers (cl_loader_layers)
	Enum [cl::LAYER_API_VERSION_100]
	Enum [cl::LAYER_API_VERSION]
	Enum [cl::LAYER_NAME]
	Func [cl::GetLayerInfo]
	Func [cl::InitLayer]

# clDeviceAttributeQueryAMD (cl_amd_device_attribute_query)
	Enum [cl::DEVICE_PREFERRED_WORK_GROUP_SIZE]
	Enum [cl::DEVICE_MAX_WORK_GROUP_SIZE + AMD]
	Enum [cl::DEVICE_PREFERRED_CONSTANT_BUFFER_SIZE]
	Enum [cl::DEVICE_PCIE_ID]
	Enum [cl::DEVICE_PROFILING_TIMER_OFFSET]
	Enum [cl::DEVICE_TOPOLOGY]
	Enum [cl::DEVICE_BOARD_NAME]
	Enum [cl::DEVICE_GLOBAL_FREE_MEMORY]
	Enum [cl::DEVICE_SIMD_PER_COMPUTE_UNIT]
	Enum [cl::DEVICE_SIMD_WIDTH]
	Enum [cl::DEVICE_SIMD_INSTRUCTION_WIDTH]
	Enum [cl::DEVICE_WAVEFRONT_WIDTH]
	Enum [cl::DEVICE_GLOBAL_MEM_CHANNELS]
	Enum [cl::DEVICE_GLOBAL_MEM_CHANNEL_BANKS]
	Enum [cl::DEVICE_GLOBAL_MEM_CHANNEL_BANK_WIDTH]
	Enum [cl::DEVICE_LOCAL_MEM_SIZE_PER_COMPUTE_UNIT]
	Enum [cl::DEVICE_LOCAL_MEM_BANKS]
	Enum [cl::DEVICE_THREAD_TRACE_SUPPORTED]
	Enum [cl::DEVICE_GFXIP_MAJOR]
	Enum [cl::DEVICE_GFXIP_MINOR]
	Enum [cl::DEVICE_AVAILABLE_ASYNC_QUEUES]

# clContextLoggingFunctionsAPPLE (cl_APPLE_ContextLoggingFunctions)
	Func [cl::LogMessagesToSystemLog + APPLE]
	Func [cl::LogMessagesToStdout + APPLE]
	Func [cl::LogMessagesToStderr + APPLE]

# clSetMemObjectDestructorAPPLE (cl_APPLE_SetMemObjectDestructor)
	Func [cl::SetMemObjectDestructor + APPLE]

# clControlledKernelTerminationARM (cl_arm_controlled_kernel_termination)
	Enum [cl::COMMAND_TERMINATED_ITSELF_WITH_FAILURE]
	Enum [cl::COMMAND_TERMINATION_COMPLETION]
	Enum [cl::DEVICE_CONTROLLED_TERMINATION_SUCCESS]
	Enum [cl::COMMAND_TERMINATION_CONTROLLED_SUCCESS]
	Enum [cl::DEVICE_CONTROLLED_TERMINATION_FAILURE]
	Enum [cl::COMMAND_TERMINATION_CONTROLLED_FAILURE]
	Enum [cl::COMMAND_TERMINATION_ERROR]
	Enum [cl::DEVICE_CONTROLLED_TERMINATION_QUERY]
	Enum [cl::EVENT_COMMAND_TERMINATION_REASON]
	Enum [cl::DEVICE_CONTROLLED_TERMINATION_CAPABILITIES]

# clGetCoreIdARM (cl_arm_get_core_id)
	Enum [cl::DEVICE_COMPUTE_UNITS_BITFIELD]

# clImportMemoryARM (cl_arm_import_memory)
	Enum [cl::IMPORT_MEMORY_WHOLE_ALLOCATION]
	Enum [cl::IMPORT_TYPE]
	Enum [cl::IMPORT_TYPE_HOST]
	Enum [cl::IMPORT_TYPE_DMA_BUF]
	Enum [cl::IMPORT_TYPE_PROTECTED]
	Enum [cl::IMPORT_TYPE_ANDROID_HARDWARE_BUFFER]
	Enum [cl::IMPORT_DMA_BUF_DATA_CONSISTENCY_WITH_HOST]
	Enum [cl::IMPORT_ANDROID_HARDWARE_BUFFER_PLANE_INDEX]
	Enum [cl::IMPORT_ANDROID_HARDWARE_BUFFER_LAYER_INDEX]
	Func [cl::ImportMemory + ARM]

# clJobSlotSelectionARM (cl_arm_job_slot_selection)
	Enum [cl::DEVICE_JOB_SLOTS]
	Enum [cl::QUEUE_JOB_SLOT]

# clPrintfARM (cl_arm_printf)
	Enum [cl::PRINTF_CALLBACK]
	Enum [cl::PRINTF_BUFFERSIZE]

# clProtectedMemoryAllocationARM (cl_arm_protected_memory_allocation)
	Enum [cl::MEM_PROTECTED_ALLOC]

# clSchedulingControlsARM (cl_arm_scheduling_controls)
	Enum [cl::DEVICE_SCHEDULING_KERNEL_BATCHING]
	Enum [cl::DEVICE_SCHEDULING_WORKGROUP_BATCH_SIZE]
	Enum [cl::DEVICE_SCHEDULING_WORKGROUP_BATCH_SIZE_MODIFIER]
	Enum [cl::DEVICE_SCHEDULING_DEFERRED_FLUSH]
	Enum [cl::DEVICE_SCHEDULING_REGISTER_ALLOCATION]
	Enum [cl::DEVICE_SCHEDULING_WARP_THROTTLING]
	Enum [cl::DEVICE_SCHEDULING_COMPUTE_UNIT_BATCH_QUEUE_SIZE]
	Enum [cl::DEVICE_SCHEDULING_COMPUTE_UNIT_LIMIT]
	Enum [cl::DEVICE_SCHEDULING_CONTROLS_CAPABILITIES]
	Enum [cl::KERNEL_EXEC_INFO_WORKGROUP_BATCH_SIZE]
	Enum [cl::KERNEL_EXEC_INFO_WORKGROUP_BATCH_SIZE_MODIFIER]
	Enum [cl::QUEUE_KERNEL_BATCHING]
	Enum [cl::KERNEL_EXEC_INFO_WARP_COUNT_LIMIT]
	Enum [cl::KERNEL_MAX_WARP_COUNT]
	Enum [cl::DEVICE_MAX_WARP_COUNT]
	Enum [cl::DEVICE_SUPPORTED_REGISTER_ALLOCATIONS]
	Enum [cl::QUEUE_DEFERRED_FLUSH]
	Enum [cl::KERNEL_EXEC_INFO_COMPUTE_UNIT_MAX_QUEUED_BATCHES]
	Enum [cl::QUEUE_COMPUTE_UNIT_LIMIT]

# clSharedVirtualMemoryARM (cl_arm_shared_virtual_memory)
	Enum [cl::DEVICE_SVM_COARSE_GRAIN_BUFFER]
	Enum [cl::DEVICE_SVM_FINE_GRAIN_BUFFER]
	Enum [cl::DEVICE_SVM_FINE_GRAIN_SYSTEM]
	Enum [cl::DEVICE_SVM_ATOMICS]
	Enum [cl::MEM_SVM_FINE_GRAIN_BUFFER]
	Enum [cl::MEM_SVM_ATOMICS]
	Enum [cl::DEVICE_SVM_CAPABILITIES + ARM]
	Enum [cl::MEM_USES_SVM_POINTER + ARM]
	Enum [cl::KERNEL_EXEC_INFO_SVM_PTRS + ARM]
	Enum [cl::KERNEL_EXEC_INFO_SVM_FINE_GRAIN_SYSTEM + ARM]
	Enum [cl::COMMAND_SVM_FREE + ARM]
	Enum [cl::COMMAND_SVM_MEMCPY + ARM]
	Enum [cl::COMMAND_SVM_MEMFILL + ARM]
	Enum [cl::COMMAND_SVM_MAP + ARM]
	Enum [cl::COMMAND_SVM_UNMAP + ARM]
	Func [cl::SVMAlloc + ARM]
	Func [cl::SVMFree + ARM]
	Func [cl::EnqueueSVMFree + ARM]
	Func [cl::EnqueueSVMMemcpy + ARM]
	Func [cl::EnqueueSVMMemFill + ARM]
	Func [cl::EnqueueSVMMap + ARM]
	Func [cl::EnqueueSVMUnmap + ARM]
	Func [cl::SetKernelArgSVMPointer + ARM]
	Func [cl::SetKernelExecInfo + ARM]

# clCxxForOpenclEXT (cl_ext_cxx_for_opencl)
	Enum [cl::DEVICE_CXX_FOR_OPENCL_NUMERIC_VERSION]

# clDeviceFissionEXT (cl_ext_device_fission)
	Enum [cl::INVALID_PARTITION_NAME]
	Enum [cl::INVALID_PARTITION_COUNT]
	Enum [cl::DEVICE_PARTITION_FAILED + EXT]
	Enum [cl::PARTITION_BY_NAMES_LIST_END]
	Enum [cl::PARTITION_BY_COUNTS_LIST_END]
	Enum [cl::PROPERTIES_LIST_END]
	Enum [cl::AFFINITY_DOMAIN_L1_CACHE]
	Enum [cl::AFFINITY_DOMAIN_L2_CACHE]
	Enum [cl::AFFINITY_DOMAIN_L3_CACHE]
	Enum [cl::AFFINITY_DOMAIN_L4_CACHE]
	Enum [cl::AFFINITY_DOMAIN_NUMA]
	Enum [cl::AFFINITY_DOMAIN_NEXT_FISSIONABLE]
	Enum [cl::DEVICE_PARTITION_EQUALLY + EXT]
	Enum [cl::DEVICE_PARTITION_BY_COUNTS + EXT]
	Enum [cl::DEVICE_PARTITION_BY_NAMES]
	Enum [cl::DEVICE_PARTITION_BY_AFFINITY_DOMAIN + EXT]
	Enum [cl::DEVICE_PARENT_DEVICE + EXT]
	Enum [cl::DEVICE_PARTITION_TYPES]
	Enum [cl::DEVICE_AFFINITY_DOMAINS]
	Enum [cl::DEVICE_REFERENCE_COUNT + EXT]
	Enum [cl::DEVICE_PARTITION_STYLE]
	Func [cl::ReleaseDevice + EXT]
	Func [cl::RetainDevice + EXT]
	Func [cl::CreateSubDevices + EXT]

# clFloatAtomicsEXT (cl_ext_float_atomics)
	Enum [cl::DEVICE_GLOBAL_FP_ATOMIC_LOAD_STORE]
	Enum [cl::DEVICE_GLOBAL_FP_ATOMIC_ADD]
	Enum [cl::DEVICE_GLOBAL_FP_ATOMIC_MIN_MAX]
	Enum [cl::DEVICE_SINGLE_FP_ATOMIC_CAPABILITIES]
	Enum [cl::DEVICE_DOUBLE_FP_ATOMIC_CAPABILITIES]
	Enum [cl::DEVICE_HALF_FP_ATOMIC_CAPABILITIES]
	Enum [cl::DEVICE_LOCAL_FP_ATOMIC_LOAD_STORE]
	Enum [cl::DEVICE_LOCAL_FP_ATOMIC_ADD]
	Enum [cl::DEVICE_LOCAL_FP_ATOMIC_MIN_MAX]

# clImageFromBufferEXT (cl_ext_image_from_buffer)
	Enum [cl::IMAGE_REQUIREMENTS_SLICE_PITCH_ALIGNMENT]

# clImageRaw10Raw12EXT (cl_ext_image_raw10_raw12)
	Enum [cl::UNSIGNED_INT_RAW10]
	Enum [cl::UNSIGNED_INT_RAW12]

# clImageRequirementsInfoEXT (cl_ext_image_requirements_info)
	Enum [cl::IMAGE_REQUIREMENTS_ROW_PITCH_ALIGNMENT]
	Enum [cl::IMAGE_REQUIREMENTS_BASE_ADDRESS_ALIGNMENT]
	Enum [cl::IMAGE_REQUIREMENTS_SIZE]
	Enum [cl::IMAGE_REQUIREMENTS_MAX_WIDTH]
	Enum [cl::IMAGE_REQUIREMENTS_MAX_HEIGHT]
	Enum [cl::IMAGE_REQUIREMENTS_MAX_DEPTH]
	Enum [cl::IMAGE_REQUIREMENTS_MAX_ARRAY_SIZE]
	Func [cl::GetImageRequirementsInfo + EXT]

# clImageUnormInt2101010EXT (cl_ext_image_unorm_int_2_101010)
	Enum [cl::UNORM_INT_2_101010]

# clMigrateMemobjectEXT (cl_ext_migrate_memobject)
	Enum [cl::MIGRATE_MEM_OBJECT_HOST]
	Enum [cl::COMMAND_MIGRATE_MEM_OBJECT]
	Func [cl::EnqueueMigrateMemObject + EXT]

# clCachedAllocationsIMG (cl_img_cached_allocations)
	Enum [cl::MEM_USE_UNCACHED_CPU_MEMORY]
	Enum [cl::MEM_USE_CACHED_CPU_MEMORY]

# clCancelCommandIMG (cl_img_cancel_command)
	Enum [cl::CANCELLED]
	Func [cl::CancelCommands + IMG]

# clGenerateMipmapIMG (cl_img_generate_mipmap)
	Enum [cl::MIPMAP_FILTER_ANY]
	Enum [cl::MIPMAP_FILTER_BOX]
	Enum [cl::COMMAND_GENERATE_MIPMAP]
	Func [cl::EnqueueGenerateMipmap + IMG]

# clMemPropertiesIMG (cl_img_mem_properties)
	Enum [cl::MEM_ALLOC_RELAX_REQUIREMENTS]
	Enum [cl::MEM_ALLOC_GPU_WRITE_COMBINE]
	Enum [cl::MEM_ALLOC_GPU_CACHED]
	Enum [cl::MEM_ALLOC_CPU_LOCAL]
	Enum [cl::MEM_ALLOC_GPU_LOCAL]
	Enum [cl::MEM_ALLOC_GPU_PRIVATE]
	Enum [cl::MEM_ALLOC_FLAGS + IMG]
	Enum [cl::DEVICE_MEMORY_CAPABILITIES]

# clUseGrallocPtrIMG (cl_img_use_gralloc_ptr)
	Enum [cl::COMMAND_ACQUIRE_GRALLOC_OBJECTS]
	Enum [cl::COMMAND_RELEASE_GRALLOC_OBJECTS]
	Enum [cl::GRALLOC_RESOURCE_NOT_ACQUIRED]
	Enum [cl::INVALID_GRALLOC_OBJECT]
	Enum [cl::MEM_USE_GRALLOC_PTR]
	Func [cl::EnqueueAcquireGrallocObjects + IMG]
	Func [cl::EnqueueReleaseGrallocObjects + IMG]

# clYuvImageIMG (cl_img_yuv_image)
	Enum [cl::NV21]
	Enum [cl::YV12]

# clAcceleratorINTEL (cl_intel_accelerator)
	Enum [cl::ACCELERATOR_TYPE_NOT_SUPPORTED]
	Enum [cl::INVALID_ACCELERATOR_DESCRIPTOR]
	Enum [cl::INVALID_ACCELERATOR_TYPE]
	Enum [cl::INVALID_ACCELERATOR]
	Enum [cl::ACCELERATOR_DESCRIPTOR]
	Enum [cl::ACCELERATOR_REFERENCE_COUNT]
	Enum [cl::ACCELERATOR_CONTEXT]
	Enum [cl::ACCELERATOR_TYPE]
	Func [cl::CreateAccelerator + INTEL]
	Func [cl::GetAcceleratorInfo + INTEL]
	Func [cl::RetainAccelerator + INTEL]
	Func [cl::ReleaseAccelerator + INTEL]

# clAdvancedMotionEstimationINTEL (cl_intel_advanced_motion_estimation)
	Enum [cl::ME_VERSION_LEGACY]
	Enum [cl::ME_SKIP_BLOCK_TYPE_16x16]
	Enum [cl::ME_COST_PENALTY_NONE]
	Enum [cl::ME_COST_PRECISION_QPEL]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_VERTICAL]
	Enum [cl::ME_CHROMA_PREDICTOR_MODE_DC]
	Enum [cl::ME_VERSION_ADVANCED_VER_1]
	Enum [cl::ME_CHROMA_INTRA_PREDICT_ENABLED]
	Enum [cl::ME_COST_PENALTY_LOW]
	Enum [cl::ME_COST_PRECISION_HPEL]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_HORIZONTAL]
	Enum [cl::ME_CHROMA_PREDICTOR_MODE_HORIZONTAL]
	Enum [cl::ME_FORWARD_INPUT_MODE]
	Enum [cl::ME_VERSION_ADVANCED_VER_2]
	Enum [cl::ME_LUMA_INTRA_PREDICT_ENABLED]
	Enum [cl::ME_COST_PENALTY_NORMAL]
	Enum [cl::ME_COST_PRECISION_PEL]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_DC]
	Enum [cl::ME_CHROMA_PREDICTOR_MODE_VERTICAL]
	Enum [cl::ME_BACKWARD_INPUT_MODE]
	Enum [cl::ME_COST_PENALTY_HIGH]
	Enum [cl::ME_COST_PRECISION_DPEL]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_DIAGONAL_DOWN_LEFT]
	Enum [cl::ME_CHROMA_PREDICTOR_MODE_PLANE]
	Enum [cl::ME_BIDIRECTION_INPUT_MODE]
	Enum [cl::ME_SKIP_BLOCK_TYPE_8x8]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_DIAGONAL_DOWN_RIGHT]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_PLANE]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_VERTICAL_RIGHT]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_HORIZONTAL_DOWN]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_VERTICAL_LEFT]
	Enum [cl::ME_LUMA_PREDICTOR_MODE_HORIZONTAL_UP]
	Enum [cl::ME_BIDIR_WEIGHT_QUARTER]
	Enum [cl::ME_BIDIR_WEIGHT_THIRD]
	Enum [cl::ME_BIDIR_WEIGHT_HALF]
	Enum [cl::ME_BIDIR_WEIGHT_TWO_THIRD]
	Enum [cl::ME_BIDIR_WEIGHT_THREE_QUARTER]
	Enum [cl::DEVICE_ME_VERSION]

# clCommandQueueFamiliesINTEL (cl_intel_command_queue_families)
	Enum [cl::QUEUE_DEFAULT_CAPABILITIES]
	Enum [cl::QUEUE_CAPABILITY_CREATE_SINGLE_QUEUE_EVENTS]
	Enum [cl::QUEUE_CAPABILITY_CREATE_CROSS_QUEUE_EVENTS]
	Enum [cl::QUEUE_CAPABILITY_SINGLE_QUEUE_EVENT_WAIT_LIST]
	Enum [cl::QUEUE_CAPABILITY_CROSS_QUEUE_EVENT_WAIT_LIST]
	Enum [cl::QUEUE_FAMILY_MAX_NAME_SIZE]
	Enum [cl::QUEUE_CAPABILITY_TRANSFER_BUFFER]
	Enum [cl::QUEUE_CAPABILITY_TRANSFER_BUFFER_RECT]
	Enum [cl::QUEUE_CAPABILITY_MAP_BUFFER]
	Enum [cl::QUEUE_CAPABILITY_FILL_BUFFER]
	Enum [cl::QUEUE_CAPABILITY_TRANSFER_IMAGE]
	Enum [cl::QUEUE_CAPABILITY_MAP_IMAGE]
	Enum [cl::QUEUE_CAPABILITY_FILL_IMAGE]
	Enum [cl::DEVICE_QUEUE_FAMILY_PROPERTIES]
	Enum [cl::QUEUE_FAMILY]
	Enum [cl::QUEUE_INDEX]
	Enum [cl::QUEUE_CAPABILITY_TRANSFER_BUFFER_IMAGE]
	Enum [cl::QUEUE_CAPABILITY_TRANSFER_IMAGE_BUFFER]
	Enum [cl::QUEUE_CAPABILITY_MARKER]
	Enum [cl::QUEUE_CAPABILITY_BARRIER]
	Enum [cl::QUEUE_CAPABILITY_KERNEL]

# clCreateBufferWithPropertiesINTEL (cl_intel_create_buffer_with_properties)
	Func [cl::CreateBufferWithProperties + INTEL]

# clCreateMemObjectPropertiesINTEL (cl_intel_create_mem_object_properties)
	Enum [cl::MEM_LOCALLY_UNCACHED_RESOURCE]
	Enum [cl::MEM_DEVICE_ID]

# clDeviceAttributeQueryINTEL (cl_intel_device_attribute_query)
	Enum [cl::DEVICE_FEATURE_FLAG_DP4A]
	Enum [cl::DEVICE_FEATURE_FLAG_DPAS]
	Enum [cl::DEVICE_IP_VERSION]
	Enum [cl::DEVICE_ID]
	Enum [cl::DEVICE_NUM_SLICES]
	Enum [cl::DEVICE_NUM_SUB_SLICES_PER_SLICE]
	Enum [cl::DEVICE_NUM_EUS_PER_SUB_SLICE]
	Enum [cl::DEVICE_NUM_THREADS_PER_EU]
	Enum [cl::DEVICE_FEATURE_CAPABILITIES]

# clDevicePartitionByNamesINTEL (cl_intel_device_partition_by_names)
	Enum [cl::PARTITION_BY_NAMES_LIST_END]
	Enum [cl::DEVICE_PARTITION_BY_NAMES]

# clDeviceSideAvcMotionEstimationINTEL (cl_intel_device_side_avc_motion_estimation)
	Enum [cl::AVC_ME_VERSION_0]
	Enum [cl::AVC_ME_MAJOR_16x16]
	Enum [cl::AVC_ME_MINOR_8x8]
	Enum [cl::AVC_ME_MAJOR_FORWARD]
	Enum [cl::AVC_ME_PARTITION_MASK_ALL]
	Enum [cl::AVC_ME_SEARCH_WINDOW_EXHAUSTIVE]
	Enum [cl::AVC_ME_SAD_ADJUST_MODE_NONE]
	Enum [cl::AVC_ME_SUBPIXEL_MODE_INTEGER]
	Enum [cl::AVC_ME_COST_PRECISION_QPEL]
	Enum [cl::AVC_ME_BORDER_REACHED_LEFT]
	Enum [cl::AVC_ME_SKIP_BLOCK_PARTITION_16x16]
	Enum [cl::AVC_ME_BLOCK_BASED_SKIP_4x4]
	Enum [cl::AVC_ME_INTRA_16x16]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_VERTICAL]
	Enum [cl::AVC_ME_CHROMA_PREDICTOR_MODE_DC]
	Enum [cl::AVC_ME_SLICE_TYPE_PRED]
	Enum [cl::AVC_ME_INTERLACED_SCAN_TOP_FIELD]
	Enum [cl::AVC_ME_VERSION_1]
	Enum [cl::AVC_ME_MAJOR_16x8]
	Enum [cl::AVC_ME_MINOR_8x4]
	Enum [cl::AVC_ME_MAJOR_BACKWARD]
	Enum [cl::AVC_ME_SEARCH_WINDOW_SMALL]
	Enum [cl::AVC_ME_SUBPIXEL_MODE_HPEL]
	Enum [cl::AVC_ME_COST_PRECISION_HPEL]
	Enum [cl::AVC_ME_INTRA_8x8]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_HORIZONTAL]
	Enum [cl::AVC_ME_CHROMA_PREDICTOR_MODE_HORIZONTAL]
	Enum [cl::AVC_ME_FRAME_FORWARD]
	Enum [cl::AVC_ME_SLICE_TYPE_BPRED]
	Enum [cl::AVC_ME_INTERLACED_SCAN_BOTTOM_FIELD]
	Enum [cl::AVC_ME_MAJOR_8x16]
	Enum [cl::AVC_ME_MINOR_4x8]
	Enum [cl::AVC_ME_MAJOR_BIDIRECTIONAL]
	Enum [cl::AVC_ME_SEARCH_WINDOW_TINY]
	Enum [cl::AVC_ME_SEARCH_WINDOW_4x4_RADIUS]
	Enum [cl::AVC_ME_SAD_ADJUST_MODE_HAAR]
	Enum [cl::AVC_ME_COST_PRECISION_PEL]
	Enum [cl::AVC_ME_BORDER_REACHED_RIGHT]
	Enum [cl::AVC_ME_INTRA_4x4]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_DC]
	Enum [cl::AVC_ME_CHROMA_PREDICTOR_MODE_VERTICAL]
	Enum [cl::AVC_ME_FRAME_BACKWARD]
	Enum [cl::AVC_ME_SLICE_TYPE_INTRA]
	Enum [cl::AVC_ME_MAJOR_8x8]
	Enum [cl::AVC_ME_MINOR_4x4]
	Enum [cl::AVC_ME_SEARCH_WINDOW_EXTRA_TINY]
	Enum [cl::AVC_ME_SUBPIXEL_MODE_QPEL]
	Enum [cl::AVC_ME_COST_PRECISION_DPEL]
	Enum [cl::AVC_ME_INTRA_LUMA_PARTITION_MASK_4x4]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_DIAGONAL_DOWN_LEFT]
	Enum [cl::AVC_ME_CHROMA_PREDICTOR_MODE_PLANE]
	Enum [cl::AVC_ME_FRAME_DUAL]
	Enum [cl::AVC_ME_SEARCH_WINDOW_DIAMOND]
	Enum [cl::AVC_ME_BORDER_REACHED_TOP]
	Enum [cl::AVC_ME_INTRA_NEIGHBOR_UPPER_LEFT_MASK_ENABLE]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_DIAGONAL_DOWN_RIGHT]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_PLANE]
	Enum [cl::AVC_ME_SEARCH_WINDOW_LARGE_DIAMOND]
	Enum [cl::AVC_ME_INTRA_LUMA_PARTITION_MASK_8x8]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_VERTICAL_RIGHT]
	Enum [cl::AVC_ME_SEARCH_WINDOW_RESERVED0]
	Enum [cl::AVC_ME_INTRA_LUMA_PARTITION_MASK_16x16]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_HORIZONTAL_DOWN]
	Enum [cl::AVC_ME_SEARCH_WINDOW_RESERVED1]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_VERTICAL_LEFT]
	Enum [cl::AVC_ME_SEARCH_WINDOW_CUSTOM]
	Enum [cl::AVC_ME_BORDER_REACHED_BOTTOM]
	Enum [cl::AVC_ME_INTRA_NEIGHBOR_UPPER_RIGHT_MASK_ENABLE]
	Enum [cl::AVC_ME_LUMA_PREDICTOR_MODE_HORIZONTAL_UP]
	Enum [cl::AVC_ME_SEARCH_WINDOW_16x12_RADIUS]
	Enum [cl::AVC_ME_SEARCH_WINDOW_2x2_RADIUS]
	Enum [cl::AVC_ME_BIDIR_WEIGHT_QUARTER]
	Enum [cl::AVC_ME_INTRA_NEIGHBOR_UPPER_MASK_ENABLE]
	Enum [cl::AVC_ME_BIDIR_WEIGHT_THIRD]
	Enum [cl::AVC_ME_BIDIR_WEIGHT_HALF]
	Enum [cl::AVC_ME_BIDIR_WEIGHT_TWO_THIRD]
	Enum [cl::AVC_ME_BIDIR_WEIGHT_THREE_QUARTER]
	Enum [cl::AVC_ME_PARTITION_MASK_4x4]
	Enum [cl::AVC_ME_PARTITION_MASK_4x8]
	Enum [cl::AVC_ME_INTRA_NEIGHBOR_LEFT_MASK_ENABLE]
	Enum [cl::AVC_ME_PARTITION_MASK_8x4]
	Enum [cl::AVC_ME_PARTITION_MASK_8x8]
	Enum [cl::AVC_ME_PARTITION_MASK_8x16]
	Enum [cl::AVC_ME_PARTITION_MASK_16x8]
	Enum [cl::AVC_ME_PARTITION_MASK_16x16]
	Enum [cl::AVC_ME_BLOCK_BASED_SKIP_8x8]
	Enum [cl::AVC_ME_SKIP_BLOCK_PARTITION_8x8]
	Enum [cl::DEVICE_AVC_ME_VERSION]
	Enum [cl::DEVICE_AVC_ME_SUPPORTS_TEXTURE_SAMPLER_USE]
	Enum [cl::DEVICE_AVC_ME_SUPPORTS_PREEMPTION]
	Enum [cl::AVC_ME_SKIP_BLOCK_16x16_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_0_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_16x16_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_0_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_16x16_DUAL_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_1_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_1_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_2_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_2_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_3_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_FORWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_3_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_BACKWARD_ENABLE]
	Enum [cl::AVC_ME_SKIP_BLOCK_8x8_DUAL_ENABLE]

# clDriverDiagnosticsINTEL (cl_intel_driver_diagnostics)
	Enum [cl::CONTEXT_DIAGNOSTICS_LEVEL_GOOD]
	Enum [cl::CONTEXT_DIAGNOSTICS_LEVEL_BAD]
	Enum [cl::CONTEXT_DIAGNOSTICS_LEVEL_NEUTRAL]
	Enum [cl::CONTEXT_DIAGNOSTICS_LEVEL_ALL]
	Enum [cl::CONTEXT_SHOW_DIAGNOSTICS]

# clDx9MediaSharingINTEL (cl_intel_dx9_media_sharing)
	Enum [cl::DX9_RESOURCE_NOT_ACQUIRED]
	Enum [cl::DX9_RESOURCE_ALREADY_ACQUIRED]
	Enum [cl::INVALID_DX9_RESOURCE]
	Enum [cl::INVALID_DX9_DEVICE]
	Enum [cl::D3D9_DEVICE]
	Enum [cl::PREFERRED_DEVICES_FOR_DX9]
	Enum [cl::ALL_DEVICES_FOR_DX9]
	Enum [cl::CONTEXT_D3D9_DEVICE]
	Enum [cl::MEM_DX9_RESOURCE]
	Enum [cl::COMMAND_ACQUIRE_DX9_OBJECTS]
	Enum [cl::COMMAND_RELEASE_DX9_OBJECTS]
	Enum [cl::D3D9EX_DEVICE]
	Enum [cl::DXVA_DEVICE]
	Enum [cl::CONTEXT_D3D9EX_DEVICE]
	Enum [cl::CONTEXT_DXVA_DEVICE]
	Enum [cl::MEM_DX9_SHARED_HANDLE]
	Enum [cl::IMAGE_DX9_PLANE]
	Func [cl::GetDeviceIDsFromDX9 + INTEL]
	Func [cl::CreateFromDX9MediaSurface + INTEL]
	Func [cl::EnqueueAcquireDX9Objects + INTEL]
	Func [cl::EnqueueReleaseDX9Objects + INTEL]

# clEglImageYuvINTEL (cl_intel_egl_image_yuv)
	Enum [cl::EGL_YUV_PLANE]

# clExecByLocalThreadINTEL (cl_intel_exec_by_local_thread)
	Enum [cl::QUEUE_THREAD_LOCAL_EXEC_ENABLE]

# clMemAllocBufferLocationINTEL (cl_intel_mem_alloc_buffer_location)
	Enum [cl::MEM_ALLOC_BUFFER_LOCATION]

# clMemChannelPropertyINTEL (cl_intel_mem_channel_property)
	Enum [cl::MEM_CHANNEL]

# clMemForceHostMemoryINTEL (cl_intel_mem_force_host_memory)
	Enum [cl::MEM_FORCE_HOST_MEMORY]

# clMotionEstimationINTEL (cl_intel_motion_estimation)
	Enum [cl::ACCELERATOR_TYPE_MOTION_ESTIMATION]
	Enum [cl::ME_MB_TYPE_16x16]
	Enum [cl::ME_SUBPIXEL_MODE_INTEGER]
	Enum [cl::ME_SAD_ADJUST_MODE_NONE]
	Enum [cl::ME_SEARCH_PATH_RADIUS_2_2]
	Enum [cl::ME_MB_TYPE_8x8]
	Enum [cl::ME_SUBPIXEL_MODE_HPEL]
	Enum [cl::ME_SAD_ADJUST_MODE_HAAR]
	Enum [cl::ME_SEARCH_PATH_RADIUS_4_4]
	Enum [cl::ME_MB_TYPE_4x4]
	Enum [cl::ME_SUBPIXEL_MODE_QPEL]
	Enum [cl::ME_SEARCH_PATH_RADIUS_16_12]

# clPackedYuvINTEL (cl_intel_packed_yuv)
	Enum [cl::YUYV]
	Enum [cl::UYVY]
	Enum [cl::YVYU]
	Enum [cl::VYUY]

# clPlanarYuvINTEL (cl_intel_planar_yuv)
	Enum [cl::NV12]
	Enum [cl::DEVICE_PLANAR_YUV_MAX_WIDTH]
	Enum [cl::DEVICE_PLANAR_YUV_MAX_HEIGHT]
	Enum [cl::MEM_NO_ACCESS]
	Enum [cl::MEM_ACCESS_FLAGS_UNRESTRICTED]

# clProgramScopeHostPipeINTEL (cl_intel_program_scope_host_pipe)
	Enum [cl::COMMAND_READ_HOST_PIPE]
	Enum [cl::COMMAND_WRITE_HOST_PIPE]
	Enum [cl::PROGRAM_NUM_HOST_PIPES]
	Enum [cl::PROGRAM_HOST_PIPE_NAMES]
	Func [cl::EnqueueReadHostPipe + INTEL]
	Func [cl::EnqueueWriteHostPipe + INTEL]

# clQueueNoSyncOperationsINTEL (cl_intel_queue_no_sync_operations)
	Enum [cl::QUEUE_NO_SYNC_OPERATIONS]

# clRequiredSubgroupSizeINTEL (cl_intel_required_subgroup_size)
	Enum [cl::DEVICE_SUB_GROUP_SIZES]
	Enum [cl::KERNEL_SPILL_MEM_SIZE]
	Enum [cl::KERNEL_COMPILE_SUB_GROUP_SIZE]

# clSharingFormatQueryINTEL (cl_intel_sharing_format_query)

# clSharingFormatQueryD3d10INTEL (cl_intel_sharing_format_query_d3d10)
	Func [cl::GetSupportedD3D10TextureFormats + INTEL]

# clSharingFormatQueryD3d11INTEL (cl_intel_sharing_format_query_d3d11)
	Func [cl::GetSupportedD3D11TextureFormats + INTEL]

# clSharingFormatQueryDx9INTEL (cl_intel_sharing_format_query_dx9)
	Func [cl::GetSupportedDX9MediaSurfaceFormats + INTEL]

# clSharingFormatQueryGlINTEL (cl_intel_sharing_format_query_gl)
	Func [cl::GetSupportedGLTextureFormats + INTEL]

# clSharingFormatQueryVaApiINTEL (cl_intel_sharing_format_query_va_api)
	Func [cl::GetSupportedVA_APIMediaSurfaceFormats + INTEL]

# clSimultaneousSharingINTEL (cl_intel_simultaneous_sharing)
	Enum [cl::DEVICE_SIMULTANEOUS_INTEROPS]
	Enum [cl::DEVICE_NUM_SIMULTANEOUS_INTEROPS]

# clUnifiedSharedMemoryINTEL (cl_intel_unified_shared_memory)
	Enum [cl::UNIFIED_SHARED_MEMORY_ACCESS]
	Enum [cl::MEM_ALLOC_WRITE_COMBINED]
	Enum [cl::UNIFIED_SHARED_MEMORY_ATOMIC_ACCESS]
	Enum [cl::MEM_ALLOC_INITIAL_PLACEMENT_DEVICE]
	Enum [cl::UNIFIED_SHARED_MEMORY_CONCURRENT_ACCESS]
	Enum [cl::MEM_ALLOC_INITIAL_PLACEMENT_HOST]
	Enum [cl::UNIFIED_SHARED_MEMORY_CONCURRENT_ATOMIC_ACCESS]
	Enum [cl::DEVICE_HOST_MEM_CAPABILITIES]
	Enum [cl::DEVICE_DEVICE_MEM_CAPABILITIES]
	Enum [cl::DEVICE_SINGLE_DEVICE_SHARED_MEM_CAPABILITIES]
	Enum [cl::DEVICE_CROSS_DEVICE_SHARED_MEM_CAPABILITIES]
	Enum [cl::DEVICE_SHARED_SYSTEM_MEM_CAPABILITIES]
	Enum [cl::MEM_ALLOC_FLAGS + INTEL]
	Enum [cl::MEM_TYPE_UNKNOWN]
	Enum [cl::MEM_TYPE_HOST]
	Enum [cl::MEM_TYPE_DEVICE]
	Enum [cl::MEM_TYPE_SHARED]
	Enum [cl::MEM_ALLOC_TYPE]
	Enum [cl::MEM_ALLOC_BASE_PTR]
	Enum [cl::MEM_ALLOC_SIZE]
	Enum [cl::MEM_ALLOC_DEVICE]
	Enum [cl::KERNEL_EXEC_INFO_INDIRECT_HOST_ACCESS]
	Enum [cl::KERNEL_EXEC_INFO_INDIRECT_DEVICE_ACCESS]
	Enum [cl::KERNEL_EXEC_INFO_INDIRECT_SHARED_ACCESS]
	Enum [cl::KERNEL_EXEC_INFO_USM_PTRS]
	Enum [cl::COMMAND_MEMFILL]
	Enum [cl::COMMAND_MEMCPY]
	Enum [cl::COMMAND_MIGRATEMEM]
	Enum [cl::COMMAND_MEMADVISE]
	Func [cl::HostMemAlloc + INTEL]
	Func [cl::DeviceMemAlloc + INTEL]
	Func [cl::SharedMemAlloc + INTEL]
	Func [cl::MemFree + INTEL]
	Func [cl::MemBlockingFree + INTEL]
	Func [cl::GetMemAllocInfo + INTEL]
	Func [cl::SetKernelArgMemPointer + INTEL]
	Func [cl::EnqueueMemFill + INTEL]
	Func [cl::EnqueueMemcpy + INTEL]
	Func [cl::EnqueueMemAdvise + INTEL]
	Func [cl::EnqueueMigrateMem + INTEL]
	Func [cl::EnqueueMemset + INTEL]

# clVaApiMediaSharingINTEL (cl_intel_va_api_media_sharing)
	Enum [cl::VA_API_MEDIA_SURFACE_NOT_ACQUIRED]
	Enum [cl::VA_API_MEDIA_SURFACE_ALREADY_ACQUIRED]
	Enum [cl::INVALID_VA_API_MEDIA_SURFACE]
	Enum [cl::INVALID_VA_API_MEDIA_ADAPTER]
	Enum [cl::VA_API_DISPLAY]
	Enum [cl::PREFERRED_DEVICES_FOR_VA_API]
	Enum [cl::ALL_DEVICES_FOR_VA_API]
	Enum [cl::CONTEXT_VA_API_DISPLAY]
	Enum [cl::MEM_VA_API_MEDIA_SURFACE]
	Enum [cl::IMAGE_VA_API_PLANE]
	Enum [cl::COMMAND_ACQUIRE_VA_API_MEDIA_SURFACES]
	Enum [cl::COMMAND_RELEASE_VA_API_MEDIA_SURFACES]
	Func [cl::GetDeviceIDsFromVA_APIMediaAdapter + INTEL]
	Func [cl::CreateFromVA_APIMediaSurface + INTEL]
	Func [cl::EnqueueAcquireVA_APIMediaSurfaces + INTEL]
	Func [cl::EnqueueReleaseVA_APIMediaSurfaces + INTEL]

# cl3dImageWritesKHR (cl_khr_3d_image_writes)

# clAsyncWorkGroupCopyFenceKHR (cl_khr_async_work_group_copy_fence)

# clByteAddressableStoreKHR (cl_khr_byte_addressable_store)

# clCommandBufferKHR (cl_khr_command_buffer)
	Enum [cl::INCOMPATIBLE_COMMAND_QUEUE]
	Enum [cl::INVALID_SYNC_POINT_WAIT_LIST]
	Enum [cl::INVALID_COMMAND_BUFFER]
	Enum [cl::COMMAND_BUFFER_STATE_RECORDING]
	Enum [cl::COMMAND_BUFFER_CAPABILITY_KERNEL_PRINTF]
	Enum [cl::COMMAND_BUFFER_SIMULTANEOUS_USE]
	Enum [cl::COMMAND_BUFFER_STATE_EXECUTABLE]
	Enum [cl::COMMAND_BUFFER_CAPABILITY_DEVICE_SIDE_ENQUEUE]
	Enum [cl::COMMAND_BUFFER_STATE_PENDING]
	Enum [cl::COMMAND_BUFFER_CAPABILITY_SIMULTANEOUS_USE]
	Enum [cl::COMMAND_BUFFER_CAPABILITY_OUT_OF_ORDER]
	Enum [cl::COMMAND_BUFFER_FLAGS]
	Enum [cl::COMMAND_BUFFER_QUEUES]
	Enum [cl::COMMAND_BUFFER_NUM_QUEUES]
	Enum [cl::COMMAND_BUFFER_REFERENCE_COUNT]
	Enum [cl::COMMAND_BUFFER_STATE]
	Enum [cl::COMMAND_BUFFER_PROPERTIES_ARRAY]
	Enum [cl::COMMAND_BUFFER_CONTEXT]
	Enum [cl::COMMAND_COMMAND_BUFFER]
	Enum [cl::DEVICE_COMMAND_BUFFER_CAPABILITIES]
	Enum [cl::DEVICE_COMMAND_BUFFER_REQUIRED_QUEUE_PROPERTIES]
	Func [cl::CreateCommandBuffer + KHR]
	Func [cl::FinalizeCommandBuffer + KHR]
	Func [cl::RetainCommandBuffer + KHR]
	Func [cl::ReleaseCommandBuffer + KHR]
	Func [cl::EnqueueCommandBuffer + KHR]
	Func [cl::CommandBarrierWithWaitList + KHR]
	Func [cl::CommandCopyBuffer + KHR]
	Func [cl::CommandCopyBufferRect + KHR]
	Func [cl::CommandCopyBufferToImage + KHR]
	Func [cl::CommandCopyImage + KHR]
	Func [cl::CommandCopyImageToBuffer + KHR]
	Func [cl::CommandFillBuffer + KHR]
	Func [cl::CommandFillImage + KHR]
	Func [cl::CommandNDRangeKernel + KHR]
	Func [cl::GetCommandBufferInfo + KHR]
	Func [cl::CommandSVMMemcpy + KHR]
	Func [cl::CommandSVMMemFill + KHR]

# clCommandBufferMultiDeviceKHR (cl_khr_command_buffer_multi_device)
	Enum [cl::COMMAND_BUFFER_PLATFORM_UNIVERSAL_SYNC]
	Enum [cl::COMMAND_BUFFER_PLATFORM_REMAP_QUEUES]
	Enum [cl::COMMAND_BUFFER_PLATFORM_AUTOMATIC_REMAP]
	Enum [cl::COMMAND_BUFFER_DEVICE_SIDE_SYNC]
	Enum [cl::COMMAND_BUFFER_CAPABILITY_MULTIPLE_QUEUE]
	Enum [cl::PLATFORM_COMMAND_BUFFER_CAPABILITIES]
	Enum [cl::DEVICE_COMMAND_BUFFER_NUM_SYNC_DEVICES]
	Enum [cl::DEVICE_COMMAND_BUFFER_SYNC_DEVICES]
	Func [cl::RemapCommandBuffer + KHR]

# clCommandBufferMutableDispatchKHR (cl_khr_command_buffer_mutable_dispatch)
	Enum [cl::INVALID_MUTABLE_COMMAND]
	Enum [cl::STRUCTURE_TYPE_MUTABLE_DISPATCH_CONFIG]
	Enum [cl::MUTABLE_DISPATCH_GLOBAL_OFFSET]
	Enum [cl::MUTABLE_DISPATCH_ASSERT_NO_ADDITIONAL_WORK_GROUPS]
	Enum [cl::COMMAND_BUFFER_MUTABLE]
	Enum [cl::MUTABLE_DISPATCH_GLOBAL_SIZE]
	Enum [cl::MUTABLE_DISPATCH_LOCAL_SIZE]
	Enum [cl::MUTABLE_DISPATCH_ARGUMENTS]
	Enum [cl::MUTABLE_DISPATCH_EXEC_INFO]
	Enum [cl::MUTABLE_COMMAND_COMMAND_QUEUE]
	Enum [cl::MUTABLE_COMMAND_COMMAND_BUFFER]
	Enum [cl::MUTABLE_COMMAND_PROPERTIES_ARRAY]
	Enum [cl::MUTABLE_DISPATCH_KERNEL]
	Enum [cl::MUTABLE_DISPATCH_DIMENSIONS]
	Enum [cl::MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET]
	Enum [cl::MUTABLE_DISPATCH_GLOBAL_WORK_SIZE]
	Enum [cl::MUTABLE_DISPATCH_LOCAL_WORK_SIZE]
	Enum [cl::MUTABLE_COMMAND_COMMAND_TYPE]
	Enum [cl::DEVICE_MUTABLE_DISPATCH_CAPABILITIES]
	Enum [cl::MUTABLE_DISPATCH_UPDATABLE_FIELDS]
	Enum [cl::COMMAND_BUFFER_MUTABLE_DISPATCH_ASSERTS]
	Enum [cl::MUTABLE_DISPATCH_ASSERTS]
	Func [cl::UpdateMutableCommands + KHR]
	Func [cl::GetMutableCommandInfo + KHR]

# clCreateCommandQueueKHR (cl_khr_create_command_queue)
	Func [cl::CreateCommandQueueWithProperties + KHR]

# clD3d10SharingKHR (cl_khr_d3d10_sharing)
	Enum [cl::D3D10_RESOURCE_NOT_ACQUIRED]
	Enum [cl::D3D10_RESOURCE_ALREADY_ACQUIRED]
	Enum [cl::INVALID_D3D10_RESOURCE]
	Enum [cl::INVALID_D3D10_DEVICE]
	Enum [cl::D3D10_DEVICE]
	Enum [cl::D3D10_DXGI_ADAPTER]
	Enum [cl::PREFERRED_DEVICES_FOR_D3D10]
	Enum [cl::ALL_DEVICES_FOR_D3D10]
	Enum [cl::CONTEXT_D3D10_DEVICE]
	Enum [cl::MEM_D3D10_RESOURCE]
	Enum [cl::IMAGE_D3D10_SUBRESOURCE]
	Enum [cl::COMMAND_ACQUIRE_D3D10_OBJECTS]
	Enum [cl::COMMAND_RELEASE_D3D10_OBJECTS]
	Enum [cl::CONTEXT_D3D10_PREFER_SHARED_RESOURCES]
	Func [cl::GetDeviceIDsFromD3D10 + KHR]
	Func [cl::CreateFromD3D10Buffer + KHR]
	Func [cl::CreateFromD3D10Texture2D + KHR]
	Func [cl::CreateFromD3D10Texture3D + KHR]
	Func [cl::EnqueueAcquireD3D10Objects + KHR]
	Func [cl::EnqueueReleaseD3D10Objects + KHR]

# clD3d11SharingKHR (cl_khr_d3d11_sharing)
	Enum [cl::D3D11_RESOURCE_NOT_ACQUIRED]
	Enum [cl::D3D11_RESOURCE_ALREADY_ACQUIRED]
	Enum [cl::INVALID_D3D11_RESOURCE]
	Enum [cl::INVALID_D3D11_DEVICE]
	Enum [cl::D3D11_DEVICE]
	Enum [cl::D3D11_DXGI_ADAPTER]
	Enum [cl::PREFERRED_DEVICES_FOR_D3D11]
	Enum [cl::ALL_DEVICES_FOR_D3D11]
	Enum [cl::CONTEXT_D3D11_DEVICE]
	Enum [cl::MEM_D3D11_RESOURCE]
	Enum [cl::IMAGE_D3D11_SUBRESOURCE]
	Enum [cl::COMMAND_ACQUIRE_D3D11_OBJECTS]
	Enum [cl::COMMAND_RELEASE_D3D11_OBJECTS]
	Enum [cl::CONTEXT_D3D11_PREFER_SHARED_RESOURCES]
	Func [cl::GetDeviceIDsFromD3D11 + KHR]
	Func [cl::CreateFromD3D11Buffer + KHR]
	Func [cl::CreateFromD3D11Texture2D + KHR]
	Func [cl::CreateFromD3D11Texture3D + KHR]
	Func [cl::EnqueueAcquireD3D11Objects + KHR]
	Func [cl::EnqueueReleaseD3D11Objects + KHR]

# clDepthImagesKHR (cl_khr_depth_images)
	Enum [cl::DEPTH]

# clDeviceEnqueueLocalArgTypesKHR (cl_khr_device_enqueue_local_arg_types)

# clDeviceUuidKHR (cl_khr_device_uuid)
	Enum [cl::LUID_SIZE]
	Enum [cl::UUID_SIZE]
	Enum [cl::DEVICE_UUID]
	Enum [cl::DRIVER_UUID]
	Enum [cl::DEVICE_LUID_VALID]
	Enum [cl::DEVICE_LUID]
	Enum [cl::DEVICE_NODE_MASK]

# clDx9MediaSharingKHR (cl_khr_dx9_media_sharing)
	Enum [cl::DX9_MEDIA_SURFACE_NOT_ACQUIRED]
	Enum [cl::DX9_MEDIA_SURFACE_ALREADY_ACQUIRED]
	Enum [cl::INVALID_DX9_MEDIA_SURFACE]
	Enum [cl::INVALID_DX9_MEDIA_ADAPTER]
	Enum [cl::ADAPTER_D3D9]
	Enum [cl::ADAPTER_D3D9EX]
	Enum [cl::ADAPTER_DXVA]
	Enum [cl::PREFERRED_DEVICES_FOR_DX9_MEDIA_ADAPTER]
	Enum [cl::ALL_DEVICES_FOR_DX9_MEDIA_ADAPTER]
	Enum [cl::CONTEXT_ADAPTER_D3D9]
	Enum [cl::CONTEXT_ADAPTER_D3D9EX]
	Enum [cl::CONTEXT_ADAPTER_DXVA]
	Enum [cl::MEM_DX9_MEDIA_ADAPTER_TYPE]
	Enum [cl::MEM_DX9_MEDIA_SURFACE_INFO]
	Enum [cl::IMAGE_DX9_MEDIA_PLANE]
	Enum [cl::COMMAND_ACQUIRE_DX9_MEDIA_SURFACES]
	Enum [cl::COMMAND_RELEASE_DX9_MEDIA_SURFACES]
	Func [cl::GetDeviceIDsFromDX9MediaAdapter + KHR]
	Func [cl::CreateFromDX9MediaSurface + KHR]
	Func [cl::EnqueueAcquireDX9MediaSurfaces + KHR]
	Func [cl::EnqueueReleaseDX9MediaSurfaces + KHR]

# clEglEventKHR (cl_khr_egl_event)
	Func [cl::CreateEventFromEGLSync + KHR]

# clEglImageKHR (cl_khr_egl_image)
	Enum [cl::INVALID_EGL_OBJECT]
	Enum [cl::EGL_RESOURCE_NOT_ACQUIRED]
	Enum [cl::COMMAND_ACQUIRE_EGL_OBJECTS]
	Enum [cl::COMMAND_RELEASE_EGL_OBJECTS]
	Enum [cl::COMMAND_EGL_FENCE_SYNC_OBJECT]
	Func [cl::CreateFromEGLImage + KHR]
	Func [cl::EnqueueAcquireEGLObjects + KHR]
	Func [cl::EnqueueReleaseEGLObjects + KHR]

# clExpectAssumeKHR (cl_khr_expect_assume)

# clExtendedAsyncCopiesKHR (cl_khr_extended_async_copies)

# clExtendedBitOpsKHR (cl_khr_extended_bit_ops)

# clExtendedVersioningKHR (cl_khr_extended_versioning)
	Enum [cl::VERSION_MAJOR_BITS]
	Enum [cl::VERSION_MINOR_BITS]
	Enum [cl::VERSION_PATCH_BITS]
	Enum [cl::NAME_VERSION_MAX_NAME_SIZE]
	Enum [cl::PLATFORM_NUMERIC_VERSION]
	Enum [cl::PLATFORM_EXTENSIONS_WITH_VERSION]
	Enum [cl::DEVICE_NUMERIC_VERSION]
	Enum [cl::DEVICE_OPENCL_C_NUMERIC_VERSION]
	Enum [cl::DEVICE_EXTENSIONS_WITH_VERSION]
	Enum [cl::DEVICE_ILS_WITH_VERSION]
	Enum [cl::DEVICE_BUILT_IN_KERNELS_WITH_VERSION]

# clExternalMemoryKHR (cl_khr_external_memory)
	Enum [cl::MEM_DEVICE_HANDLE_LIST_END]
	Enum [cl::PLATFORM_EXTERNAL_MEMORY_IMPORT_HANDLE_TYPES]
	Enum [cl::COMMAND_ACQUIRE_EXTERNAL_MEM_OBJECTS]
	Enum [cl::COMMAND_RELEASE_EXTERNAL_MEM_OBJECTS]
	Enum [cl::DEVICE_EXTERNAL_MEMORY_IMPORT_HANDLE_TYPES]
	Enum [cl::MEM_DEVICE_HANDLE_LIST]
	Enum [cl::DEVICE_EXTERNAL_MEMORY_IMPORT_ASSUME_LINEAR_IMAGES_HANDLE_TYPES]
	Func [cl::EnqueueAcquireExternalMemObjects + KHR]
	Func [cl::EnqueueReleaseExternalMemObjects + KHR]

# clExternalMemoryDmaBufKHR (cl_khr_external_memory_dma_buf)
	Enum [cl::EXTERNAL_MEMORY_HANDLE_DMA_BUF]

# clExternalMemoryOpaqueFdKHR (cl_khr_external_memory_opaque_fd)
	Enum [cl::EXTERNAL_MEMORY_HANDLE_OPAQUE_FD]

# clExternalMemoryWin32KHR (cl_khr_external_memory_win32)
	Enum [cl::EXTERNAL_MEMORY_HANDLE_OPAQUE_WIN32]
	Enum [cl::EXTERNAL_MEMORY_HANDLE_OPAQUE_WIN32_KMT]
	Enum [cl::EXTERNAL_MEMORY_HANDLE_OPAQUE_WIN32_NAME]

# clExternalSemaphoreKHR (cl_khr_external_semaphore)
	Enum [cl::SEMAPHORE_EXPORT_HANDLE_TYPES_LIST_END]
	Enum [cl::PLATFORM_SEMAPHORE_IMPORT_HANDLE_TYPES]
	Enum [cl::PLATFORM_SEMAPHORE_EXPORT_HANDLE_TYPES]
	Enum [cl::SEMAPHORE_EXPORT_HANDLE_TYPES]
	Enum [cl::DEVICE_SEMAPHORE_IMPORT_HANDLE_TYPES]
	Enum [cl::DEVICE_SEMAPHORE_EXPORT_HANDLE_TYPES]
	Enum [cl::SEMAPHORE_EXPORTABLE]
	Func [cl::GetSemaphoreHandleForType + KHR]

# clExternalSemaphoreOpaqueFdKHR (cl_khr_external_semaphore_opaque_fd)
	Enum [cl::SEMAPHORE_HANDLE_OPAQUE_FD]

# clExternalSemaphoreSyncFdKHR (cl_khr_external_semaphore_sync_fd)
	Enum [cl::SEMAPHORE_HANDLE_SYNC_FD]
	Func [cl::ReImportSemaphoreSyncFd + KHR]

# clExternalSemaphoreWin32KHR (cl_khr_external_semaphore_win32)
	Enum [cl::SEMAPHORE_HANDLE_OPAQUE_WIN32]
	Enum [cl::SEMAPHORE_HANDLE_OPAQUE_WIN32_KMT]
	Enum [cl::SEMAPHORE_HANDLE_OPAQUE_WIN32_NAME]

# clFp16KHR (cl_khr_fp16)
	Enum [cl::DEVICE_HALF_FP_CONFIG]

# clFp64KHR (cl_khr_fp64)
	Enum [cl::DEVICE_DOUBLE_FP_CONFIG]

# clGLDepthImagesKHR (cl_khr_gl_depth_images)
	Enum [cl::DEPTH_STENCIL]
	Enum [cl::UNORM_INT24]

# clGLEventKHR (cl_khr_gl_event)
	Enum [cl::COMMAND_GL_FENCE_SYNC_OBJECT]
	Func [cl::CreateEventFromGLsync + KHR]

# clGlMsaaSharingKHR (cl_khr_gl_msaa_sharing)
	Enum [cl::GL_NUM_SAMPLES]

# clGlobalInt32BaseAtomicsKHR (cl_khr_global_int32_base_atomics)

# clGlobalInt32ExtendedAtomicsKHR (cl_khr_global_int32_extended_atomics)

# clGLSharingKHR (cl_khr_gl_sharing)
	Enum [cl::INVALID_GL_SHAREGROUP_REFERENCE]
	Enum [cl::GL_OBJECT_BUFFER]
	Enum [cl::GL_OBJECT_TEXTURE2D]
	Enum [cl::GL_OBJECT_TEXTURE3D]
	Enum [cl::GL_OBJECT_RENDERBUFFER]
	Enum [cl::GL_TEXTURE_TARGET]
	Enum [cl::GL_MIPMAP_LEVEL]
	Enum [cl::CURRENT_DEVICE_FOR_GL_CONTEXT]
	Enum [cl::DEVICES_FOR_GL_CONTEXT]
	Enum [cl::GL_CONTEXT]
	Enum [cl::EGL_DISPLAY]
	Enum [cl::GLX_DISPLAY]
	Enum [cl::WGL_HDC]
	Enum [cl::CGL_SHAREGROUP]
	Enum [cl::GL_OBJECT_TEXTURE2D_ARRAY]
	Enum [cl::GL_OBJECT_TEXTURE1D]
	Enum [cl::GL_OBJECT_TEXTURE1D_ARRAY]
	Enum [cl::GL_OBJECT_TEXTURE_BUFFER]
	Func [cl::GetGLContextInfo + KHR]
	Func [cl::CreateFromGLBuffer]
	Func [cl::CreateFromGLTexture]
	Func [cl::CreateFromGLRenderbuffer]
	Func [cl::GetGLObjectInfo]
	Func [cl::GetGLTextureInfo]
	Func [cl::EnqueueAcquireGLObjects]
	Func [cl::EnqueueReleaseGLObjects]
	Func [cl::CreateFromGLTexture2D]
	Func [cl::CreateFromGLTexture3D]

# clIcdKHR (cl_khr_icd)
	Enum [cl::PLATFORM_NOT_FOUND]
	Enum [cl::PLATFORM_ICD_SUFFIX]
	Func [cl::IcdGetPlatformIDs + KHR]

# clIlProgramKHR (cl_khr_il_program)
	Enum [cl::DEVICE_IL_VERSION]
	Enum [cl::PROGRAM_IL]
	Func [cl::CreateProgramWithIL + KHR]

# clImage2dFromBufferKHR (cl_khr_image2d_from_buffer)
	Enum [cl::DEVICE_IMAGE_PITCH_ALIGNMENT]
	Enum [cl::DEVICE_IMAGE_BASE_ADDRESS_ALIGNMENT]

# clInitializeMemoryKHR (cl_khr_initialize_memory)
	Enum [cl::CONTEXT_MEMORY_INITIALIZE_LOCAL]
	Enum [cl::CONTEXT_MEMORY_INITIALIZE_PRIVATE]
	Enum [cl::CONTEXT_MEMORY_INITIALIZE]

# clInt64BaseAtomicsKHR (cl_khr_int64_base_atomics)

# clInt64ExtendedAtomicsKHR (cl_khr_int64_extended_atomics)

# clIntegerDotProductKHR (cl_khr_integer_dot_product)
	Enum [cl::DEVICE_INTEGER_DOT_PRODUCT_INPUT_4x8BIT_PACKED]
	Enum [cl::DEVICE_INTEGER_DOT_PRODUCT_INPUT_4x8BIT]
	Enum [cl::DEVICE_INTEGER_DOT_PRODUCT_CAPABILITIES]
	Enum [cl::DEVICE_INTEGER_DOT_PRODUCT_ACCELERATION_PROPERTIES_8BIT]
	Enum [cl::DEVICE_INTEGER_DOT_PRODUCT_ACCELERATION_PROPERTIES_4x8BIT_PACKED]

# clKernelClockKHR (cl_khr_kernel_clock)
	Enum [cl::DEVICE_KERNEL_CLOCK_SCOPE_DEVICE]
	Enum [cl::DEVICE_KERNEL_CLOCK_SCOPE_WORK_GROUP]
	Enum [cl::DEVICE_KERNEL_CLOCK_SCOPE_SUB_GROUP]
	Enum [cl::DEVICE_KERNEL_CLOCK_CAPABILITIES]

# clLocalInt32BaseAtomicsKHR (cl_khr_local_int32_base_atomics)

# clLocalInt32ExtendedAtomicsKHR (cl_khr_local_int32_extended_atomics)

# clMipmapImageKHR (cl_khr_mipmap_image)
	Enum [cl::SAMPLER_MIP_FILTER_MODE]
	Enum [cl::SAMPLER_LOD_MIN]
	Enum [cl::SAMPLER_LOD_MAX]

# clMipmapImageWritesKHR (cl_khr_mipmap_image_writes)

# clPciBusInfoKHR (cl_khr_pci_bus_info)
	Enum [cl::DEVICE_PCI_BUS_INFO]

# clPriorityHintsKHR (cl_khr_priority_hints)
	Enum [cl::QUEUE_PRIORITY_HIGH]
	Enum [cl::QUEUE_PRIORITY_MED]
	Enum [cl::QUEUE_PRIORITY_LOW]
	Enum [cl::QUEUE_PRIORITY]

# clSelectFproundingModeKHR (cl_khr_select_fprounding_mode)

# clSemaphoreKHR (cl_khr_semaphore)
	Enum [cl::INVALID_SEMAPHORE]
	Enum [cl::SEMAPHORE_DEVICE_HANDLE_LIST_END]
	Enum [cl::SEMAPHORE_TYPE_BINARY]
	Enum [cl::PLATFORM_SEMAPHORE_TYPES]
	Enum [cl::SEMAPHORE_CONTEXT]
	Enum [cl::SEMAPHORE_REFERENCE_COUNT]
	Enum [cl::SEMAPHORE_PROPERTIES]
	Enum [cl::SEMAPHORE_PAYLOAD]
	Enum [cl::SEMAPHORE_TYPE]
	Enum [cl::COMMAND_SEMAPHORE_WAIT]
	Enum [cl::COMMAND_SEMAPHORE_SIGNAL]
	Enum [cl::DEVICE_SEMAPHORE_TYPES]
	Enum [cl::SEMAPHORE_DEVICE_HANDLE_LIST]
	Func [cl::CreateSemaphoreWithProperties + KHR]
	Func [cl::EnqueueWaitSemaphores + KHR]
	Func [cl::EnqueueSignalSemaphores + KHR]
	Func [cl::GetSemaphoreInfo + KHR]
	Func [cl::ReleaseSemaphore + KHR]
	Func [cl::RetainSemaphore + KHR]

# clSpirKHR (cl_khr_spir)
	Enum [cl::DEVICE_SPIR_VERSIONS]
	Enum [cl::PROGRAM_BINARY_TYPE_INTERMEDIATE]

# clSpirvExtendedDebugInfoKHR (cl_khr_spirv_extended_debug_info)

# clSpirvLinkonceOdrKHR (cl_khr_spirv_linkonce_odr)

# clSpirvNoIntegerWrapDecorationKHR (cl_khr_spirv_no_integer_wrap_decoration)

# clSrgbImageWritesKHR (cl_khr_srgb_image_writes)

# clSubgroupBallotKHR (cl_khr_subgroup_ballot)

# clSubgroupClusteredReduceKHR (cl_khr_subgroup_clustered_reduce)

# clSubgroupExtendedTypesKHR (cl_khr_subgroup_extended_types)

# clSubgroupNamedBarrierKHR (cl_khr_subgroup_named_barrier)
	Enum [cl::DEVICE_MAX_NAMED_BARRIER_COUNT]

# clSubgroupNonUniformArithmeticKHR (cl_khr_subgroup_non_uniform_arithmetic)

# clSubgroupNonUniformVoteKHR (cl_khr_subgroup_non_uniform_vote)

# clSubgroupRotateKHR (cl_khr_subgroup_rotate)

# clSubgroupsKHR (cl_khr_subgroups)
	Enum [cl::KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE]
	Enum [cl::KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE]
	Func [cl::GetKernelSubGroupInfo + KHR]

# clSubgroupShuffleKHR (cl_khr_subgroup_shuffle)

# clSubgroupShuffleRelativeKHR (cl_khr_subgroup_shuffle_relative)

# clSuggestedLocalWorkSizeKHR (cl_khr_suggested_local_work_size)
	Func [cl::GetKernelSuggestedLocalWorkSize + KHR]

# clTerminateContextKHR (cl_khr_terminate_context)
	Enum [cl::CONTEXT_TERMINATED]
	Enum [cl::DEVICE_TERMINATE_CAPABILITY_CONTEXT]
	Enum [cl::DEVICE_TERMINATE_CAPABILITY]
	Enum [cl::CONTEXT_TERMINATE]
	Func [cl::TerminateContext + KHR]

# clThrottleHintsKHR (cl_khr_throttle_hints)
	Enum [cl::QUEUE_THROTTLE_HIGH]
	Enum [cl::QUEUE_THROTTLE_MED]
	Enum [cl::QUEUE_THROTTLE_LOW]
	Enum [cl::QUEUE_THROTTLE]

# clWorkGroupUniformArithmeticKHR (cl_khr_work_group_uniform_arithmetic)

# clDeviceAttributeQueryNV (cl_nv_device_attribute_query)
	Enum [cl::DEVICE_COMPUTE_CAPABILITY_MAJOR]
	Enum [cl::DEVICE_COMPUTE_CAPABILITY_MINOR]
	Enum [cl::DEVICE_REGISTERS_PER_BLOCK]
	Enum [cl::DEVICE_WARP_SIZE]
	Enum [cl::DEVICE_GPU_OVERLAP]
	Enum [cl::DEVICE_KERNEL_EXEC_TIMEOUT]
	Enum [cl::DEVICE_INTEGRATED_MEMORY]

# clContentSizePOCL (cl_pocl_content_size)
	Func [cl::SetContentSizeBuffer + PoCL]

# clAndroidNativeBufferHostPtrQCOM (cl_qcom_android_native_buffer_host_ptr)
	Enum [cl::MEM_ANDROID_NATIVE_BUFFER_HOST_PTR]

# clExtHostPtrQCOM (cl_qcom_ext_host_ptr)
	Enum [cl::IMAGE_ROW_PITCH]
	Enum [cl::IMAGE_SLICE_PITCH]
	Enum [cl::DEVICE_EXT_MEM_PADDING_IN_BYTES]
	Enum [cl::DEVICE_PAGE_SIZE]
	Enum [cl::IMAGE_ROW_ALIGNMENT]
	Enum [cl::IMAGE_SLICE_ALIGNMENT]
	Enum [cl::MEM_HOST_UNCACHED]
	Enum [cl::MEM_HOST_WRITEBACK]
	Enum [cl::MEM_HOST_WRITETHROUGH]
	Enum [cl::MEM_HOST_WRITE_COMBINING]
	Enum [cl::MEM_EXT_HOST_PTR]
	Func [cl::GetDeviceImageInfo + QCOM]

# clExtHostPtrIocoherentQCOM (cl_qcom_ext_host_ptr_iocoherent)
	Enum [cl::MEM_HOST_IOCOHERENT]

# clIonHostPtrQCOM (cl_qcom_ion_host_ptr)
	Enum [cl::MEM_ION_HOST_PTR]


