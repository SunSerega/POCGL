  
  
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_loader_info
  clLoaderInfo = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clLoaderInfo(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_loader_info';
    
    public GetICDLoaderInfoOCLICD_adr := GetProcAddress('clGetICDLoaderInfoOCLICD');
    private ntv_GetICDLoaderInfoOCLICD_1 := GetProcOrNil&<function(param_name: clIcdlInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetICDLoaderInfoOCLICD_adr);
    private ntv_GetICDLoaderInfoOCLICD_2 := GetProcOrNil&<function(param_name: clIcdlInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetICDLoaderInfoOCLICD_adr);
    private ntv_GetICDLoaderInfoOCLICD_3 := GetProcOrNil&<function(param_name: clIcdlInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetICDLoaderInfoOCLICD_adr);
    private ntv_GetICDLoaderInfoOCLICD_4 := GetProcOrNil&<function(param_name: clIcdlInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetICDLoaderInfoOCLICD_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD<T>(param_name: clIcdlInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetICDLoaderInfoOCLICD_1(param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD<T>(param_name: clIcdlInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetICDLoaderInfoOCLICD_2(param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD(param_name: clIcdlInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetICDLoaderInfoOCLICD_3(param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD(param_name: clIcdlInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetICDLoaderInfoOCLICD_4(param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD_ICDL_OCL_VERSION(var param_value: string): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetICDLoaderInfoOCLICD_3(clIcdlInfo.ICDL_OCL_VERSION, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := Marshal.AllocHGlobal(IntPtr(param_value_sz.ToPointer));
      try
        Result := ntv_GetICDLoaderInfoOCLICD_4(clIcdlInfo.ICDL_OCL_VERSION, param_value_sz,param_value_temp_res.ToPointer,IntPtr.Zero);
        param_value := Marshal.PtrToStringAnsi(param_value_temp_res);
      finally
        Marshal.FreeHGlobal(param_value_temp_res);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD_ICDL_VERSION(var param_value: string): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetICDLoaderInfoOCLICD_3(clIcdlInfo.ICDL_VERSION, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := Marshal.AllocHGlobal(IntPtr(param_value_sz.ToPointer));
      try
        Result := ntv_GetICDLoaderInfoOCLICD_4(clIcdlInfo.ICDL_VERSION, param_value_sz,param_value_temp_res.ToPointer,IntPtr.Zero);
        param_value := Marshal.PtrToStringAnsi(param_value_temp_res);
      finally
        Marshal.FreeHGlobal(param_value_temp_res);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD_ICDL_NAME(var param_value: string): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetICDLoaderInfoOCLICD_3(clIcdlInfo.ICDL_NAME, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := Marshal.AllocHGlobal(IntPtr(param_value_sz.ToPointer));
      try
        Result := ntv_GetICDLoaderInfoOCLICD_4(clIcdlInfo.ICDL_NAME, param_value_sz,param_value_temp_res.ToPointer,IntPtr.Zero);
        param_value := Marshal.PtrToStringAnsi(param_value_temp_res);
      finally
        Marshal.FreeHGlobal(param_value_temp_res);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetICDLoaderInfoOCLICD_ICDL_VENDOR(var param_value: string): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetICDLoaderInfoOCLICD_3(clIcdlInfo.ICDL_VENDOR, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := Marshal.AllocHGlobal(IntPtr(param_value_sz.ToPointer));
      try
        Result := ntv_GetICDLoaderInfoOCLICD_4(clIcdlInfo.ICDL_VENDOR, param_value_sz,param_value_temp_res.ToPointer,IntPtr.Zero);
        param_value := Marshal.PtrToStringAnsi(param_value_temp_res);
      finally
        Marshal.FreeHGlobal(param_value_temp_res);
      end;
    end;
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_loader_layers
  clLoaderLayers = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clLoaderLayers(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_loader_layers';
    
    public GetLayerInfo_adr := GetProcAddress('clGetLayerInfo');
    private ntv_GetLayerInfo_1 := GetProcOrNil&<function(param_name: clLayerInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetLayerInfo_adr);
    private ntv_GetLayerInfo_2 := GetProcOrNil&<function(param_name: clLayerInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetLayerInfo_adr);
    private ntv_GetLayerInfo_3 := GetProcOrNil&<function(param_name: clLayerInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetLayerInfo_adr);
    private ntv_GetLayerInfo_4 := GetProcOrNil&<function(param_name: clLayerInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetLayerInfo_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo<T>(param_name: clLayerInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetLayerInfo_1(param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo<T>(param_name: clLayerInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetLayerInfo_2(param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo(param_name: clLayerInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetLayerInfo_3(param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo(param_name: clLayerInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetLayerInfo_4(param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo_LAYER_API_VERSION(var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetLayerInfo(clLayerInfo.LAYER_API_VERSION, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetLayerInfo_LAYER_NAME(var param_value: string): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetLayerInfo_3(clLayerInfo.LAYER_NAME, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := Marshal.AllocHGlobal(IntPtr(param_value_sz.ToPointer));
      try
        Result := ntv_GetLayerInfo_4(clLayerInfo.LAYER_NAME, param_value_sz,param_value_temp_res.ToPointer,IntPtr.Zero);
        param_value := Marshal.PtrToStringAnsi(param_value_temp_res);
      finally
        Marshal.FreeHGlobal(param_value_temp_res);
      end;
    end;
    
    public InitLayer_adr := GetProcAddress('clInitLayer');
    private ntv_InitLayer_1 := GetProcOrNil&<function(num_entries: UInt32; target_dispatch: cl_icd_dispatch; var num_entries_ret: UInt32; var layer_dispatch_ret: cl_icd_dispatch): clErrorCode>(InitLayer_adr);
    private ntv_InitLayer_2 := GetProcOrNil&<function(num_entries: UInt32; target_dispatch: cl_icd_dispatch; var num_entries_ret: UInt32; layer_dispatch_ret: IntPtr): clErrorCode>(InitLayer_adr);
    private ntv_InitLayer_3 := GetProcOrNil&<function(num_entries: UInt32; target_dispatch: cl_icd_dispatch; num_entries_ret: IntPtr; var layer_dispatch_ret: cl_icd_dispatch): clErrorCode>(InitLayer_adr);
    private ntv_InitLayer_4 := GetProcOrNil&<function(num_entries: UInt32; target_dispatch: cl_icd_dispatch; num_entries_ret: IntPtr; layer_dispatch_ret: IntPtr): clErrorCode>(InitLayer_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function InitLayer(num_entries: UInt32; target_dispatch: cl_icd_dispatch; var num_entries_ret: UInt32; var layer_dispatch_ret: cl_icd_dispatch): clErrorCode :=
      ntv_InitLayer_1(num_entries, target_dispatch, num_entries_ret, layer_dispatch_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function InitLayer(num_entries: UInt32; target_dispatch: cl_icd_dispatch; var num_entries_ret: UInt32; layer_dispatch_ret: IntPtr): clErrorCode :=
      ntv_InitLayer_2(num_entries, target_dispatch, num_entries_ret, layer_dispatch_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function InitLayer(num_entries: UInt32; target_dispatch: cl_icd_dispatch; num_entries_ret: IntPtr; var layer_dispatch_ret: cl_icd_dispatch): clErrorCode :=
      ntv_InitLayer_3(num_entries, target_dispatch, num_entries_ret, layer_dispatch_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function InitLayer(num_entries: UInt32; target_dispatch: cl_icd_dispatch; num_entries_ret: IntPtr; layer_dispatch_ret: IntPtr): clErrorCode :=
      ntv_InitLayer_4(num_entries, target_dispatch, num_entries_ret, layer_dispatch_ret);
    
  end;
  
  /// id: cl_amd_device_attribute_query
  clDeviceAttributeQueryAMD = static class
    public const ExtensionString = 'cl_amd_device_attribute_query';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_APPLE_ContextLoggingFunctions
  clContextLoggingFunctionsAPPLE = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clContextLoggingFunctionsAPPLE(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_APPLE_ContextLoggingFunctions';
    
    public LogMessagesToSystemLogAPPLE_adr := GetProcAddress('clLogMessagesToSystemLogAPPLE');
    private ntv_LogMessagesToSystemLogAPPLE_1 := GetProcOrNil&<procedure(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr)>(LogMessagesToSystemLogAPPLE_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToSystemLogAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var errstr_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
      try
        ntv_LogMessagesToSystemLogAPPLE_1(errstr_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(errstr_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToSystemLogAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
      ntv_LogMessagesToSystemLogAPPLE_1(errstr, private_info, cb, user_data);
    
    public LogMessagesToStdoutAPPLE_adr := GetProcAddress('clLogMessagesToStdoutAPPLE');
    private ntv_LogMessagesToStdoutAPPLE_1 := GetProcOrNil&<procedure(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr)>(LogMessagesToStdoutAPPLE_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToStdoutAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var errstr_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
      try
        ntv_LogMessagesToStdoutAPPLE_1(errstr_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(errstr_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToStdoutAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
      ntv_LogMessagesToStdoutAPPLE_1(errstr, private_info, cb, user_data);
    
    public LogMessagesToStderrAPPLE_adr := GetProcAddress('clLogMessagesToStderrAPPLE');
    private ntv_LogMessagesToStderrAPPLE_1 := GetProcOrNil&<procedure(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr)>(LogMessagesToStderrAPPLE_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToStderrAPPLE(errstr: string; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr);
    begin
      var errstr_str_ptr := Marshal.StringToHGlobalAnsi(errstr);
      try
        ntv_LogMessagesToStderrAPPLE_1(errstr_str_ptr, private_info, cb, user_data);
      finally
        Marshal.FreeHGlobal(errstr_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure LogMessagesToStderrAPPLE(errstr: IntPtr; private_info: IntPtr; cb: UIntPtr; user_data: IntPtr) :=
      ntv_LogMessagesToStderrAPPLE_1(errstr, private_info, cb, user_data);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_APPLE_SetMemObjectDestructor
  clSetMemObjectDestructorAPPLE = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSetMemObjectDestructorAPPLE(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_APPLE_SetMemObjectDestructor';
    
    public SetMemObjectDestructorAPPLE_adr := GetProcAddress('clSetMemObjectDestructorAPPLE');
    private ntv_SetMemObjectDestructorAPPLE_1 := GetProcOrNil&<function(memobj: cl_mem; pfn_notify: clMemObjectDestructorCallback; user_data: IntPtr): clErrorCode>(SetMemObjectDestructorAPPLE_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetMemObjectDestructorAPPLE(memobj: cl_mem; pfn_notify: clMemObjectDestructorCallback; user_data: IntPtr): clErrorCode :=
      ntv_SetMemObjectDestructorAPPLE_1(memobj, pfn_notify, user_data);
    
  end;
  
  /// id: cl_arm_controlled_kernel_termination
  clControlledKernelTerminationARM = static class
    public const ExtensionString = 'cl_arm_controlled_kernel_termination';
  end;
  
  /// id: cl_arm_get_core_id
  /// core dependency: cl 1.2
  clGetCoreIdARM = static class
    public const ExtensionString = 'cl_arm_get_core_id';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_arm_import_memory
  clImportMemoryARM = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clImportMemoryARM(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_arm_import_memory';
    
    public ImportMemoryARM_adr := GetProcAddress('clImportMemoryARM');
    private ntv_ImportMemoryARM_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; var properties: clImportProperties; memory: IntPtr; size: UIntPtr; var errcode_ret: clErrorCode): cl_mem>(ImportMemoryARM_adr);
    private ntv_ImportMemoryARM_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; properties: IntPtr; memory: IntPtr; size: UIntPtr; var errcode_ret: clErrorCode): cl_mem>(ImportMemoryARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ImportMemoryARM(context: cl_context; flags: clMemFlags; properties: array of clImportProperties; memory: IntPtr; size: UIntPtr; var errcode_ret: clErrorCode): cl_mem;
      type PClImportProperties = ^clImportProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_ImportMemoryARM_1(context, flags, properties[0], memory, size, errcode_ret) else
        ntv_ImportMemoryARM_1(context, flags, PClImportProperties(nil)^, memory, size, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ImportMemoryARM(context: cl_context; flags: clMemFlags; var properties: clImportProperties; memory: IntPtr; size: UIntPtr; var errcode_ret: clErrorCode): cl_mem :=
      ntv_ImportMemoryARM_1(context, flags, properties, memory, size, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ImportMemoryARM(context: cl_context; flags: clMemFlags; properties: IntPtr; memory: IntPtr; size: UIntPtr; var errcode_ret: clErrorCode): cl_mem :=
      ntv_ImportMemoryARM_2(context, flags, properties, memory, size, errcode_ret);
    
  end;
  
  /// id: cl_arm_job_slot_selection
  clJobSlotSelectionARM = static class
    public const ExtensionString = 'cl_arm_job_slot_selection';
  end;
  
  /// id: cl_arm_printf
  clPrintfARM = static class
    public const ExtensionString = 'cl_arm_printf';
  end;
  
  /// id: cl_arm_protected_memory_allocation
  clProtectedMemoryAllocationARM = static class
    public const ExtensionString = 'cl_arm_protected_memory_allocation';
  end;
  
  /// id: cl_arm_scheduling_controls
  clSchedulingControlsARM = static class
    public const ExtensionString = 'cl_arm_scheduling_controls';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_arm_shared_virtual_memory
  clSharedVirtualMemoryARM = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharedVirtualMemoryARM(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_arm_shared_virtual_memory';
    
    public SVMAllocARM_adr := GetProcAddress('clSVMAllocARM');
    private ntv_SVMAllocARM_1 := GetProcOrNil&<function(context: cl_context; flags: clSvmMemFlags; size: UIntPtr; alignment: UInt32): IntPtr>(SVMAllocARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SVMAllocARM(context: cl_context; flags: clSvmMemFlags; size: UIntPtr; alignment: UInt32): IntPtr :=
      ntv_SVMAllocARM_1(context, flags, size, alignment);
    
    public SVMFreeARM_adr := GetProcAddress('clSVMFreeARM');
    private ntv_SVMFreeARM_1 := GetProcOrNil&<procedure(context: cl_context; svm_pointer: IntPtr)>(SVMFreeARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] procedure SVMFreeARM(context: cl_context; svm_pointer: IntPtr) :=
      ntv_SVMFreeARM_1(context, svm_pointer);
    
    public EnqueueSVMFreeARM_adr := GetProcAddress('clEnqueueSVMFreeARM');
    private ntv_EnqueueSVMFreeARM_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMFreeARM_adr);
    private ntv_EnqueueSVMFreeARM_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMFreeARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMFreeARM(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMFreeARM(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMFreeARM(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMFreeARM(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PIntPtr = ^IntPtr;
    begin
      Result := if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
        ntv_EnqueueSVMFreeARM_1(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueSVMFreeARM_1(command_queue, num_svm_pointers, PIntPtr(nil)^, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PIntPtr = ^IntPtr;
    begin
      Result := if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
        ntv_EnqueueSVMFreeARM_2(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueSVMFreeARM_2(command_queue, num_svm_pointers, PIntPtr(nil)^, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PIntPtr = ^IntPtr;
    begin
      Result := if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
        ntv_EnqueueSVMFreeARM_3(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueSVMFreeARM_3(command_queue, num_svm_pointers, PIntPtr(nil)^, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: array of IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PIntPtr = ^IntPtr;
    begin
      Result := if (svm_pointers<>nil) and (svm_pointers.Length<>0) then
        ntv_EnqueueSVMFreeARM_4(command_queue, num_svm_pointers, svm_pointers[0], pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueSVMFreeARM_4(command_queue, num_svm_pointers, PIntPtr(nil)^, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMFreeARM_1(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMFreeARM_1(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMFreeARM_2(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMFreeARM_2(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMFreeARM_1(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMFreeARM_2(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMFreeARM_3(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; var svm_pointers: IntPtr; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMFreeARM_4(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMFreeARM_5(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMFreeARM_5(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMFreeARM_6(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMFreeARM_6(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMFreeARM_5(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMFreeARM_6(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMFreeARM_7(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMFreeARM(command_queue: cl_command_queue; num_svm_pointers: UInt32; svm_pointers: pointer; pfn_free_func: clEnqueueSVMFreeCallback; user_data: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMFreeARM_8(command_queue, num_svm_pointers, svm_pointers, pfn_free_func, user_data, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueSVMMemcpyARM_adr := GetProcAddress('clEnqueueSVMMemcpyARM');
    private ntv_EnqueueSVMMemcpyARM_1 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMMemcpyARM_adr);
    private ntv_EnqueueSVMMemcpyARM_2 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMMemcpyARM_adr);
    private ntv_EnqueueSVMMemcpyARM_3 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMMemcpyARM_adr);
    private ntv_EnqueueSVMMemcpyARM_4 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMMemcpyARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMemcpyARM_1(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMemcpyARM_1(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMemcpyARM_2(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMemcpyARM_2(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMemcpyARM_1(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMemcpyARM_2(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMemcpyARM_3(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemcpyARM(command_queue: cl_command_queue; blocking_copy: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMemcpyARM_4(command_queue, blocking_copy, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueSVMMemFillARM_adr := GetProcAddress('clEnqueueSVMMemFillARM');
    private ntv_EnqueueSVMMemFillARM_1 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_2 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_3 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_4 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: Byte; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_5 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_6 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_7 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMMemFillARM_adr);
    private ntv_EnqueueSVMMemFillARM_8 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMMemFillARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode; where T: record;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode; where T: record;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode; where T: record;
      type PT = ^T;
    begin
      Result := if (pattern<>nil) and (pattern.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, PT(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode; where T: record;
      type PT = ^T;
    begin
      Result := if (pattern<>nil) and (pattern.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, PT(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode; where T: record;
      type PT = ^T;
    begin
      Result := if (pattern<>nil) and (pattern.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, PT(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: array of T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode; where T: record;
      type PT = ^T;
    begin
      Result := if (pattern<>nil) and (pattern.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern[0], pattern_size, size, num_events_in_wait_list, event_wait_list, &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, PT(nil)^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode; where T: record;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode; where T: record;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSVMMemFillARM(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode; where T: record;
    begin
      Result := ntv_EnqueueSVMMemFillARM_1(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_EnqueueSVMMemFillARM_2(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode; where T: record;
    begin
      Result := ntv_EnqueueSVMMemFillARM_3(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM<T>(command_queue: cl_command_queue; svm_ptr: IntPtr; var pattern: T; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_EnqueueSVMMemFillARM_4(command_queue, svm_ptr, PByte(pointer(@pattern))^, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMemFillARM_5(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMemFillARM_5(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMemFillARM_6(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMemFillARM_6(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMemFillARM_5(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMemFillARM_6(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMemFillARM_7(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMemFillARM(command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: pointer; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMemFillARM_8(command_queue, svm_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueSVMMapARM_adr := GetProcAddress('clEnqueueSVMMapARM');
    private ntv_EnqueueSVMMapARM_1 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMMapARM_adr);
    private ntv_EnqueueSVMMapARM_2 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMMapARM_adr);
    private ntv_EnqueueSVMMapARM_3 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMMapARM_adr);
    private ntv_EnqueueSVMMapARM_4 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMMapARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMapARM_1(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMapARM_1(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMMapARM_2(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMMapARM_2(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMapARM_1(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMapARM_2(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMMapARM_3(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMMapARM(command_queue: cl_command_queue; blocking_map: clBool; flags: clMapFlags; svm_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMMapARM_4(command_queue, blocking_map, flags, svm_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueSVMUnmapARM_adr := GetProcAddress('clEnqueueSVMUnmapARM');
    private ntv_EnqueueSVMUnmapARM_1 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSVMUnmapARM_adr);
    private ntv_EnqueueSVMUnmapARM_2 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSVMUnmapARM_adr);
    private ntv_EnqueueSVMUnmapARM_3 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSVMUnmapARM_adr);
    private ntv_EnqueueSVMUnmapARM_4 := GetProcOrNil&<function(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSVMUnmapARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMUnmapARM_1(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMUnmapARM_1(command_queue, svm_ptr, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSVMUnmapARM_2(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSVMUnmapARM_2(command_queue, svm_ptr, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMUnmapARM_1(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMUnmapARM_2(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSVMUnmapARM_3(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSVMUnmapARM(command_queue: cl_command_queue; svm_ptr: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSVMUnmapARM_4(command_queue, svm_ptr, num_events_in_wait_list, event_wait_list, &event);
    
    public SetKernelArgSVMPointerARM_adr := GetProcAddress('clSetKernelArgSVMPointerARM');
    private ntv_SetKernelArgSVMPointerARM_1 := GetProcOrNil&<function(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): clErrorCode>(SetKernelArgSVMPointerARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelArgSVMPointerARM(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): clErrorCode :=
      ntv_SetKernelArgSVMPointerARM_1(kernel, arg_index, arg_value);
    
    public SetKernelExecInfoARM_adr := GetProcAddress('clSetKernelExecInfoARM');
    private ntv_SetKernelExecInfoARM_1 := GetProcOrNil&<function(kernel: cl_kernel; param_name: clKernelExecInfoARM; param_value_size: UIntPtr; var param_value: Byte): clErrorCode>(SetKernelExecInfoARM_adr);
    private ntv_SetKernelExecInfoARM_2 := GetProcOrNil&<function(kernel: cl_kernel; param_name: clKernelExecInfoARM; param_value_size: UIntPtr; param_value: pointer): clErrorCode>(SetKernelExecInfoARM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelExecInfoARM<TInp>(kernel: cl_kernel; param_name: clKernelExecInfoARM; param_value_size: UIntPtr; var param_value: TInp): clErrorCode; where TInp: record;
    begin
      Result := ntv_SetKernelExecInfoARM_1(kernel, param_name, param_value_size, PByte(pointer(@param_value))^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelExecInfoARM_KERNEL_EXEC_INFO_SVM_PTRS_ARM(kernel: cl_kernel; param_value: array of IntPtr): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value.Length*Marshal.SizeOf&<IntPtr>);
      Result := SetKernelExecInfoARM(kernel, clKernelExecInfoARM.KERNEL_EXEC_INFO_SVM_PTRS_ARM, param_value_sz,param_value[0]);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelExecInfoARM_KERNEL_EXEC_INFO_SVM_PTRS_ARM(kernel: cl_kernel; param_value_count: UInt32; var param_value: IntPtr): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<IntPtr>);
      Result := SetKernelExecInfoARM(kernel, clKernelExecInfoARM.KERNEL_EXEC_INFO_SVM_PTRS_ARM, param_value_sz,param_value);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelExecInfoARM_KERNEL_EXEC_INFO_SVM_FINE_GRAIN_SYSTEM_ARM(kernel: cl_kernel; param_value: clBool): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clBool>);
      Result := SetKernelExecInfoARM(kernel, clKernelExecInfoARM.KERNEL_EXEC_INFO_SVM_FINE_GRAIN_SYSTEM_ARM, param_value_sz,param_value);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelExecInfoARM(kernel: cl_kernel; param_name: clKernelExecInfoARM; param_value_size: UIntPtr; param_value: pointer): clErrorCode :=
      ntv_SetKernelExecInfoARM_2(kernel, param_name, param_value_size, param_value);
    
  end;
  
  /// id: cl_ext_cxx_for_opencl
  clCxxForOpenclEXT = static class
    public const ExtensionString = 'cl_ext_cxx_for_opencl';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_ext_device_fission
  clDeviceFissionEXT = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clDeviceFissionEXT(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_ext_device_fission';
    
    public ReleaseDeviceEXT_adr := GetProcAddress('clReleaseDeviceEXT');
    private ntv_ReleaseDeviceEXT_1 := GetProcOrNil&<function(device: cl_device_id): clErrorCode>(ReleaseDeviceEXT_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReleaseDeviceEXT(device: cl_device_id): clErrorCode :=
      ntv_ReleaseDeviceEXT_1(device);
    
    public RetainDeviceEXT_adr := GetProcAddress('clRetainDeviceEXT');
    private ntv_RetainDeviceEXT_1 := GetProcOrNil&<function(device: cl_device_id): clErrorCode>(RetainDeviceEXT_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RetainDeviceEXT(device: cl_device_id): clErrorCode :=
      ntv_RetainDeviceEXT_1(device);
    
    public CreateSubDevicesEXT_adr := GetProcAddress('clCreateSubDevicesEXT');
    private ntv_CreateSubDevicesEXT_1 := GetProcOrNil&<function(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_2 := GetProcOrNil&<function(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_3 := GetProcOrNil&<function(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_4 := GetProcOrNil&<function(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_5 := GetProcOrNil&<function(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_6 := GetProcOrNil&<function(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_7 := GetProcOrNil&<function(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): clErrorCode>(CreateSubDevicesEXT_adr);
    private ntv_CreateSubDevicesEXT_8 := GetProcOrNil&<function(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): clErrorCode>(CreateSubDevicesEXT_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of clDevicePartitionPropertyEXT; num_entries: UInt32; var out_devices: cl_device_id; num_devices: array of UInt32): clErrorCode;
      type PClDevicePartitionPropertyEXT = ^clDevicePartitionPropertyEXT;
      type PUInt32 = ^UInt32;
    begin
      Result := if (num_devices<>nil) and (num_devices.Length<>0) then
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateSubDevicesEXT_1(in_device, properties[0], num_entries, out_devices, num_devices[0]) else
          ntv_CreateSubDevicesEXT_1(in_device, PClDevicePartitionPropertyEXT(nil)^, num_entries, out_devices, num_devices[0]) else
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateSubDevicesEXT_1(in_device, properties[0], num_entries, out_devices, PUInt32(nil)^) else
          ntv_CreateSubDevicesEXT_1(in_device, PClDevicePartitionPropertyEXT(nil)^, num_entries, out_devices, PUInt32(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: array of clDevicePartitionPropertyEXT; num_entries: UInt32; out_devices: IntPtr; num_devices: array of UInt32): clErrorCode;
      type PClDevicePartitionPropertyEXT = ^clDevicePartitionPropertyEXT;
      type PUInt32 = ^UInt32;
    begin
      Result := if (num_devices<>nil) and (num_devices.Length<>0) then
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateSubDevicesEXT_2(in_device, properties[0], num_entries, out_devices, num_devices[0]) else
          ntv_CreateSubDevicesEXT_2(in_device, PClDevicePartitionPropertyEXT(nil)^, num_entries, out_devices, num_devices[0]) else
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateSubDevicesEXT_2(in_device, properties[0], num_entries, out_devices, PUInt32(nil)^) else
          ntv_CreateSubDevicesEXT_2(in_device, PClDevicePartitionPropertyEXT(nil)^, num_entries, out_devices, PUInt32(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_CreateSubDevicesEXT_1(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_CreateSubDevicesEXT_3(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_CreateSubDevicesEXT_2(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; var properties: clDevicePartitionPropertyEXT; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_CreateSubDevicesEXT_4(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_CreateSubDevicesEXT_5(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; var out_devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_CreateSubDevicesEXT_6(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_CreateSubDevicesEXT_7(in_device, properties, num_entries, out_devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSubDevicesEXT(in_device: cl_device_id; properties: IntPtr; num_entries: UInt32; out_devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_CreateSubDevicesEXT_8(in_device, properties, num_entries, out_devices, num_devices);
    
  end;
  
  /// id: cl_ext_float_atomics
  clFloatAtomicsEXT = static class
    public const ExtensionString = 'cl_ext_float_atomics';
  end;
  
  /// id: cl_ext_image_from_buffer
  /// core dependency: cl 3.0
  clImageFromBufferEXT = static class
    public const ExtensionString = 'cl_ext_image_from_buffer';
  end;
  
  /// id: cl_ext_image_raw10_raw12
  clImageRaw10Raw12EXT = static class
    public const ExtensionString = 'cl_ext_image_raw10_raw12';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_ext_image_requirements_info
  /// core dependency: cl 3.0
  clImageRequirementsInfoEXT = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clImageRequirementsInfoEXT(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_ext_image_requirements_info';
    
    public GetImageRequirementsInfoEXT_adr := GetProcAddress('clGetImageRequirementsInfoEXT');
    private ntv_GetImageRequirementsInfoEXT_1 := GetProcOrNil&<function(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    private ntv_GetImageRequirementsInfoEXT_2 := GetProcOrNil&<function(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    private ntv_GetImageRequirementsInfoEXT_3 := GetProcOrNil&<function(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    private ntv_GetImageRequirementsInfoEXT_4 := GetProcOrNil&<function(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    private ntv_GetImageRequirementsInfoEXT_5 := GetProcOrNil&<function(context: cl_context; properties: IntPtr; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    private ntv_GetImageRequirementsInfoEXT_6 := GetProcOrNil&<function(context: cl_context; properties: IntPtr; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetImageRequirementsInfoEXT_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT<T>(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetImageRequirementsInfoEXT_1(context, properties, flags, image_format, image_desc, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT<T>(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetImageRequirementsInfoEXT_2(context, properties, flags, image_format, image_desc, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_ROW_PITCH_ALIGNMENT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_ROW_PITCH_ALIGNMENT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_SLICE_PITCH_ALIGNMENT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_SLICE_PITCH_ALIGNMENT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_BASE_ADDRESS_ALIGNMENT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_BASE_ADDRESS_ALIGNMENT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_SIZE(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_SIZE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_MAX_WIDTH(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_MAX_WIDTH, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_MAX_HEIGHT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_MAX_HEIGHT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_MAX_DEPTH(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_MAX_DEPTH, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT_IMAGE_REQUIREMENTS_MAX_ARRAY_SIZE(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetImageRequirementsInfoEXT(context, properties, flags, image_format, image_desc, clImageRequirementsInfo.IMAGE_REQUIREMENTS_MAX_ARRAY_SIZE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; properties: array of clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode;
      type PClMemProperties = ^clMemProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_GetImageRequirementsInfoEXT_3(context, properties[0], flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetImageRequirementsInfoEXT_3(context, PClMemProperties(nil)^, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; properties: array of clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode;
      type PClMemProperties = ^clMemProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_GetImageRequirementsInfoEXT_4(context, properties[0], flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetImageRequirementsInfoEXT_4(context, PClMemProperties(nil)^, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetImageRequirementsInfoEXT_3(context, properties, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; var properties: clMemProperties; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetImageRequirementsInfoEXT_4(context, properties, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; properties: IntPtr; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetImageRequirementsInfoEXT_5(context, properties, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetImageRequirementsInfoEXT(context: cl_context; properties: IntPtr; flags: clMemFlags; var image_format: cl_image_format; var image_desc: cl_image_desc; param_name: clImageRequirementsInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetImageRequirementsInfoEXT_6(context, properties, flags, image_format, image_desc, param_name, param_value_size, param_value, param_value_size_ret);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_ext_migrate_memobject
  clMigrateMemobjectEXT = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clMigrateMemobjectEXT(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_ext_migrate_memobject';
    
    public EnqueueMigrateMemObjectEXT_adr := GetProcAddress('clEnqueueMigrateMemObjectEXT');
    private ntv_EnqueueMigrateMemObjectEXT_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    private ntv_EnqueueMigrateMemObjectEXT_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMigrateMemObjectEXT_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueMigrateMemObjectEXT(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueMigrateMemObjectEXT(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueMigrateMemObjectEXT(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueMigrateMemObjectEXT(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_1(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueMigrateMemObjectEXT_1(command_queue, num_mem_objects, PCl_mem(nil)^, flags, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_2(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueMigrateMemObjectEXT_2(command_queue, num_mem_objects, PCl_mem(nil)^, flags, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_3(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueMigrateMemObjectEXT_3(command_queue, num_mem_objects, PCl_mem(nil)^, flags, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_4(command_queue, num_mem_objects, mem_objects[0], flags, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueMigrateMemObjectEXT_4(command_queue, num_mem_objects, PCl_mem(nil)^, flags, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_1(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemObjectEXT_1(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_2(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemObjectEXT_2(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_1(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_2(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_3(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_4(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_5(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemObjectEXT_5(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemObjectEXT_6(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemObjectEXT_6(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_5(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_6(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_7(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemObjectEXT(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemObjectEXT_8(command_queue, num_mem_objects, mem_objects, flags, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_img_cached_allocations
  clCachedAllocationsIMG = static class
    public const ExtensionString = 'cl_img_cached_allocations';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_img_cancel_command
  clCancelCommandIMG = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCancelCommandIMG(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_img_cancel_command';
    
    public CancelCommandsIMG_adr := GetProcAddress('clCancelCommandsIMG');
    private ntv_CancelCommandsIMG_1 := GetProcOrNil&<function(var event_list: cl_event; num_events_in_list: UIntPtr): clErrorCode>(CancelCommandsIMG_adr);
    private ntv_CancelCommandsIMG_2 := GetProcOrNil&<function(event_list: IntPtr; num_events_in_list: UIntPtr): clErrorCode>(CancelCommandsIMG_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CancelCommandsIMG(event_list: array of cl_event; num_events_in_list: UIntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_list<>nil) and (event_list.Length<>0) then
        ntv_CancelCommandsIMG_1(event_list[0], num_events_in_list) else
        ntv_CancelCommandsIMG_1(PCl_event(nil)^, num_events_in_list);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CancelCommandsIMG(var event_list: cl_event; num_events_in_list: UIntPtr): clErrorCode :=
      ntv_CancelCommandsIMG_1(event_list, num_events_in_list);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CancelCommandsIMG(event_list: IntPtr; num_events_in_list: UIntPtr): clErrorCode :=
      ntv_CancelCommandsIMG_2(event_list, num_events_in_list);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_img_generate_mipmap
  clGenerateMipmapIMG = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clGenerateMipmapIMG(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_img_generate_mipmap';
    
    public EnqueueGenerateMipmapIMG_adr := GetProcAddress('clEnqueueGenerateMipmapIMG');
    private ntv_EnqueueGenerateMipmapIMG_1 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_2 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_3 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_4 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_5 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_6 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_7 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_8 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_9 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_10 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_11 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_12 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_13 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_14 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_15 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    private ntv_EnqueueGenerateMipmapIMG_16 := GetProcOrNil&<function(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueGenerateMipmapIMG_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueGenerateMipmapIMG(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueGenerateMipmapIMG(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueGenerateMipmapIMG(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueGenerateMipmapIMG(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (mip_region<>nil) and (mip_region.Length<>0) then
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (mip_region<>nil) and (mip_region.Length<>0) then
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (mip_region<>nil) and (mip_region.Length<>0) then
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_3(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_3(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_3(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_3(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: array of UIntPtr; mip_region: array of UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (mip_region<>nil) and (mip_region.Length<>0) then
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_4(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_4(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, mip_region[0], num_events_in_wait_list, event_wait_list, &event) else
        if (array_region<>nil) and (array_region.Length<>0) then
          ntv_EnqueueGenerateMipmapIMG_4(command_queue, src_image, dst_image, mipmap_filter_mode, array_region[0], PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueGenerateMipmapIMG_4(command_queue, src_image, dst_image, mipmap_filter_mode, PUIntPtr(nil)^, PUIntPtr(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_1(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_2(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_3(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_4(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_5(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_5(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_6(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_6(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_5(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_6(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_7(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; var array_region: UIntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_8(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_9(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_9(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_10(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_10(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_9(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_10(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_11(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; var mip_region: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_12(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_13(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_13(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueGenerateMipmapIMG_14(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueGenerateMipmapIMG_14(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_13(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_14(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_15(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueGenerateMipmapIMG(command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; mipmap_filter_mode: clMipmapFilterMode; array_region: IntPtr; mip_region: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueGenerateMipmapIMG_16(command_queue, src_image, dst_image, mipmap_filter_mode, array_region, mip_region, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_img_mem_properties
  clMemPropertiesIMG = static class
    public const ExtensionString = 'cl_img_mem_properties';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_img_use_gralloc_ptr
  clUseGrallocPtrIMG = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clUseGrallocPtrIMG(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_img_use_gralloc_ptr';
    
    public EnqueueAcquireGrallocObjectsIMG_adr := GetProcAddress('clEnqueueAcquireGrallocObjectsIMG');
    private ntv_EnqueueAcquireGrallocObjectsIMG_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    private ntv_EnqueueAcquireGrallocObjectsIMG_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireGrallocObjectsIMG_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGrallocObjectsIMG_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseGrallocObjectsIMG_adr := GetProcAddress('clEnqueueReleaseGrallocObjectsIMG');
    private ntv_EnqueueReleaseGrallocObjectsIMG_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    private ntv_EnqueueReleaseGrallocObjectsIMG_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseGrallocObjectsIMG_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseGrallocObjectsIMG(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGrallocObjectsIMG(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGrallocObjectsIMG_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_img_yuv_image
  clYuvImageIMG = static class
    public const ExtensionString = 'cl_img_yuv_image';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_accelerator
  clAcceleratorINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clAcceleratorINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_accelerator';
    
    public CreateAcceleratorINTEL_adr := GetProcAddress('clCreateAcceleratorINTEL');
    private ntv_CreateAcceleratorINTEL_1 := GetProcOrNil&<function(context: cl_context; accelerator_type: clAcceleratorType; descriptor_size: UIntPtr; var descriptor: cl_motion_estimation_desc; var errcode_ret: clErrorCode): cl_accelerator>(CreateAcceleratorINTEL_adr);
    private ntv_CreateAcceleratorINTEL_2 := GetProcOrNil&<function(context: cl_context; accelerator_type: clAcceleratorType; descriptor_size: UIntPtr; descriptor: IntPtr; var errcode_ret: clErrorCode): cl_accelerator>(CreateAcceleratorINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateAcceleratorINTEL(context: cl_context; accelerator_type: clAcceleratorType; descriptor_size: UIntPtr; var descriptor: cl_motion_estimation_desc; var errcode_ret: clErrorCode): cl_accelerator :=
      ntv_CreateAcceleratorINTEL_1(context, accelerator_type, descriptor_size, descriptor, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateAcceleratorINTEL(context: cl_context; accelerator_type: clAcceleratorType; descriptor_size: UIntPtr; descriptor: IntPtr; var errcode_ret: clErrorCode): cl_accelerator :=
      ntv_CreateAcceleratorINTEL_2(context, accelerator_type, descriptor_size, descriptor, errcode_ret);
    
    public GetAcceleratorInfoINTEL_adr := GetProcAddress('clGetAcceleratorInfoINTEL');
    private ntv_GetAcceleratorInfoINTEL_1 := GetProcOrNil&<function(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetAcceleratorInfoINTEL_adr);
    private ntv_GetAcceleratorInfoINTEL_2 := GetProcOrNil&<function(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetAcceleratorInfoINTEL_adr);
    private ntv_GetAcceleratorInfoINTEL_3 := GetProcOrNil&<function(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetAcceleratorInfoINTEL_adr);
    private ntv_GetAcceleratorInfoINTEL_4 := GetProcOrNil&<function(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetAcceleratorInfoINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL<T>(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetAcceleratorInfoINTEL_1(accelerator, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL<T>(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetAcceleratorInfoINTEL_2(accelerator, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL_ACCELERATOR_REFERENCE_COUNT(accelerator: cl_accelerator; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetAcceleratorInfoINTEL(accelerator, clAcceleratorInfo.ACCELERATOR_REFERENCE_COUNT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL_ACCELERATOR_CONTEXT(accelerator: cl_accelerator; var param_value: cl_context; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_context>);
      var param_value_ret_size: UIntPtr;
      Result := GetAcceleratorInfoINTEL(accelerator, clAcceleratorInfo.ACCELERATOR_CONTEXT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL_ACCELERATOR_TYPE(accelerator: cl_accelerator; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetAcceleratorInfoINTEL(accelerator, clAcceleratorInfo.ACCELERATOR_TYPE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetAcceleratorInfoINTEL_3(accelerator, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetAcceleratorInfoINTEL(accelerator: cl_accelerator; param_name: clAcceleratorInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetAcceleratorInfoINTEL_4(accelerator, param_name, param_value_size, param_value, param_value_size_ret);
    
    public RetainAcceleratorINTEL_adr := GetProcAddress('clRetainAcceleratorINTEL');
    private ntv_RetainAcceleratorINTEL_1 := GetProcOrNil&<function(accelerator: cl_accelerator): clErrorCode>(RetainAcceleratorINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RetainAcceleratorINTEL(accelerator: cl_accelerator): clErrorCode :=
      ntv_RetainAcceleratorINTEL_1(accelerator);
    
    public ReleaseAcceleratorINTEL_adr := GetProcAddress('clReleaseAcceleratorINTEL');
    private ntv_ReleaseAcceleratorINTEL_1 := GetProcOrNil&<function(accelerator: cl_accelerator): clErrorCode>(ReleaseAcceleratorINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReleaseAcceleratorINTEL(accelerator: cl_accelerator): clErrorCode :=
      ntv_ReleaseAcceleratorINTEL_1(accelerator);
    
  end;
  
  /// id: cl_intel_advanced_motion_estimation
  clAdvancedMotionEstimationINTEL = static class
    public const ExtensionString = 'cl_intel_advanced_motion_estimation';
  end;
  
  /// id: cl_intel_command_queue_families
  clCommandQueueFamiliesINTEL = static class
    public const ExtensionString = 'cl_intel_command_queue_families';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_create_buffer_with_properties
  clCreateBufferWithPropertiesINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCreateBufferWithPropertiesINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_create_buffer_with_properties';
    
    public CreateBufferWithPropertiesINTEL_adr := GetProcAddress('clCreateBufferWithPropertiesINTEL');
    private ntv_CreateBufferWithPropertiesINTEL_1 := GetProcOrNil&<function(context: cl_context; var properties: clMemPropertiesINTEL; flags: clMemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: clErrorCode): cl_mem>(CreateBufferWithPropertiesINTEL_adr);
    private ntv_CreateBufferWithPropertiesINTEL_2 := GetProcOrNil&<function(context: cl_context; properties: IntPtr; flags: clMemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: clErrorCode): cl_mem>(CreateBufferWithPropertiesINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateBufferWithPropertiesINTEL(context: cl_context; properties: array of clMemPropertiesINTEL; flags: clMemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: clErrorCode): cl_mem;
      type PClMemPropertiesINTEL = ^clMemPropertiesINTEL;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_CreateBufferWithPropertiesINTEL_1(context, properties[0], flags, size, host_ptr, errcode_ret) else
        ntv_CreateBufferWithPropertiesINTEL_1(context, PClMemPropertiesINTEL(nil)^, flags, size, host_ptr, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateBufferWithPropertiesINTEL(context: cl_context; var properties: clMemPropertiesINTEL; flags: clMemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateBufferWithPropertiesINTEL_1(context, properties, flags, size, host_ptr, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateBufferWithPropertiesINTEL(context: cl_context; properties: IntPtr; flags: clMemFlags; size: UIntPtr; host_ptr: IntPtr; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateBufferWithPropertiesINTEL_2(context, properties, flags, size, host_ptr, errcode_ret);
    
  end;
  
  /// id: cl_intel_create_mem_object_properties
  clCreateMemObjectPropertiesINTEL = static class
    public const ExtensionString = 'cl_intel_create_mem_object_properties';
  end;
  
  /// id: cl_intel_device_attribute_query
  clDeviceAttributeQueryINTEL = static class
    public const ExtensionString = 'cl_intel_device_attribute_query';
  end;
  
  /// id: cl_intel_device_partition_by_names
  clDevicePartitionByNamesINTEL = static class
    public const ExtensionString = 'cl_intel_device_partition_by_names';
  end;
  
  /// id: cl_intel_device_side_avc_motion_estimation
  clDeviceSideAvcMotionEstimationINTEL = static class
    public const ExtensionString = 'cl_intel_device_side_avc_motion_estimation';
  end;
  
  /// id: cl_intel_driver_diagnostics
  clDriverDiagnosticsINTEL = static class
    public const ExtensionString = 'cl_intel_driver_diagnostics';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_dx9_media_sharing
  clDx9MediaSharingINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clDx9MediaSharingINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_dx9_media_sharing';
    
    public GetDeviceIDsFromDX9INTEL_adr := GetProcAddress('clGetDeviceIDsFromDX9INTEL');
    private ntv_GetDeviceIDsFromDX9INTEL_1 := GetProcOrNil&<function(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9INTEL_adr);
    private ntv_GetDeviceIDsFromDX9INTEL_2 := GetProcOrNil&<function(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9INTEL_adr);
    private ntv_GetDeviceIDsFromDX9INTEL_3 := GetProcOrNil&<function(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9INTEL_adr);
    private ntv_GetDeviceIDsFromDX9INTEL_4 := GetProcOrNil&<function(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9INTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9INTEL_1(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9INTEL_2(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9INTEL_3(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9INTEL(platform: cl_platform_id; dx9_device_source: clDx9DeviceSource; dx9_object: IntPtr; dx9_device_set: clDx9DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9INTEL_4(platform, dx9_device_source, dx9_object, dx9_device_set, num_entries, devices, num_devices);
    
    public CreateFromDX9MediaSurfaceINTEL_adr := GetProcAddress('clCreateFromDX9MediaSurfaceINTEL');
    private ntv_CreateFromDX9MediaSurfaceINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d_surface9; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromDX9MediaSurfaceINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromDX9MediaSurfaceINTEL(context: cl_context; flags: clMemFlags; resource: d3d_surface9; sharedHandle: IntPtr; plane: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromDX9MediaSurfaceINTEL_1(context, flags, resource, sharedHandle, plane, errcode_ret);
    
    public EnqueueAcquireDX9ObjectsINTEL_adr := GetProcAddress('clEnqueueAcquireDX9ObjectsINTEL');
    private ntv_EnqueueAcquireDX9ObjectsINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    private ntv_EnqueueAcquireDX9ObjectsINTEL_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9ObjectsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9ObjectsINTEL_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseDX9ObjectsINTEL_adr := GetProcAddress('clEnqueueReleaseDX9ObjectsINTEL');
    private ntv_EnqueueReleaseDX9ObjectsINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    private ntv_EnqueueReleaseDX9ObjectsINTEL_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9ObjectsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseDX9ObjectsINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9ObjectsINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9ObjectsINTEL_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_intel_egl_image_yuv
  clEglImageYuvINTEL = static class
    public const ExtensionString = 'cl_intel_egl_image_yuv';
  end;
  
  /// id: cl_intel_exec_by_local_thread
  clExecByLocalThreadINTEL = static class
    public const ExtensionString = 'cl_intel_exec_by_local_thread';
  end;
  
  /// id: cl_intel_mem_alloc_buffer_location
  clMemAllocBufferLocationINTEL = static class
    public const ExtensionString = 'cl_intel_mem_alloc_buffer_location';
  end;
  
  /// id: cl_intel_mem_channel_property
  clMemChannelPropertyINTEL = static class
    public const ExtensionString = 'cl_intel_mem_channel_property';
  end;
  
  /// id: cl_intel_mem_force_host_memory
  clMemForceHostMemoryINTEL = static class
    public const ExtensionString = 'cl_intel_mem_force_host_memory';
  end;
  
  /// id: cl_intel_motion_estimation
  clMotionEstimationINTEL = static class
    public const ExtensionString = 'cl_intel_motion_estimation';
  end;
  
  /// id: cl_intel_packed_yuv
  clPackedYuvINTEL = static class
    public const ExtensionString = 'cl_intel_packed_yuv';
  end;
  
  /// id: cl_intel_planar_yuv
  clPlanarYuvINTEL = static class
    public const ExtensionString = 'cl_intel_planar_yuv';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_program_scope_host_pipe
  clProgramScopeHostPipeINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clProgramScopeHostPipeINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_program_scope_host_pipe';
    
    public EnqueueReadHostPipeINTEL_adr := GetProcAddress('clEnqueueReadHostPipeINTEL');
    private ntv_EnqueueReadHostPipeINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReadHostPipeINTEL_adr);
    private ntv_EnqueueReadHostPipeINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReadHostPipeINTEL_adr);
    private ntv_EnqueueReadHostPipeINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReadHostPipeINTEL_adr);
    private ntv_EnqueueReadHostPipeINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReadHostPipeINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReadHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReadHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReadHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReadHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueReadHostPipeINTEL_1(command_queue, &program, pipe_symbol_str_ptr, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueReadHostPipeINTEL_2(command_queue, &program, pipe_symbol_str_ptr, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueReadHostPipeINTEL_3(command_queue, &program, pipe_symbol_str_ptr, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueReadHostPipeINTEL_4(command_queue, &program, pipe_symbol_str_ptr, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReadHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReadHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReadHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReadHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReadHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReadHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReadHostPipeINTEL_3(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReadHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_read: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReadHostPipeINTEL_4(command_queue, &program, pipe_symbol, blocking_read, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueWriteHostPipeINTEL_adr := GetProcAddress('clEnqueueWriteHostPipeINTEL');
    private ntv_EnqueueWriteHostPipeINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueWriteHostPipeINTEL_adr);
    private ntv_EnqueueWriteHostPipeINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueWriteHostPipeINTEL_adr);
    private ntv_EnqueueWriteHostPipeINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueWriteHostPipeINTEL_adr);
    private ntv_EnqueueWriteHostPipeINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueWriteHostPipeINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueWriteHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueWriteHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueWriteHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueWriteHostPipeINTEL(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueWriteHostPipeINTEL_1(command_queue, &program, pipe_symbol_str_ptr, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueWriteHostPipeINTEL_2(command_queue, &program, pipe_symbol_str_ptr, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueWriteHostPipeINTEL_3(command_queue, &program, pipe_symbol_str_ptr, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: string; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
    begin
      var pipe_symbol_str_ptr := Marshal.StringToHGlobalAnsi(pipe_symbol);
      try
        Result := ntv_EnqueueWriteHostPipeINTEL_4(command_queue, &program, pipe_symbol_str_ptr, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
      finally
        Marshal.FreeHGlobal(pipe_symbol_str_ptr);
      end;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWriteHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWriteHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWriteHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWriteHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWriteHostPipeINTEL_1(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWriteHostPipeINTEL_2(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWriteHostPipeINTEL_3(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWriteHostPipeINTEL(command_queue: cl_command_queue; &program: cl_program; pipe_symbol: IntPtr; blocking_write: clBool; ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWriteHostPipeINTEL_4(command_queue, &program, pipe_symbol, blocking_write, ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_intel_queue_no_sync_operations
  clQueueNoSyncOperationsINTEL = static class
    public const ExtensionString = 'cl_intel_queue_no_sync_operations';
  end;
  
  /// id: cl_intel_required_subgroup_size
  clRequiredSubgroupSizeINTEL = static class
    public const ExtensionString = 'cl_intel_required_subgroup_size';
  end;
  
  /// id: cl_intel_sharing_format_query
  clSharingFormatQueryINTEL = static class
    public const ExtensionString = 'cl_intel_sharing_format_query';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_sharing_format_query_d3d10
  clSharingFormatQueryD3d10INTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharingFormatQueryD3d10INTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_sharing_format_query_d3d10';
    
    public GetSupportedD3D10TextureFormatsINTEL_adr := GetProcAddress('clGetSupportedD3D10TextureFormatsINTEL');
    private ntv_GetSupportedD3D10TextureFormatsINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var d3d10_formats: d3d_pixel_format; var num_texture_formats: UInt32): clErrorCode>(GetSupportedD3D10TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D10TextureFormatsINTEL_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var d3d10_formats: d3d_pixel_format; num_texture_formats: IntPtr): clErrorCode>(GetSupportedD3D10TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D10TextureFormatsINTEL_3 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; d3d10_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode>(GetSupportedD3D10TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D10TextureFormatsINTEL_4 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; d3d10_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode>(GetSupportedD3D10TextureFormatsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D10TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var d3d10_formats: d3d_pixel_format; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedD3D10TextureFormatsINTEL_1(context, flags, image_type, num_entries, d3d10_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D10TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var d3d10_formats: d3d_pixel_format; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedD3D10TextureFormatsINTEL_2(context, flags, image_type, num_entries, d3d10_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D10TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; d3d10_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedD3D10TextureFormatsINTEL_3(context, flags, image_type, num_entries, d3d10_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D10TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; d3d10_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedD3D10TextureFormatsINTEL_4(context, flags, image_type, num_entries, d3d10_formats, num_texture_formats);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_sharing_format_query_d3d11
  clSharingFormatQueryD3d11INTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharingFormatQueryD3d11INTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_sharing_format_query_d3d11';
    
    public GetSupportedD3D11TextureFormatsINTEL_adr := GetProcAddress('clGetSupportedD3D11TextureFormatsINTEL');
    private ntv_GetSupportedD3D11TextureFormatsINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var d3d11_formats: d3d_pixel_format; var num_texture_formats: UInt32): clErrorCode>(GetSupportedD3D11TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D11TextureFormatsINTEL_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var d3d11_formats: d3d_pixel_format; num_texture_formats: IntPtr): clErrorCode>(GetSupportedD3D11TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D11TextureFormatsINTEL_3 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; d3d11_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode>(GetSupportedD3D11TextureFormatsINTEL_adr);
    private ntv_GetSupportedD3D11TextureFormatsINTEL_4 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; d3d11_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode>(GetSupportedD3D11TextureFormatsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D11TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var d3d11_formats: d3d_pixel_format; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedD3D11TextureFormatsINTEL_1(context, flags, image_type, plane, num_entries, d3d11_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D11TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var d3d11_formats: d3d_pixel_format; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedD3D11TextureFormatsINTEL_2(context, flags, image_type, plane, num_entries, d3d11_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D11TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; d3d11_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedD3D11TextureFormatsINTEL_3(context, flags, image_type, plane, num_entries, d3d11_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedD3D11TextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; d3d11_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedD3D11TextureFormatsINTEL_4(context, flags, image_type, plane, num_entries, d3d11_formats, num_texture_formats);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_sharing_format_query_dx9
  clSharingFormatQueryDx9INTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharingFormatQueryDx9INTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_sharing_format_query_dx9';
    
    public GetSupportedDX9MediaSurfaceFormatsINTEL_adr := GetProcAddress('clGetSupportedDX9MediaSurfaceFormatsINTEL');
    private ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var dx9_formats: d3d_pixel_format; var num_surface_formats: UInt32): clErrorCode>(GetSupportedDX9MediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var dx9_formats: d3d_pixel_format; num_surface_formats: IntPtr): clErrorCode>(GetSupportedDX9MediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_3 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; dx9_formats: IntPtr; var num_surface_formats: UInt32): clErrorCode>(GetSupportedDX9MediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_4 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; dx9_formats: IntPtr; num_surface_formats: IntPtr): clErrorCode>(GetSupportedDX9MediaSurfaceFormatsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedDX9MediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var dx9_formats: d3d_pixel_format; var num_surface_formats: UInt32): clErrorCode :=
      ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_1(context, flags, image_type, plane, num_entries, dx9_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedDX9MediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var dx9_formats: d3d_pixel_format; num_surface_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_2(context, flags, image_type, plane, num_entries, dx9_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedDX9MediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; dx9_formats: IntPtr; var num_surface_formats: UInt32): clErrorCode :=
      ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_3(context, flags, image_type, plane, num_entries, dx9_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedDX9MediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; dx9_formats: IntPtr; num_surface_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedDX9MediaSurfaceFormatsINTEL_4(context, flags, image_type, plane, num_entries, dx9_formats, num_surface_formats);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_sharing_format_query_gl
  clSharingFormatQueryGlINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharingFormatQueryGlINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_sharing_format_query_gl';
    
    public GetSupportedGLTextureFormatsINTEL_adr := GetProcAddress('clGetSupportedGLTextureFormatsINTEL');
    private ntv_GetSupportedGLTextureFormatsINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var gl_formats: UInt32; var num_texture_formats: UInt32): clErrorCode>(GetSupportedGLTextureFormatsINTEL_adr);
    private ntv_GetSupportedGLTextureFormatsINTEL_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var gl_formats: UInt32; num_texture_formats: IntPtr): clErrorCode>(GetSupportedGLTextureFormatsINTEL_adr);
    private ntv_GetSupportedGLTextureFormatsINTEL_3 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; gl_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode>(GetSupportedGLTextureFormatsINTEL_adr);
    private ntv_GetSupportedGLTextureFormatsINTEL_4 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; gl_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode>(GetSupportedGLTextureFormatsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedGLTextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var gl_formats: UInt32; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedGLTextureFormatsINTEL_1(context, flags, image_type, num_entries, gl_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedGLTextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; var gl_formats: UInt32; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedGLTextureFormatsINTEL_2(context, flags, image_type, num_entries, gl_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedGLTextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; gl_formats: IntPtr; var num_texture_formats: UInt32): clErrorCode :=
      ntv_GetSupportedGLTextureFormatsINTEL_3(context, flags, image_type, num_entries, gl_formats, num_texture_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedGLTextureFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; num_entries: UInt32; gl_formats: IntPtr; num_texture_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedGLTextureFormatsINTEL_4(context, flags, image_type, num_entries, gl_formats, num_texture_formats);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_sharing_format_query_va_api
  clSharingFormatQueryVaApiINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSharingFormatQueryVaApiINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_sharing_format_query_va_api';
    
    public GetSupportedVA_APIMediaSurfaceFormatsINTEL_adr := GetProcAddress('clGetSupportedVA_APIMediaSurfaceFormatsINTEL');
    private ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var va_api_formats: va_image_format; var num_surface_formats: UInt32): clErrorCode>(GetSupportedVA_APIMediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_2 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var va_api_formats: va_image_format; num_surface_formats: IntPtr): clErrorCode>(GetSupportedVA_APIMediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_3 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; va_api_formats: IntPtr; var num_surface_formats: UInt32): clErrorCode>(GetSupportedVA_APIMediaSurfaceFormatsINTEL_adr);
    private ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_4 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; va_api_formats: IntPtr; num_surface_formats: IntPtr): clErrorCode>(GetSupportedVA_APIMediaSurfaceFormatsINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedVA_APIMediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var va_api_formats: va_image_format; var num_surface_formats: UInt32): clErrorCode :=
      ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_1(context, flags, image_type, plane, num_entries, va_api_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedVA_APIMediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; var va_api_formats: va_image_format; num_surface_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_2(context, flags, image_type, plane, num_entries, va_api_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedVA_APIMediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; va_api_formats: IntPtr; var num_surface_formats: UInt32): clErrorCode :=
      ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_3(context, flags, image_type, plane, num_entries, va_api_formats, num_surface_formats);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSupportedVA_APIMediaSurfaceFormatsINTEL(context: cl_context; flags: clMemFlags; image_type: clMemObjectType; plane: UInt32; num_entries: UInt32; va_api_formats: IntPtr; num_surface_formats: IntPtr): clErrorCode :=
      ntv_GetSupportedVA_APIMediaSurfaceFormatsINTEL_4(context, flags, image_type, plane, num_entries, va_api_formats, num_surface_formats);
    
  end;
  
  /// id: cl_intel_simultaneous_sharing
  clSimultaneousSharingINTEL = static class
    public const ExtensionString = 'cl_intel_simultaneous_sharing';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_unified_shared_memory
  clUnifiedSharedMemoryINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clUnifiedSharedMemoryINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_unified_shared_memory';
    
    public HostMemAllocINTEL_adr := GetProcAddress('clHostMemAllocINTEL');
    private ntv_HostMemAllocINTEL_1 := GetProcOrNil&<function(context: cl_context; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(HostMemAllocINTEL_adr);
    private ntv_HostMemAllocINTEL_2 := GetProcOrNil&<function(context: cl_context; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(HostMemAllocINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function HostMemAllocINTEL(context: cl_context; properties: array of clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr;
      type PClMemPropertiesINTEL = ^clMemPropertiesINTEL;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_HostMemAllocINTEL_1(context, properties[0], size, alignment, errcode_ret) else
        ntv_HostMemAllocINTEL_1(context, PClMemPropertiesINTEL(nil)^, size, alignment, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function HostMemAllocINTEL(context: cl_context; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_HostMemAllocINTEL_1(context, properties, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function HostMemAllocINTEL(context: cl_context; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_HostMemAllocINTEL_2(context, properties, size, alignment, errcode_ret);
    
    public DeviceMemAllocINTEL_adr := GetProcAddress('clDeviceMemAllocINTEL');
    private ntv_DeviceMemAllocINTEL_1 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(DeviceMemAllocINTEL_adr);
    private ntv_DeviceMemAllocINTEL_2 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(DeviceMemAllocINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; properties: array of clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr;
      type PClMemPropertiesINTEL = ^clMemPropertiesINTEL;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_DeviceMemAllocINTEL_1(context, device, properties[0], size, alignment, errcode_ret) else
        ntv_DeviceMemAllocINTEL_1(context, device, PClMemPropertiesINTEL(nil)^, size, alignment, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_DeviceMemAllocINTEL_1(context, device, properties, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function DeviceMemAllocINTEL(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_DeviceMemAllocINTEL_2(context, device, properties, size, alignment, errcode_ret);
    
    public SharedMemAllocINTEL_adr := GetProcAddress('clSharedMemAllocINTEL');
    private ntv_SharedMemAllocINTEL_1 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(SharedMemAllocINTEL_adr);
    private ntv_SharedMemAllocINTEL_2 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr>(SharedMemAllocINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; properties: array of clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr;
      type PClMemPropertiesINTEL = ^clMemPropertiesINTEL;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_SharedMemAllocINTEL_1(context, device, properties[0], size, alignment, errcode_ret) else
        ntv_SharedMemAllocINTEL_1(context, device, PClMemPropertiesINTEL(nil)^, size, alignment, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; var properties: clMemPropertiesINTEL; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_SharedMemAllocINTEL_1(context, device, properties, size, alignment, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SharedMemAllocINTEL(context: cl_context; device: cl_device_id; properties: IntPtr; size: UIntPtr; alignment: UInt32; var errcode_ret: clErrorCode): IntPtr :=
      ntv_SharedMemAllocINTEL_2(context, device, properties, size, alignment, errcode_ret);
    
    public MemFreeINTEL_adr := GetProcAddress('clMemFreeINTEL');
    private ntv_MemFreeINTEL_1 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr): clErrorCode>(MemFreeINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function MemFreeINTEL(context: cl_context; ptr: IntPtr): clErrorCode :=
      ntv_MemFreeINTEL_1(context, ptr);
    
    public MemBlockingFreeINTEL_adr := GetProcAddress('clMemBlockingFreeINTEL');
    private ntv_MemBlockingFreeINTEL_1 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr): clErrorCode>(MemBlockingFreeINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function MemBlockingFreeINTEL(context: cl_context; ptr: IntPtr): clErrorCode :=
      ntv_MemBlockingFreeINTEL_1(context, ptr);
    
    public GetMemAllocInfoINTEL_adr := GetProcAddress('clGetMemAllocInfoINTEL');
    private ntv_GetMemAllocInfoINTEL_1 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetMemAllocInfoINTEL_adr);
    private ntv_GetMemAllocInfoINTEL_2 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetMemAllocInfoINTEL_adr);
    private ntv_GetMemAllocInfoINTEL_3 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetMemAllocInfoINTEL_adr);
    private ntv_GetMemAllocInfoINTEL_4 := GetProcOrNil&<function(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetMemAllocInfoINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMemAllocInfoINTEL<T>(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetMemAllocInfoINTEL_1(context, ptr, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMemAllocInfoINTEL<T>(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetMemAllocInfoINTEL_2(context, ptr, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMemAllocInfoINTEL_MEM_ALLOC_BUFFER_LOCATION(context: cl_context; ptr: IntPtr; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetMemAllocInfoINTEL(context, ptr, clMemInfoINTEL.MEM_ALLOC_BUFFER_LOCATION, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMemAllocInfoINTEL(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetMemAllocInfoINTEL_3(context, ptr, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMemAllocInfoINTEL(context: cl_context; ptr: IntPtr; param_name: clMemInfoINTEL; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetMemAllocInfoINTEL_4(context, ptr, param_name, param_value_size, param_value, param_value_size_ret);
    
    public SetKernelArgMemPointerINTEL_adr := GetProcAddress('clSetKernelArgMemPointerINTEL');
    private ntv_SetKernelArgMemPointerINTEL_1 := GetProcOrNil&<function(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): clErrorCode>(SetKernelArgMemPointerINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetKernelArgMemPointerINTEL(kernel: cl_kernel; arg_index: UInt32; arg_value: IntPtr): clErrorCode :=
      ntv_SetKernelArgMemPointerINTEL_1(kernel, arg_index, arg_value);
    
    public EnqueueMemFillINTEL_adr := GetProcAddress('clEnqueueMemFillINTEL');
    private ntv_EnqueueMemFillINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMemFillINTEL_adr);
    private ntv_EnqueueMemFillINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMemFillINTEL_adr);
    private ntv_EnqueueMemFillINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMemFillINTEL_adr);
    private ntv_EnqueueMemFillINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMemFillINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemFillINTEL_1(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemFillINTEL_1(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemFillINTEL_2(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemFillINTEL_2(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemFillINTEL_1(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemFillINTEL_2(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemFillINTEL_3(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemFillINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemFillINTEL_4(command_queue, dst_ptr, pattern, pattern_size, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueMemcpyINTEL_adr := GetProcAddress('clEnqueueMemcpyINTEL');
    private ntv_EnqueueMemcpyINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMemcpyINTEL_adr);
    private ntv_EnqueueMemcpyINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMemcpyINTEL_adr);
    private ntv_EnqueueMemcpyINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMemcpyINTEL_adr);
    private ntv_EnqueueMemcpyINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMemcpyINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemcpyINTEL_1(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemcpyINTEL_1(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemcpyINTEL_2(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemcpyINTEL_2(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemcpyINTEL_1(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemcpyINTEL_2(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemcpyINTEL_3(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemcpyINTEL(command_queue: cl_command_queue; blocking: clBool; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemcpyINTEL_4(command_queue, blocking, dst_ptr, src_ptr, size, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueMemAdviseINTEL_adr := GetProcAddress('clEnqueueMemAdviseINTEL');
    private ntv_EnqueueMemAdviseINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMemAdviseINTEL_adr);
    private ntv_EnqueueMemAdviseINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMemAdviseINTEL_adr);
    private ntv_EnqueueMemAdviseINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMemAdviseINTEL_adr);
    private ntv_EnqueueMemAdviseINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMemAdviseINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemAdviseINTEL_1(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemAdviseINTEL_1(command_queue, ptr, size, advice, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemAdviseINTEL_2(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemAdviseINTEL_2(command_queue, ptr, size, advice, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemAdviseINTEL_1(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemAdviseINTEL_2(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemAdviseINTEL_3(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemAdviseINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; advice: UInt32; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemAdviseINTEL_4(command_queue, ptr, size, advice, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueMigrateMemINTEL_adr := GetProcAddress('clEnqueueMigrateMemINTEL');
    private ntv_EnqueueMigrateMemINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMigrateMemINTEL_adr);
    private ntv_EnqueueMigrateMemINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMigrateMemINTEL_adr);
    private ntv_EnqueueMigrateMemINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMigrateMemINTEL_adr);
    private ntv_EnqueueMigrateMemINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMigrateMemINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemINTEL_1(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemINTEL_1(command_queue, ptr, size, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMigrateMemINTEL_2(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMigrateMemINTEL_2(command_queue, ptr, size, flags, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemINTEL_1(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemINTEL_2(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMigrateMemINTEL_3(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMigrateMemINTEL(command_queue: cl_command_queue; ptr: IntPtr; size: UIntPtr; flags: clMemMigrationFlags; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMigrateMemINTEL_4(command_queue, ptr, size, flags, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueMemsetINTEL_adr := GetProcAddress('clEnqueueMemsetINTEL');
    private ntv_EnqueueMemsetINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueMemsetINTEL_adr);
    private ntv_EnqueueMemsetINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueMemsetINTEL_adr);
    private ntv_EnqueueMemsetINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueMemsetINTEL_adr);
    private ntv_EnqueueMemsetINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueMemsetINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemsetINTEL_1(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemsetINTEL_1(command_queue, dst_ptr, value, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueMemsetINTEL_2(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueMemsetINTEL_2(command_queue, dst_ptr, value, size, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemsetINTEL_1(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemsetINTEL_2(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueMemsetINTEL_3(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueMemsetINTEL(command_queue: cl_command_queue; dst_ptr: IntPtr; value: Int32; size: UIntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueMemsetINTEL_4(command_queue, dst_ptr, value, size, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_intel_va_api_media_sharing
  clVaApiMediaSharingINTEL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clVaApiMediaSharingINTEL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_intel_va_api_media_sharing';
    
    public GetDeviceIDsFromVA_APIMediaAdapterINTEL_adr := GetProcAddress('clGetDeviceIDsFromVA_APIMediaAdapterINTEL');
    private ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_1 := GetProcOrNil&<function(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromVA_APIMediaAdapterINTEL_adr);
    private ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_2 := GetProcOrNil&<function(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromVA_APIMediaAdapterINTEL_adr);
    private ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_3 := GetProcOrNil&<function(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromVA_APIMediaAdapterINTEL_adr);
    private ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_4 := GetProcOrNil&<function(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromVA_APIMediaAdapterINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_1(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_2(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_3(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromVA_APIMediaAdapterINTEL(platform: cl_platform_id; media_adapter_type: clVaApiDeviceSource; media_adapter: IntPtr; media_adapter_set: clVaApiDeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromVA_APIMediaAdapterINTEL_4(platform, media_adapter_type, media_adapter, media_adapter_set, num_entries, devices, num_devices);
    
    public CreateFromVA_APIMediaSurfaceINTEL_adr := GetProcAddress('clCreateFromVA_APIMediaSurfaceINTEL');
    private ntv_CreateFromVA_APIMediaSurfaceINTEL_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; surface: va_surface_id; plane: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromVA_APIMediaSurfaceINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromVA_APIMediaSurfaceINTEL(context: cl_context; flags: clMemFlags; surface: va_surface_id; plane: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromVA_APIMediaSurfaceINTEL_1(context, flags, surface, plane, errcode_ret);
    
    public EnqueueAcquireVA_APIMediaSurfacesINTEL_adr := GetProcAddress('clEnqueueAcquireVA_APIMediaSurfacesINTEL');
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireVA_APIMediaSurfacesINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireVA_APIMediaSurfacesINTEL_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseVA_APIMediaSurfacesINTEL_adr := GetProcAddress('clEnqueueReleaseVA_APIMediaSurfacesINTEL');
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    private ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseVA_APIMediaSurfacesINTEL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseVA_APIMediaSurfacesINTEL(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseVA_APIMediaSurfacesINTEL_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_khr_3d_image_writes
  /// promoted to: cl 2.0
  cl3dImageWritesKHR = static class
    public const ExtensionString = 'cl_khr_3d_image_writes';
  end;
  
  /// id: cl_khr_async_work_group_copy_fence
  clAsyncWorkGroupCopyFenceKHR = static class
    public const ExtensionString = 'cl_khr_async_work_group_copy_fence';
  end;
  
  /// id: cl_khr_byte_addressable_store
  /// promoted to: cl 1.1
  clByteAddressableStoreKHR = static class
    public const ExtensionString = 'cl_khr_byte_addressable_store';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_command_buffer
  /// version: 0.9.4 (provisional)
  /// core dependency: cl 1.2
  clCommandBufferKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCommandBufferKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_command_buffer';
    
    public CreateCommandBufferKHR_adr := GetProcAddress('clCreateCommandBufferKHR');
    private ntv_CreateCommandBufferKHR_1 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; var properties: clCommandBufferProperties; var errcode_ret: clErrorCode): cl_command_buffer>(CreateCommandBufferKHR_adr);
    private ntv_CreateCommandBufferKHR_2 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(CreateCommandBufferKHR_adr);
    private ntv_CreateCommandBufferKHR_3 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; var properties: clCommandBufferProperties; var errcode_ret: clErrorCode): cl_command_buffer>(CreateCommandBufferKHR_adr);
    private ntv_CreateCommandBufferKHR_4 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(CreateCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; properties: array of clCommandBufferProperties; var errcode_ret: clErrorCode): cl_command_buffer;
      type PCl_command_queue = ^cl_command_queue;
      type PClCommandBufferProperties = ^clCommandBufferProperties;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateCommandBufferKHR_1(num_queues, queues[0], properties[0], errcode_ret) else
          ntv_CreateCommandBufferKHR_1(num_queues, queues[0], PClCommandBufferProperties(nil)^, errcode_ret) else
        if (properties<>nil) and (properties.Length<>0) then
          ntv_CreateCommandBufferKHR_1(num_queues, PCl_command_queue(nil)^, properties[0], errcode_ret) else
          ntv_CreateCommandBufferKHR_1(num_queues, PCl_command_queue(nil)^, PClCommandBufferProperties(nil)^, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; var properties: clCommandBufferProperties; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_CreateCommandBufferKHR_1(num_queues, queues, properties, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_CreateCommandBufferKHR_2(num_queues, queues, properties, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandBufferKHR(num_queues: UInt32; queues: IntPtr; var properties: clCommandBufferProperties; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_CreateCommandBufferKHR_3(num_queues, queues, properties, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandBufferKHR(num_queues: UInt32; queues: IntPtr; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_CreateCommandBufferKHR_4(num_queues, queues, properties, errcode_ret);
    
    public FinalizeCommandBufferKHR_adr := GetProcAddress('clFinalizeCommandBufferKHR');
    private ntv_FinalizeCommandBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer): clErrorCode>(FinalizeCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function FinalizeCommandBufferKHR(command_buffer: cl_command_buffer): clErrorCode :=
      ntv_FinalizeCommandBufferKHR_1(command_buffer);
    
    public RetainCommandBufferKHR_adr := GetProcAddress('clRetainCommandBufferKHR');
    private ntv_RetainCommandBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer): clErrorCode>(RetainCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RetainCommandBufferKHR(command_buffer: cl_command_buffer): clErrorCode :=
      ntv_RetainCommandBufferKHR_1(command_buffer);
    
    public ReleaseCommandBufferKHR_adr := GetProcAddress('clReleaseCommandBufferKHR');
    private ntv_ReleaseCommandBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer): clErrorCode>(ReleaseCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReleaseCommandBufferKHR(command_buffer: cl_command_buffer): clErrorCode :=
      ntv_ReleaseCommandBufferKHR_1(command_buffer);
    
    public EnqueueCommandBufferKHR_adr := GetProcAddress('clEnqueueCommandBufferKHR');
    private ntv_EnqueueCommandBufferKHR_1 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_2 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_3 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_4 := GetProcOrNil&<function(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_5 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_6 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_7 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueCommandBufferKHR_adr);
    private ntv_EnqueueCommandBufferKHR_8 := GetProcOrNil&<function(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueCommandBufferKHR(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueCommandBufferKHR(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueCommandBufferKHR(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueCommandBufferKHR(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_command_queue = ^cl_command_queue;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        ntv_EnqueueCommandBufferKHR_1(num_queues, queues[0], command_buffer, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueCommandBufferKHR_1(num_queues, PCl_command_queue(nil)^, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_command_queue = ^cl_command_queue;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        ntv_EnqueueCommandBufferKHR_2(num_queues, queues[0], command_buffer, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueCommandBufferKHR_2(num_queues, PCl_command_queue(nil)^, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_command_queue = ^cl_command_queue;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        ntv_EnqueueCommandBufferKHR_3(num_queues, queues[0], command_buffer, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueCommandBufferKHR_3(num_queues, PCl_command_queue(nil)^, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: array of cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_command_queue = ^cl_command_queue;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        ntv_EnqueueCommandBufferKHR_4(num_queues, queues[0], command_buffer, num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueCommandBufferKHR_4(num_queues, PCl_command_queue(nil)^, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueCommandBufferKHR_1(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueCommandBufferKHR_1(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueCommandBufferKHR_2(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueCommandBufferKHR_2(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_1(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_2(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_3(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; var queues: cl_command_queue; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_4(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueCommandBufferKHR_5(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueCommandBufferKHR_5(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueCommandBufferKHR_6(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueCommandBufferKHR_6(num_queues, queues, command_buffer, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_5(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_6(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_7(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueCommandBufferKHR(num_queues: UInt32; queues: IntPtr; command_buffer: cl_command_buffer; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueCommandBufferKHR_8(num_queues, queues, command_buffer, num_events_in_wait_list, event_wait_list, &event);
    
    public CommandBarrierWithWaitListKHR_adr := GetProcAddress('clCommandBarrierWithWaitListKHR');
    private ntv_CommandBarrierWithWaitListKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    private ntv_CommandBarrierWithWaitListKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandBarrierWithWaitListKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: array of UInt32; sync_point: array of UInt32; mutable_handle: array of cl_mutable_command): clErrorCode;
      type PUInt32 = ^UInt32;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (mutable_handle<>nil) and (mutable_handle.Length<>0) then
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], mutable_handle[0]) else
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, mutable_handle[0]) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], mutable_handle[0]) else
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, mutable_handle[0]) else
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, PCl_mutable_command(nil)^) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, PCl_mutable_command(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_1(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_2(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_3(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_4(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_5(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_6(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_7(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandBarrierWithWaitListKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandBarrierWithWaitListKHR_8(command_buffer, command_queue, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandCopyBufferKHR_adr := GetProcAddress('clCommandCopyBufferKHR');
    private ntv_CommandCopyBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferKHR_adr);
    private ntv_CommandCopyBufferKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: array of UInt32; sync_point: array of UInt32; mutable_handle: array of cl_mutable_command): clErrorCode;
      type PUInt32 = ^UInt32;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (mutable_handle<>nil) and (mutable_handle.Length<>0) then
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], mutable_handle[0]) else
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, mutable_handle[0]) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], mutable_handle[0]) else
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, mutable_handle[0]) else
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, PCl_mutable_command(nil)^) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, PCl_mutable_command(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferKHR_2(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferKHR_3(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferKHR_4(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferKHR_5(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferKHR_6(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferKHR_7(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_offset: UIntPtr; dst_offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferKHR_8(command_buffer, command_queue, src_buffer, dst_buffer, src_offset, dst_offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandCopyBufferRectKHR_adr := GetProcAddress('clCommandCopyBufferRectKHR');
    private ntv_CommandCopyBufferRectKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferRectKHR_adr);
    private ntv_CommandCopyBufferRectKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferRectKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_1(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_2(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_3(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_4(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_5(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_6(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_7(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferRectKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; src_row_pitch: UIntPtr; src_slice_pitch: UIntPtr; dst_row_pitch: UIntPtr; dst_slice_pitch: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferRectKHR_8(command_buffer, command_queue, src_buffer, dst_buffer, src_origin, dst_origin, region, src_row_pitch, src_slice_pitch, dst_row_pitch, dst_slice_pitch, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandCopyBufferToImageKHR_adr := GetProcAddress('clCommandCopyBufferToImageKHR');
    private ntv_CommandCopyBufferToImageKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    private ntv_CommandCopyBufferToImageKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyBufferToImageKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_1(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_2(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_3(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_4(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_5(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_6(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_7(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyBufferToImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_buffer: cl_mem; dst_image: cl_mem; src_offset: UIntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyBufferToImageKHR_8(command_buffer, command_queue, src_buffer, dst_image, src_offset, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandCopyImageKHR_adr := GetProcAddress('clCommandCopyImageKHR');
    private ntv_CommandCopyImageKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageKHR_adr);
    private ntv_CommandCopyImageKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageKHR_1(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageKHR_2(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageKHR_3(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; var src_origin: UIntPtr; var dst_origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageKHR_4(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageKHR_5(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageKHR_6(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageKHR_7(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_image: cl_mem; src_origin: IntPtr; dst_origin: IntPtr; region: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageKHR_8(command_buffer, command_queue, src_image, dst_image, src_origin, dst_origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandCopyImageToBufferKHR_adr := GetProcAddress('clCommandCopyImageToBufferKHR');
    private ntv_CommandCopyImageToBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    private ntv_CommandCopyImageToBufferKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandCopyImageToBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_1(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_2(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_3(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; var src_origin: UIntPtr; var region: UIntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_4(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_5(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_6(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_7(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandCopyImageToBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; src_image: cl_mem; dst_buffer: cl_mem; src_origin: IntPtr; region: IntPtr; dst_offset: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandCopyImageToBufferKHR_8(command_buffer, command_queue, src_image, dst_buffer, src_origin, region, dst_offset, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandFillBufferKHR_adr := GetProcAddress('clCommandFillBufferKHR');
    private ntv_CommandFillBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillBufferKHR_adr);
    private ntv_CommandFillBufferKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandFillBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: array of UInt32; sync_point: array of UInt32; mutable_handle: array of cl_mutable_command): clErrorCode;
      type PUInt32 = ^UInt32;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (mutable_handle<>nil) and (mutable_handle.Length<>0) then
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], mutable_handle[0]) else
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, mutable_handle[0]) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], mutable_handle[0]) else
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, mutable_handle[0]) else
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, PCl_mutable_command(nil)^) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, PCl_mutable_command(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillBufferKHR_1(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillBufferKHR_2(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillBufferKHR_3(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillBufferKHR_4(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillBufferKHR_5(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillBufferKHR_6(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillBufferKHR_7(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillBufferKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; buffer: cl_mem; pattern: IntPtr; pattern_size: UIntPtr; offset: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillBufferKHR_8(command_buffer, command_queue, buffer, pattern, pattern_size, offset, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandFillImageKHR_adr := GetProcAddress('clCommandFillImageKHR');
    private ntv_CommandFillImageKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: Byte; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandFillImageKHR_adr);
    private ntv_CommandFillImageKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandFillImageKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR<T>(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode; where T: record;
    begin
      Result := ntv_CommandFillImageKHR_1(command_buffer, command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR<T>(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_CommandFillImageKHR_2(command_buffer, command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR<T>(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode; where T: record;
    begin
      Result := ntv_CommandFillImageKHR_3(command_buffer, command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR<T>(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; var fill_color: T; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_CommandFillImageKHR_4(command_buffer, command_queue, image, PByte(pointer(@fill_color))^, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillImageKHR_5(command_buffer, command_queue, image, fill_color, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillImageKHR_6(command_buffer, command_queue, image, fill_color, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandFillImageKHR_7(command_buffer, command_queue, image, fill_color, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandFillImageKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; image: cl_mem; fill_color: pointer; var origin: UIntPtr; var region: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandFillImageKHR_8(command_buffer, command_queue, image, fill_color, origin, region, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandNDRangeKernelKHR_adr := GetProcAddress('clCommandNDRangeKernelKHR');
    private ntv_CommandNDRangeKernelKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandNDRangeKernelKHR_adr);
    private ntv_CommandNDRangeKernelKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandNDRangeKernelKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_1(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_2(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_3(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; var properties: clNDRangeKernelCommandProperties; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var local_work_size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_4(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_5(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_6(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_7(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandNDRangeKernelKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; properties: IntPtr; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; local_work_size: IntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandNDRangeKernelKHR_8(command_buffer, command_queue, properties, kernel, work_dim, global_work_offset, global_work_size, local_work_size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public GetCommandBufferInfoKHR_adr := GetProcAddress('clGetCommandBufferInfoKHR');
    private ntv_GetCommandBufferInfoKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetCommandBufferInfoKHR_adr);
    private ntv_GetCommandBufferInfoKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetCommandBufferInfoKHR_adr);
    private ntv_GetCommandBufferInfoKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetCommandBufferInfoKHR_adr);
    private ntv_GetCommandBufferInfoKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetCommandBufferInfoKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR<T>(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetCommandBufferInfoKHR_1(command_buffer, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR<T>(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetCommandBufferInfoKHR_2(command_buffer, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetCommandBufferInfoKHR_3(command_buffer, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR(command_buffer: cl_command_buffer; param_name: clCommandBufferInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetCommandBufferInfoKHR_4(command_buffer, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_QUEUES(command_buffer: cl_command_buffer; var param_value: array of cl_command_queue): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetCommandBufferInfoKHR_3(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_QUEUES, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new cl_command_queue[param_value_sz.ToUInt64 div Marshal.SizeOf&<cl_command_queue>];
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_QUEUES, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_QUEUES(command_buffer: cl_command_buffer; param_value_count: UInt32; var param_value: cl_command_queue): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<cl_command_queue>);
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_QUEUES, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_NUM_QUEUES(command_buffer: cl_command_buffer; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_NUM_QUEUES, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_REFERENCE_COUNT(command_buffer: cl_command_buffer; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_REFERENCE_COUNT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_STATE(command_buffer: cl_command_buffer; var param_value: clCommandBufferState; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clCommandBufferState>);
      var param_value_ret_size: UIntPtr;
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_STATE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_PROPERTIES_ARRAY(command_buffer: cl_command_buffer; var param_value: array of clCommandBufferProperties): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetCommandBufferInfoKHR_3(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_PROPERTIES_ARRAY, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new clCommandBufferProperties[param_value_sz.ToUInt64 div Marshal.SizeOf&<clCommandBufferProperties>];
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_PROPERTIES_ARRAY, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_PROPERTIES_ARRAY(command_buffer: cl_command_buffer; param_value_count: UInt32; var param_value: clCommandBufferProperties): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<clCommandBufferProperties>);
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_PROPERTIES_ARRAY, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetCommandBufferInfoKHR_COMMAND_BUFFER_CONTEXT(command_buffer: cl_command_buffer; var param_value: cl_context; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_context>);
      var param_value_ret_size: UIntPtr;
      Result := GetCommandBufferInfoKHR(command_buffer, clCommandBufferInfo.COMMAND_BUFFER_CONTEXT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    
    public CommandSVMMemcpyKHR_adr := GetProcAddress('clCommandSVMMemcpyKHR');
    private ntv_CommandSVMMemcpyKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemcpyKHR_adr);
    private ntv_CommandSVMMemcpyKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemcpyKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: array of UInt32; sync_point: array of UInt32; mutable_handle: array of cl_mutable_command): clErrorCode;
      type PUInt32 = ^UInt32;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (mutable_handle<>nil) and (mutable_handle.Length<>0) then
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], mutable_handle[0]) else
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, mutable_handle[0]) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], mutable_handle[0]) else
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, mutable_handle[0]) else
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, PCl_mutable_command(nil)^) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, PCl_mutable_command(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_1(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_2(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_3(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_4(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_5(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_6(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_7(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemcpyKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; dst_ptr: IntPtr; src_ptr: IntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemcpyKHR_8(command_buffer, command_queue, dst_ptr, src_ptr, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
    public CommandSVMMemFillKHR_adr := GetProcAddress('clCommandSVMMemFillKHR');
    private ntv_CommandSVMMemFillKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode>(CommandSVMMemFillKHR_adr);
    private ntv_CommandSVMMemFillKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode>(CommandSVMMemFillKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: array of UInt32; sync_point: array of UInt32; mutable_handle: array of cl_mutable_command): clErrorCode;
      type PUInt32 = ^UInt32;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (mutable_handle<>nil) and (mutable_handle.Length<>0) then
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], mutable_handle[0]) else
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, mutable_handle[0]) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], mutable_handle[0]) else
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, mutable_handle[0]) else
        if (sync_point_wait_list<>nil) and (sync_point_wait_list.Length<>0) then
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list[0], sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list[0], PUInt32(nil)^, PCl_mutable_command(nil)^) else
          if (sync_point<>nil) and (sync_point.Length<>0) then
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, PUInt32(nil)^, sync_point[0], PCl_mutable_command(nil)^) else
            ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, PUInt32(nil)^, PUInt32(nil)^, PCl_mutable_command(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemFillKHR_1(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemFillKHR_2(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemFillKHR_3(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; var sync_point_wait_list: UInt32; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemFillKHR_4(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemFillKHR_5(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; var sync_point: UInt32; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemFillKHR_6(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; var mutable_handle: cl_mutable_command): clErrorCode :=
      ntv_CommandSVMMemFillKHR_7(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CommandSVMMemFillKHR(command_buffer: cl_command_buffer; command_queue: cl_command_queue; svm_ptr: IntPtr; pattern: IntPtr; pattern_size: UIntPtr; size: UIntPtr; num_sync_points_in_wait_list: UInt32; sync_point_wait_list: IntPtr; sync_point: IntPtr; mutable_handle: IntPtr): clErrorCode :=
      ntv_CommandSVMMemFillKHR_8(command_buffer, command_queue, svm_ptr, pattern, pattern_size, size, num_sync_points_in_wait_list, sync_point_wait_list, sync_point, mutable_handle);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_command_buffer_multi_device
  /// version: 0.9.1 (provisional)
  /// ext dependencies:
  /// - cl_khr_command_buffer (clCommandBufferKHR)
  clCommandBufferMultiDeviceKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCommandBufferMultiDeviceKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_command_buffer_multi_device';
    
    public RemapCommandBufferKHR_adr := GetProcAddress('clRemapCommandBufferKHR');
    private ntv_RemapCommandBufferKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; var handles: cl_mutable_command; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; var handles: cl_mutable_command; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_3 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; handles: IntPtr; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_4 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; handles: IntPtr; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_5 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; var handles: cl_mutable_command; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_6 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; var handles: cl_mutable_command; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_7 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; handles: IntPtr; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    private ntv_RemapCommandBufferKHR_8 := GetProcOrNil&<function(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; handles: IntPtr; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer>(RemapCommandBufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: array of cl_command_queue; num_handles: UInt32; handles: array of cl_mutable_command; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer;
      type PCl_command_queue = ^cl_command_queue;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        if (handles<>nil) and (handles.Length<>0) then
          ntv_RemapCommandBufferKHR_1(command_buffer, automatic, num_queues, queues[0], num_handles, handles[0], handles_ret, errcode_ret) else
          ntv_RemapCommandBufferKHR_1(command_buffer, automatic, num_queues, queues[0], num_handles, PCl_mutable_command(nil)^, handles_ret, errcode_ret) else
        if (handles<>nil) and (handles.Length<>0) then
          ntv_RemapCommandBufferKHR_1(command_buffer, automatic, num_queues, PCl_command_queue(nil)^, num_handles, handles[0], handles_ret, errcode_ret) else
          ntv_RemapCommandBufferKHR_1(command_buffer, automatic, num_queues, PCl_command_queue(nil)^, num_handles, PCl_mutable_command(nil)^, handles_ret, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: array of cl_command_queue; num_handles: UInt32; handles: array of cl_mutable_command; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer;
      type PCl_command_queue = ^cl_command_queue;
      type PCl_mutable_command = ^cl_mutable_command;
    begin
      Result := if (queues<>nil) and (queues.Length<>0) then
        if (handles<>nil) and (handles.Length<>0) then
          ntv_RemapCommandBufferKHR_2(command_buffer, automatic, num_queues, queues[0], num_handles, handles[0], handles_ret, errcode_ret) else
          ntv_RemapCommandBufferKHR_2(command_buffer, automatic, num_queues, queues[0], num_handles, PCl_mutable_command(nil)^, handles_ret, errcode_ret) else
        if (handles<>nil) and (handles.Length<>0) then
          ntv_RemapCommandBufferKHR_2(command_buffer, automatic, num_queues, PCl_command_queue(nil)^, num_handles, handles[0], handles_ret, errcode_ret) else
          ntv_RemapCommandBufferKHR_2(command_buffer, automatic, num_queues, PCl_command_queue(nil)^, num_handles, PCl_mutable_command(nil)^, handles_ret, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; var handles: cl_mutable_command; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_1(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; var handles: cl_mutable_command; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_2(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; handles: IntPtr; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_3(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; var queues: cl_command_queue; num_handles: UInt32; handles: IntPtr; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_4(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; var handles: cl_mutable_command; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_5(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; var handles: cl_mutable_command; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_6(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; handles: IntPtr; var handles_ret: cl_mutable_command; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_7(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RemapCommandBufferKHR(command_buffer: cl_command_buffer; automatic: clBool; num_queues: UInt32; queues: IntPtr; num_handles: UInt32; handles: IntPtr; handles_ret: IntPtr; var errcode_ret: clErrorCode): cl_command_buffer :=
      ntv_RemapCommandBufferKHR_8(command_buffer, automatic, num_queues, queues, num_handles, handles, handles_ret, errcode_ret);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_command_buffer_mutable_dispatch
  /// version: 0.9.1 (provisional)
  /// ext dependencies:
  /// - cl_khr_command_buffer (clCommandBufferKHR)
  clCommandBufferMutableDispatchKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCommandBufferMutableDispatchKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_command_buffer_mutable_dispatch';
    
    public UpdateMutableCommandsKHR_adr := GetProcAddress('clUpdateMutableCommandsKHR');
    private ntv_UpdateMutableCommandsKHR_1 := GetProcOrNil&<function(command_buffer: cl_command_buffer; var mutable_config: cl_mutable_base_config): clErrorCode>(UpdateMutableCommandsKHR_adr);
    private ntv_UpdateMutableCommandsKHR_2 := GetProcOrNil&<function(command_buffer: cl_command_buffer; mutable_config: IntPtr): clErrorCode>(UpdateMutableCommandsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function UpdateMutableCommandsKHR(command_buffer: cl_command_buffer; mutable_config: array of cl_mutable_base_config): clErrorCode;
      type PCl_mutable_base_config = ^cl_mutable_base_config;
    begin
      Result := if (mutable_config<>nil) and (mutable_config.Length<>0) then
        ntv_UpdateMutableCommandsKHR_1(command_buffer, mutable_config[0]) else
        ntv_UpdateMutableCommandsKHR_1(command_buffer, PCl_mutable_base_config(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function UpdateMutableCommandsKHR(command_buffer: cl_command_buffer; var mutable_config: cl_mutable_base_config): clErrorCode :=
      ntv_UpdateMutableCommandsKHR_1(command_buffer, mutable_config);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function UpdateMutableCommandsKHR(command_buffer: cl_command_buffer; mutable_config: IntPtr): clErrorCode :=
      ntv_UpdateMutableCommandsKHR_2(command_buffer, mutable_config);
    
    public GetMutableCommandInfoKHR_adr := GetProcAddress('clGetMutableCommandInfoKHR');
    private ntv_GetMutableCommandInfoKHR_1 := GetProcOrNil&<function(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetMutableCommandInfoKHR_adr);
    private ntv_GetMutableCommandInfoKHR_2 := GetProcOrNil&<function(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetMutableCommandInfoKHR_adr);
    private ntv_GetMutableCommandInfoKHR_3 := GetProcOrNil&<function(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetMutableCommandInfoKHR_adr);
    private ntv_GetMutableCommandInfoKHR_4 := GetProcOrNil&<function(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetMutableCommandInfoKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR<T>(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetMutableCommandInfoKHR_1(command, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR<T>(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetMutableCommandInfoKHR_2(command, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetMutableCommandInfoKHR_3(command, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR(command: cl_mutable_command; param_name: clMutableCommandInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetMutableCommandInfoKHR_4(command, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_COMMAND_COMMAND_QUEUE(command: cl_mutable_command; var param_value: cl_command_queue; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_command_queue>);
      var param_value_ret_size: UIntPtr;
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_COMMAND_COMMAND_QUEUE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_COMMAND_COMMAND_BUFFER(command: cl_mutable_command; var param_value: cl_command_buffer; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_command_buffer>);
      var param_value_ret_size: UIntPtr;
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_COMMAND_COMMAND_BUFFER, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_PROPERTIES_ARRAY(command: cl_mutable_command; var param_value: array of clNDRangeKernelCommandProperties): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetMutableCommandInfoKHR_3(command, clMutableCommandInfo.MUTABLE_DISPATCH_PROPERTIES_ARRAY, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new clNDRangeKernelCommandProperties[param_value_sz.ToUInt64 div Marshal.SizeOf&<clNDRangeKernelCommandProperties>];
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_PROPERTIES_ARRAY, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_PROPERTIES_ARRAY(command: cl_mutable_command; param_value_count: UInt32; var param_value: clNDRangeKernelCommandProperties): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<clNDRangeKernelCommandProperties>);
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_PROPERTIES_ARRAY, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_KERNEL(command: cl_mutable_command; var param_value: cl_kernel; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_kernel>);
      var param_value_ret_size: UIntPtr;
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_KERNEL, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_DIMENSIONS(command: cl_mutable_command; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_DIMENSIONS, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET(command: cl_mutable_command; var param_value: array of UIntPtr): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetMutableCommandInfoKHR_3(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new UIntPtr[param_value_sz.ToUInt64 div Marshal.SizeOf&<UIntPtr>];
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET(command: cl_mutable_command; param_value_count: UInt32; var param_value: UIntPtr): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<UIntPtr>);
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_OFFSET, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_GLOBAL_WORK_SIZE(command: cl_mutable_command; var param_value: array of UIntPtr): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetMutableCommandInfoKHR_3(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_SIZE, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new UIntPtr[param_value_sz.ToUInt64 div Marshal.SizeOf&<UIntPtr>];
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_SIZE, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_GLOBAL_WORK_SIZE(command: cl_mutable_command; param_value_count: UInt32; var param_value: UIntPtr): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<UIntPtr>);
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_GLOBAL_WORK_SIZE, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_LOCAL_WORK_SIZE(command: cl_mutable_command; var param_value: array of UIntPtr): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetMutableCommandInfoKHR_3(command, clMutableCommandInfo.MUTABLE_DISPATCH_LOCAL_WORK_SIZE, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new UIntPtr[param_value_sz.ToUInt64 div Marshal.SizeOf&<UIntPtr>];
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_LOCAL_WORK_SIZE, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_DISPATCH_LOCAL_WORK_SIZE(command: cl_mutable_command; param_value_count: UInt32; var param_value: UIntPtr): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<UIntPtr>);
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_DISPATCH_LOCAL_WORK_SIZE, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetMutableCommandInfoKHR_MUTABLE_COMMAND_COMMAND_TYPE(command: cl_mutable_command; var param_value: clCommandType; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clCommandType>);
      var param_value_ret_size: UIntPtr;
      Result := GetMutableCommandInfoKHR(command, clMutableCommandInfo.MUTABLE_COMMAND_COMMAND_TYPE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_create_command_queue
  /// promoted to: cl 2.0
  clCreateCommandQueueKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clCreateCommandQueueKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_create_command_queue';
    
    public CreateCommandQueueWithPropertiesKHR_adr := GetProcAddress('clCreateCommandQueueWithPropertiesKHR');
    private ntv_CreateCommandQueueWithPropertiesKHR_1 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; var properties: UInt64; var errcode_ret: clErrorCode): cl_command_queue>(CreateCommandQueueWithPropertiesKHR_adr);
    private ntv_CreateCommandQueueWithPropertiesKHR_2 := GetProcOrNil&<function(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_queue>(CreateCommandQueueWithPropertiesKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; properties: array of UInt64; var errcode_ret: clErrorCode): cl_command_queue;
      type PUInt64 = ^UInt64;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_CreateCommandQueueWithPropertiesKHR_1(context, device, properties[0], errcode_ret) else
        ntv_CreateCommandQueueWithPropertiesKHR_1(context, device, PUInt64(nil)^, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; var properties: UInt64; var errcode_ret: clErrorCode): cl_command_queue :=
      ntv_CreateCommandQueueWithPropertiesKHR_1(context, device, properties, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateCommandQueueWithPropertiesKHR(context: cl_context; device: cl_device_id; properties: IntPtr; var errcode_ret: clErrorCode): cl_command_queue :=
      ntv_CreateCommandQueueWithPropertiesKHR_2(context, device, properties, errcode_ret);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_d3d10_sharing
  clD3d10SharingKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clD3d10SharingKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_d3d10_sharing';
    
    public GetDeviceIDsFromD3D10KHR_adr := GetProcAddress('clGetDeviceIDsFromD3D10KHR');
    private ntv_GetDeviceIDsFromD3D10KHR_1 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromD3D10KHR_adr);
    private ntv_GetDeviceIDsFromD3D10KHR_2 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromD3D10KHR_adr);
    private ntv_GetDeviceIDsFromD3D10KHR_3 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromD3D10KHR_adr);
    private ntv_GetDeviceIDsFromD3D10KHR_4 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromD3D10KHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromD3D10KHR_1(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromD3D10KHR_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromD3D10KHR_3(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D10KHR(platform: cl_platform_id; d3d_device_source: clD3D10DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D10DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromD3D10KHR_4(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    
    public CreateFromD3D10BufferKHR_adr := GetProcAddress('clCreateFromD3D10BufferKHR');
    private ntv_CreateFromD3D10BufferKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d10_buffer; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D10BufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D10BufferKHR(context: cl_context; flags: clMemFlags; resource: d3d10_buffer; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D10BufferKHR_1(context, flags, resource, errcode_ret);
    
    public CreateFromD3D10Texture2DKHR_adr := GetProcAddress('clCreateFromD3D10Texture2DKHR');
    private ntv_CreateFromD3D10Texture2DKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d10_texture_2d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D10Texture2DKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D10Texture2DKHR(context: cl_context; flags: clMemFlags; resource: d3d10_texture_2d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D10Texture2DKHR_1(context, flags, resource, subresource, errcode_ret);
    
    public CreateFromD3D10Texture3DKHR_adr := GetProcAddress('clCreateFromD3D10Texture3DKHR');
    private ntv_CreateFromD3D10Texture3DKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d10_texture_3d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D10Texture3DKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D10Texture3DKHR(context: cl_context; flags: clMemFlags; resource: d3d10_texture_3d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D10Texture3DKHR_1(context, flags, resource, subresource, errcode_ret);
    
    public EnqueueAcquireD3D10ObjectsKHR_adr := GetProcAddress('clEnqueueAcquireD3D10ObjectsKHR');
    private ntv_EnqueueAcquireD3D10ObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D10ObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D10ObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D10ObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseD3D10ObjectsKHR_adr := GetProcAddress('clEnqueueReleaseD3D10ObjectsKHR');
    private ntv_EnqueueReleaseD3D10ObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D10ObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D10ObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseD3D10ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D10ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D10ObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_d3d11_sharing
  clD3d11SharingKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clD3d11SharingKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_d3d11_sharing';
    
    public GetDeviceIDsFromD3D11KHR_adr := GetProcAddress('clGetDeviceIDsFromD3D11KHR');
    private ntv_GetDeviceIDsFromD3D11KHR_1 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromD3D11KHR_adr);
    private ntv_GetDeviceIDsFromD3D11KHR_2 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromD3D11KHR_adr);
    private ntv_GetDeviceIDsFromD3D11KHR_3 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromD3D11KHR_adr);
    private ntv_GetDeviceIDsFromD3D11KHR_4 := GetProcOrNil&<function(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromD3D11KHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromD3D11KHR_1(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromD3D11KHR_2(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromD3D11KHR_3(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromD3D11KHR(platform: cl_platform_id; d3d_device_source: clD3D11DeviceSource; d3d_object: IntPtr; d3d_device_set: clD3D11DeviceSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromD3D11KHR_4(platform, d3d_device_source, d3d_object, d3d_device_set, num_entries, devices, num_devices);
    
    public CreateFromD3D11BufferKHR_adr := GetProcAddress('clCreateFromD3D11BufferKHR');
    private ntv_CreateFromD3D11BufferKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d11_buffer; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D11BufferKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D11BufferKHR(context: cl_context; flags: clMemFlags; resource: d3d11_buffer; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D11BufferKHR_1(context, flags, resource, errcode_ret);
    
    public CreateFromD3D11Texture2DKHR_adr := GetProcAddress('clCreateFromD3D11Texture2DKHR');
    private ntv_CreateFromD3D11Texture2DKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d11_texture_2d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D11Texture2DKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D11Texture2DKHR(context: cl_context; flags: clMemFlags; resource: d3d11_texture_2d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D11Texture2DKHR_1(context, flags, resource, subresource, errcode_ret);
    
    public CreateFromD3D11Texture3DKHR_adr := GetProcAddress('clCreateFromD3D11Texture3DKHR');
    private ntv_CreateFromD3D11Texture3DKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; resource: d3d11_texture_3d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromD3D11Texture3DKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromD3D11Texture3DKHR(context: cl_context; flags: clMemFlags; resource: d3d11_texture_3d; subresource: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromD3D11Texture3DKHR_1(context, flags, resource, subresource, errcode_ret);
    
    public EnqueueAcquireD3D11ObjectsKHR_adr := GetProcAddress('clEnqueueAcquireD3D11ObjectsKHR');
    private ntv_EnqueueAcquireD3D11ObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    private ntv_EnqueueAcquireD3D11ObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireD3D11ObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireD3D11ObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseD3D11ObjectsKHR_adr := GetProcAddress('clEnqueueReleaseD3D11ObjectsKHR');
    private ntv_EnqueueReleaseD3D11ObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    private ntv_EnqueueReleaseD3D11ObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseD3D11ObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseD3D11ObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseD3D11ObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseD3D11ObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_khr_depth_images
  /// promoted to: cl 2.0
  clDepthImagesKHR = static class
    public const ExtensionString = 'cl_khr_depth_images';
  end;
  
  /// id: cl_khr_device_enqueue_local_arg_types
  clDeviceEnqueueLocalArgTypesKHR = static class
    public const ExtensionString = 'cl_khr_device_enqueue_local_arg_types';
  end;
  
  /// id: cl_khr_device_uuid
  clDeviceUuidKHR = static class
    public const ExtensionString = 'cl_khr_device_uuid';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_dx9_media_sharing
  clDx9MediaSharingKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clDx9MediaSharingKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_dx9_media_sharing';
    
    public GetDeviceIDsFromDX9MediaAdapterKHR_adr := GetProcAddress('clGetDeviceIDsFromDX9MediaAdapterKHR');
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_1 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_2 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_3 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_4 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_5 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_6 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_7 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    private ntv_GetDeviceIDsFromDX9MediaAdapterKHR_8 := GetProcOrNil&<function(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode>(GetDeviceIDsFromDX9MediaAdapterKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_1(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_2(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_3(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; var media_adapter_type: clDx9MediaAdapterType; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_4(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_5(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; var devices: cl_device_id; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_6(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; var num_devices: UInt32): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_7(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceIDsFromDX9MediaAdapterKHR(platform: cl_platform_id; num_media_adapters: UInt32; media_adapter_type: IntPtr; media_adapters: IntPtr; media_adapter_set: clDx9MediaAdapterSet; num_entries: UInt32; devices: IntPtr; num_devices: IntPtr): clErrorCode :=
      ntv_GetDeviceIDsFromDX9MediaAdapterKHR_8(platform, num_media_adapters, media_adapter_type, media_adapters, media_adapter_set, num_entries, devices, num_devices);
    
    public CreateFromDX9MediaSurfaceKHR_adr := GetProcAddress('clCreateFromDX9MediaSurfaceKHR');
    private ntv_CreateFromDX9MediaSurfaceKHR_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; adapter_type: clDx9MediaAdapterType; surface_info: IntPtr; plane: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromDX9MediaSurfaceKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromDX9MediaSurfaceKHR(context: cl_context; flags: clMemFlags; adapter_type: clDx9MediaAdapterType; surface_info: IntPtr; plane: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromDX9MediaSurfaceKHR_1(context, flags, adapter_type, surface_info, plane, errcode_ret);
    
    public EnqueueAcquireDX9MediaSurfacesKHR_adr := GetProcAddress('clEnqueueAcquireDX9MediaSurfacesKHR');
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueAcquireDX9MediaSurfacesKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireDX9MediaSurfacesKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireDX9MediaSurfacesKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseDX9MediaSurfacesKHR_adr := GetProcAddress('clEnqueueReleaseDX9MediaSurfacesKHR');
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    private ntv_EnqueueReleaseDX9MediaSurfacesKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseDX9MediaSurfacesKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseDX9MediaSurfacesKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseDX9MediaSurfacesKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseDX9MediaSurfacesKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_egl_event
  clEglEventKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clEglEventKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_egl_event';
    
    public CreateEventFromEGLSyncKHR_adr := GetProcAddress('clCreateEventFromEGLSyncKHR');
    private ntv_CreateEventFromEGLSyncKHR_1 := GetProcOrNil&<function(context: cl_context; sync: cl_eglSync; display: cl_eglDisplay; var errcode_ret: clErrorCode): cl_event>(CreateEventFromEGLSyncKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateEventFromEGLSyncKHR(context: cl_context; sync: cl_eglSync; display: cl_eglDisplay; var errcode_ret: clErrorCode): cl_event :=
      ntv_CreateEventFromEGLSyncKHR_1(context, sync, display, errcode_ret);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_egl_image
  clEglImageKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clEglImageKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_egl_image';
    
    public CreateFromEGLImageKHR_adr := GetProcAddress('clCreateFromEGLImageKHR');
    private ntv_CreateFromEGLImageKHR_1 := GetProcOrNil&<function(context: cl_context; egldisplay: cl_eglDisplay; eglimage: cl_eglImage; flags: clMemFlags; var properties: clEglImageProperties; var errcode_ret: clErrorCode): cl_mem>(CreateFromEGLImageKHR_adr);
    private ntv_CreateFromEGLImageKHR_2 := GetProcOrNil&<function(context: cl_context; egldisplay: cl_eglDisplay; eglimage: cl_eglImage; flags: clMemFlags; properties: IntPtr; var errcode_ret: clErrorCode): cl_mem>(CreateFromEGLImageKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromEGLImageKHR(context: cl_context; egldisplay: cl_eglDisplay; eglimage: cl_eglImage; flags: clMemFlags; properties: array of clEglImageProperties; var errcode_ret: clErrorCode): cl_mem;
      type PClEglImageProperties = ^clEglImageProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_CreateFromEGLImageKHR_1(context, egldisplay, eglimage, flags, properties[0], errcode_ret) else
        ntv_CreateFromEGLImageKHR_1(context, egldisplay, eglimage, flags, PClEglImageProperties(nil)^, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromEGLImageKHR(context: cl_context; egldisplay: cl_eglDisplay; eglimage: cl_eglImage; flags: clMemFlags; var properties: clEglImageProperties; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromEGLImageKHR_1(context, egldisplay, eglimage, flags, properties, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromEGLImageKHR(context: cl_context; egldisplay: cl_eglDisplay; eglimage: cl_eglImage; flags: clMemFlags; properties: IntPtr; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromEGLImageKHR_2(context, egldisplay, eglimage, flags, properties, errcode_ret);
    
    public EnqueueAcquireEGLObjectsKHR_adr := GetProcAddress('clEnqueueAcquireEGLObjectsKHR');
    private ntv_EnqueueAcquireEGLObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    private ntv_EnqueueAcquireEGLObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireEGLObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireEGLObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseEGLObjectsKHR_adr := GetProcAddress('clEnqueueReleaseEGLObjectsKHR');
    private ntv_EnqueueReleaseEGLObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    private ntv_EnqueueReleaseEGLObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseEGLObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseEGLObjectsKHR(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseEGLObjectsKHR(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseEGLObjectsKHR_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_khr_expect_assume
  clExpectAssumeKHR = static class
    public const ExtensionString = 'cl_khr_expect_assume';
  end;
  
  /// id: cl_khr_extended_async_copies
  clExtendedAsyncCopiesKHR = static class
    public const ExtensionString = 'cl_khr_extended_async_copies';
  end;
  
  /// id: cl_khr_extended_bit_ops
  clExtendedBitOpsKHR = static class
    public const ExtensionString = 'cl_khr_extended_bit_ops';
  end;
  
  /// id: cl_khr_extended_versioning
  /// promoted to: cl 3.0
  clExtendedVersioningKHR = static class
    public const ExtensionString = 'cl_khr_extended_versioning';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_external_memory
  /// version: 0.9.3
  /// core dependency: cl 3.0
  clExternalMemoryKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clExternalMemoryKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_external_memory';
    
    public EnqueueAcquireExternalMemObjectsKHR_adr := GetProcAddress('clEnqueueAcquireExternalMemObjectsKHR');
    private ntv_EnqueueAcquireExternalMemObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    private ntv_EnqueueAcquireExternalMemObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireExternalMemObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_1(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_2(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_3(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_3(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_4(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_4(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_3(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_4(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_7(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireExternalMemObjectsKHR_8(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseExternalMemObjectsKHR_adr := GetProcAddress('clEnqueueReleaseExternalMemObjectsKHR');
    private ntv_EnqueueReleaseExternalMemObjectsKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    private ntv_EnqueueReleaseExternalMemObjectsKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseExternalMemObjectsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseExternalMemObjectsKHR(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_1(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_2(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_3(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_3(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_4(command_queue, num_mem_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_4(command_queue, num_mem_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_1(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_2(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_3(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_4(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_5(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_6(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_7(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseExternalMemObjectsKHR(command_queue: cl_command_queue; num_mem_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseExternalMemObjectsKHR_8(command_queue, num_mem_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
  end;
  
  /// id: cl_khr_external_memory_dma_buf
  /// version: 0.9.3
  /// core dependency: cl 3.0
  /// ext dependencies:
  /// - cl_khr_external_memory (clExternalMemoryKHR)
  clExternalMemoryDmaBufKHR = static class
    public const ExtensionString = 'cl_khr_external_memory_dma_buf';
  end;
  
  /// id: cl_khr_external_memory_opaque_fd
  /// version: 0.9.3
  /// core dependency: cl 3.0
  /// ext dependencies:
  /// - cl_khr_external_memory (clExternalMemoryKHR)
  clExternalMemoryOpaqueFdKHR = static class
    public const ExtensionString = 'cl_khr_external_memory_opaque_fd';
  end;
  
  /// id: cl_khr_external_memory_win32
  /// version: 0.9.3
  /// core dependency: cl 3.0
  /// ext dependencies:
  /// - cl_khr_external_memory (clExternalMemoryKHR)
  clExternalMemoryWin32KHR = static class
    public const ExtensionString = 'cl_khr_external_memory_win32';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_semaphore
  /// version: 0.9.1
  /// core dependency: cl 1.2
  clSemaphoreKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSemaphoreKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_semaphore';
    
    public CreateSemaphoreWithPropertiesKHR_adr := GetProcAddress('clCreateSemaphoreWithPropertiesKHR');
    private ntv_CreateSemaphoreWithPropertiesKHR_1 := GetProcOrNil&<function(context: cl_context; var sema_props: clSemaphoreProperties; var errcode_ret: clErrorCode): cl_semaphore>(CreateSemaphoreWithPropertiesKHR_adr);
    private ntv_CreateSemaphoreWithPropertiesKHR_2 := GetProcOrNil&<function(context: cl_context; sema_props: IntPtr; var errcode_ret: clErrorCode): cl_semaphore>(CreateSemaphoreWithPropertiesKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSemaphoreWithPropertiesKHR(context: cl_context; sema_props: array of clSemaphoreProperties; var errcode_ret: clErrorCode): cl_semaphore;
      type PClSemaphoreProperties = ^clSemaphoreProperties;
    begin
      Result := if (sema_props<>nil) and (sema_props.Length<>0) then
        ntv_CreateSemaphoreWithPropertiesKHR_1(context, sema_props[0], errcode_ret) else
        ntv_CreateSemaphoreWithPropertiesKHR_1(context, PClSemaphoreProperties(nil)^, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSemaphoreWithPropertiesKHR(context: cl_context; var sema_props: clSemaphoreProperties; var errcode_ret: clErrorCode): cl_semaphore :=
      ntv_CreateSemaphoreWithPropertiesKHR_1(context, sema_props, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateSemaphoreWithPropertiesKHR(context: cl_context; sema_props: IntPtr; var errcode_ret: clErrorCode): cl_semaphore :=
      ntv_CreateSemaphoreWithPropertiesKHR_2(context, sema_props, errcode_ret);
    
    public EnqueueWaitSemaphoresKHR_adr := GetProcAddress('clEnqueueWaitSemaphoresKHR');
    private ntv_EnqueueWaitSemaphoresKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_9 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_10 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_11 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_12 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_13 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_14 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_15 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    private ntv_EnqueueWaitSemaphoresKHR_16 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueWaitSemaphoresKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueWaitSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueWaitSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueWaitSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueWaitSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_3(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_3(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_4(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueWaitSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueWaitSemaphoresKHR_4(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_7(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_8(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_11(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_12(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueWaitSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueWaitSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_15(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueWaitSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueWaitSemaphoresKHR_16(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueSignalSemaphoresKHR_adr := GetProcAddress('clEnqueueSignalSemaphoresKHR');
    private ntv_EnqueueSignalSemaphoresKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_9 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_10 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_11 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_12 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_13 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_14 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_15 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    private ntv_EnqueueSignalSemaphoresKHR_16 := GetProcOrNil&<function(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueSignalSemaphoresKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSignalSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSignalSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueSignalSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueSignalSemaphoresKHR(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_3(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_3(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: array of cl_semaphore; sema_payload_list: array of UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_semaphore = ^cl_semaphore;
      type PUInt64 = ^UInt64;
    begin
      Result := if (sema_payload_list<>nil) and (sema_payload_list.Length<>0) then
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects[0], sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_4(command_queue, num_sema_objects, PCl_semaphore(nil)^, sema_payload_list[0], num_events_in_wait_list, event_wait_list, &event) else
        if (sema_objects<>nil) and (sema_objects.Length<>0) then
          ntv_EnqueueSignalSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects[0], PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event) else
          ntv_EnqueueSignalSemaphoresKHR_4(command_queue, num_sema_objects, PCl_semaphore(nil)^, PUInt64(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_1(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_2(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_3(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_4(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_5(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_6(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_7(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; var sema_objects: cl_semaphore; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_8(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_9(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_10(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_11(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; var sema_payload_list: UInt64; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_12(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueSignalSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueSignalSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_13(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_14(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_15(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueSignalSemaphoresKHR(command_queue: cl_command_queue; num_sema_objects: UInt32; sema_objects: IntPtr; sema_payload_list: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueSignalSemaphoresKHR_16(command_queue, num_sema_objects, sema_objects, sema_payload_list, num_events_in_wait_list, event_wait_list, &event);
    
    public GetSemaphoreInfoKHR_adr := GetProcAddress('clGetSemaphoreInfoKHR');
    private ntv_GetSemaphoreInfoKHR_1 := GetProcOrNil&<function(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetSemaphoreInfoKHR_adr);
    private ntv_GetSemaphoreInfoKHR_2 := GetProcOrNil&<function(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetSemaphoreInfoKHR_adr);
    private ntv_GetSemaphoreInfoKHR_3 := GetProcOrNil&<function(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetSemaphoreInfoKHR_adr);
    private ntv_GetSemaphoreInfoKHR_4 := GetProcOrNil&<function(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetSemaphoreInfoKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR<T>(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetSemaphoreInfoKHR_1(sema_object, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR<T>(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetSemaphoreInfoKHR_2(sema_object, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetSemaphoreInfoKHR_3(sema_object, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR(sema_object: cl_semaphore; param_name: clSemaphoreInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetSemaphoreInfoKHR_4(sema_object, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_CONTEXT(sema_object: cl_semaphore; var param_value: cl_context; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_context>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_CONTEXT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_REFERENCE_COUNT(sema_object: cl_semaphore; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_REFERENCE_COUNT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_PROPERTIES(sema_object: cl_semaphore; var param_value: clSemaphoreProperties; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clSemaphoreProperties>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_PROPERTIES, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_PAYLOAD(sema_object: cl_semaphore; var param_value: UInt64; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt64>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_PAYLOAD, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_TYPE(sema_object: cl_semaphore; var param_value: clSemaphoreType; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clSemaphoreType>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_TYPE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_EXPORT_HANDLE_TYPES(sema_object: cl_semaphore; var param_value: array of clExternalSemaphoreHandleType): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetSemaphoreInfoKHR_3(sema_object, clSemaphoreInfo.SEMAPHORE_EXPORT_HANDLE_TYPES, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new clExternalSemaphoreHandleType[param_value_sz.ToUInt64 div Marshal.SizeOf&<clExternalSemaphoreHandleType>];
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_EXPORT_HANDLE_TYPES, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_EXPORT_HANDLE_TYPES(sema_object: cl_semaphore; param_value_count: UInt32; var param_value: clExternalSemaphoreHandleType): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<clExternalSemaphoreHandleType>);
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_EXPORT_HANDLE_TYPES, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_DEVICE_HANDLE_LIST(sema_object: cl_semaphore; var param_value: array of cl_device_id): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetSemaphoreInfoKHR_3(sema_object, clSemaphoreInfo.SEMAPHORE_DEVICE_HANDLE_LIST, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new cl_device_id[param_value_sz.ToUInt64 div Marshal.SizeOf&<cl_device_id>];
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_DEVICE_HANDLE_LIST, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_DEVICE_HANDLE_LIST(sema_object: cl_semaphore; param_value_count: UInt32; var param_value: cl_device_id): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<cl_device_id>);
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_DEVICE_HANDLE_LIST, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreInfoKHR_SEMAPHORE_EXPORTABLE(sema_object: cl_semaphore; var param_value: clBool; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<clBool>);
      var param_value_ret_size: UIntPtr;
      Result := GetSemaphoreInfoKHR(sema_object, clSemaphoreInfo.SEMAPHORE_EXPORTABLE, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    
    public ReleaseSemaphoreKHR_adr := GetProcAddress('clReleaseSemaphoreKHR');
    private ntv_ReleaseSemaphoreKHR_1 := GetProcOrNil&<function(sema_object: cl_semaphore): clErrorCode>(ReleaseSemaphoreKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReleaseSemaphoreKHR(sema_object: cl_semaphore): clErrorCode :=
      ntv_ReleaseSemaphoreKHR_1(sema_object);
    
    public RetainSemaphoreKHR_adr := GetProcAddress('clRetainSemaphoreKHR');
    private ntv_RetainSemaphoreKHR_1 := GetProcOrNil&<function(sema_object: cl_semaphore): clErrorCode>(RetainSemaphoreKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function RetainSemaphoreKHR(sema_object: cl_semaphore): clErrorCode :=
      ntv_RetainSemaphoreKHR_1(sema_object);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_external_semaphore
  /// version: 0.9.0
  /// core dependency: cl 1.2
  /// ext dependencies:
  /// - cl_khr_semaphore (clSemaphoreKHR)
  clExternalSemaphoreKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clExternalSemaphoreKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_external_semaphore';
    
    public GetSemaphoreHandleForTypeKHR_adr := GetProcAddress('clGetSemaphoreHandleForTypeKHR');
    private ntv_GetSemaphoreHandleForTypeKHR_1 := GetProcOrNil&<function(sema_object: cl_semaphore; device: cl_device_id; handle_type: clExternalSemaphoreHandleType; handle_size: UIntPtr; handle_ptr: IntPtr; var handle_size_ret: UIntPtr): clErrorCode>(GetSemaphoreHandleForTypeKHR_adr);
    private ntv_GetSemaphoreHandleForTypeKHR_2 := GetProcOrNil&<function(sema_object: cl_semaphore; device: cl_device_id; handle_type: clExternalSemaphoreHandleType; handle_size: UIntPtr; handle_ptr: IntPtr; handle_size_ret: IntPtr): clErrorCode>(GetSemaphoreHandleForTypeKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreHandleForTypeKHR(sema_object: cl_semaphore; device: cl_device_id; handle_type: clExternalSemaphoreHandleType; handle_size: UIntPtr; handle_ptr: IntPtr; var handle_size_ret: UIntPtr): clErrorCode :=
      ntv_GetSemaphoreHandleForTypeKHR_1(sema_object, device, handle_type, handle_size, handle_ptr, handle_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetSemaphoreHandleForTypeKHR(sema_object: cl_semaphore; device: cl_device_id; handle_type: clExternalSemaphoreHandleType; handle_size: UIntPtr; handle_ptr: IntPtr; handle_size_ret: IntPtr): clErrorCode :=
      ntv_GetSemaphoreHandleForTypeKHR_2(sema_object, device, handle_type, handle_size, handle_ptr, handle_size_ret);
    
  end;
  
  /// id: cl_khr_external_semaphore_opaque_fd
  /// version: 0.9.0
  /// core dependency: cl 1.2
  /// ext dependencies:
  /// - cl_khr_external_semaphore (clExternalSemaphoreKHR)
  /// - cl_khr_semaphore (clSemaphoreKHR)
  clExternalSemaphoreOpaqueFdKHR = static class
    public const ExtensionString = 'cl_khr_external_semaphore_opaque_fd';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_external_semaphore_sync_fd
  /// version: 0.9.0
  /// core dependency: cl 1.2
  /// ext dependencies:
  /// - cl_khr_external_semaphore (clExternalSemaphoreKHR)
  /// - cl_khr_semaphore (clSemaphoreKHR)
  clExternalSemaphoreSyncFdKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clExternalSemaphoreSyncFdKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_external_semaphore_sync_fd';
    
    public ReImportSemaphoreSyncFdKHR_adr := GetProcAddress('clReImportSemaphoreSyncFdKHR');
    private ntv_ReImportSemaphoreSyncFdKHR_1 := GetProcOrNil&<function(sema_object: cl_semaphore; var reimport_props: UInt64; fd: Int32): clErrorCode>(ReImportSemaphoreSyncFdKHR_adr);
    private ntv_ReImportSemaphoreSyncFdKHR_2 := GetProcOrNil&<function(sema_object: cl_semaphore; reimport_props: IntPtr; fd: Int32): clErrorCode>(ReImportSemaphoreSyncFdKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReImportSemaphoreSyncFdKHR(sema_object: cl_semaphore; reimport_props: array of UInt64; fd: Int32): clErrorCode;
      type PUInt64 = ^UInt64;
    begin
      Result := if (reimport_props<>nil) and (reimport_props.Length<>0) then
        ntv_ReImportSemaphoreSyncFdKHR_1(sema_object, reimport_props[0], fd) else
        ntv_ReImportSemaphoreSyncFdKHR_1(sema_object, PUInt64(nil)^, fd);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReImportSemaphoreSyncFdKHR(sema_object: cl_semaphore; var reimport_props: UInt64; fd: Int32): clErrorCode :=
      ntv_ReImportSemaphoreSyncFdKHR_1(sema_object, reimport_props, fd);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function ReImportSemaphoreSyncFdKHR(sema_object: cl_semaphore; reimport_props: IntPtr; fd: Int32): clErrorCode :=
      ntv_ReImportSemaphoreSyncFdKHR_2(sema_object, reimport_props, fd);
    
  end;
  
  /// id: cl_khr_external_semaphore_win32
  /// version: 0.9.0 (provisional)
  /// core dependency: cl 1.2
  /// ext dependencies:
  /// - cl_khr_external_semaphore (clExternalSemaphoreKHR)
  /// - cl_khr_semaphore (clSemaphoreKHR)
  clExternalSemaphoreWin32KHR = static class
    public const ExtensionString = 'cl_khr_external_semaphore_win32';
  end;
  
  /// id: cl_khr_fp16
  clFp16KHR = static class
    public const ExtensionString = 'cl_khr_fp16';
  end;
  
  /// id: cl_khr_fp64
  /// promoted to: cl 1.2
  clFp64KHR = static class
    public const ExtensionString = 'cl_khr_fp64';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_gl_sharing
  clGLSharingKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clGLSharingKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_gl_sharing';
    
    public GetGLContextInfoKHR_adr := GetProcAddress('clGetGLContextInfoKHR');
    private ntv_GetGLContextInfoKHR_1 := GetProcOrNil&<function(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    private ntv_GetGLContextInfoKHR_2 := GetProcOrNil&<function(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    private ntv_GetGLContextInfoKHR_3 := GetProcOrNil&<function(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    private ntv_GetGLContextInfoKHR_4 := GetProcOrNil&<function(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    private ntv_GetGLContextInfoKHR_5 := GetProcOrNil&<function(properties: IntPtr; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    private ntv_GetGLContextInfoKHR_6 := GetProcOrNil&<function(properties: IntPtr; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetGLContextInfoKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR<T>(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetGLContextInfoKHR_1(properties, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR<T>(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetGLContextInfoKHR_2(properties, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetGLContextInfoKHR_3(properties, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(var properties: clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetGLContextInfoKHR_4(properties, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR_CURRENT_DEVICE_FOR_GL_CONTEXT(var properties: clContextProperties; var param_value: cl_device_id; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<cl_device_id>);
      var param_value_ret_size: UIntPtr;
      Result := GetGLContextInfoKHR(properties, clGlContextInfo.CURRENT_DEVICE_FOR_GL_CONTEXT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR_DEVICES_FOR_GL_CONTEXT(var properties: clContextProperties; var param_value: array of cl_device_id): clErrorCode;
    begin
      var param_value_sz: UIntPtr;
      Result := ntv_GetGLContextInfoKHR_3(properties, clGlContextInfo.DEVICES_FOR_GL_CONTEXT, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new cl_device_id[param_value_sz.ToUInt64 div Marshal.SizeOf&<cl_device_id>];
      Result := GetGLContextInfoKHR(properties, clGlContextInfo.DEVICES_FOR_GL_CONTEXT, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR_DEVICES_FOR_GL_CONTEXT(var properties: clContextProperties; param_value_count: UInt32; var param_value: cl_device_id): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<cl_device_id>);
      Result := GetGLContextInfoKHR(properties, clGlContextInfo.DEVICES_FOR_GL_CONTEXT, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(properties: array of clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode;
      type PClContextProperties = ^clContextProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_GetGLContextInfoKHR_3(properties[0], param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetGLContextInfoKHR_3(PClContextProperties(nil)^, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(properties: array of clContextProperties; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode;
      type PClContextProperties = ^clContextProperties;
    begin
      Result := if (properties<>nil) and (properties.Length<>0) then
        ntv_GetGLContextInfoKHR_4(properties[0], param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetGLContextInfoKHR_4(PClContextProperties(nil)^, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(properties: IntPtr; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetGLContextInfoKHR_5(properties, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLContextInfoKHR(properties: IntPtr; param_name: clGlContextInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetGLContextInfoKHR_6(properties, param_name, param_value_size, param_value, param_value_size_ret);
    
    public CreateFromGLBuffer_adr := GetProcAddress('clCreateFromGLBuffer');
    private ntv_CreateFromGLBuffer_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; bufobj: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromGLBuffer_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromGLBuffer(context: cl_context; flags: clMemFlags; bufobj: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromGLBuffer_1(context, flags, bufobj, errcode_ret);
    
    public CreateFromGLTexture_adr := GetProcAddress('clCreateFromGLTexture');
    private ntv_CreateFromGLTexture_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromGLTexture_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromGLTexture(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromGLTexture_1(context, flags, target, miplevel, texture, errcode_ret);
    
    public CreateFromGLRenderbuffer_adr := GetProcAddress('clCreateFromGLRenderbuffer');
    private ntv_CreateFromGLRenderbuffer_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; renderbuffer: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromGLRenderbuffer_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromGLRenderbuffer(context: cl_context; flags: clMemFlags; renderbuffer: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromGLRenderbuffer_1(context, flags, renderbuffer, errcode_ret);
    
    public GetGLObjectInfo_adr := GetProcAddress('clGetGLObjectInfo');
    private ntv_GetGLObjectInfo_1 := GetProcOrNil&<function(memobj: cl_mem; var gl_object_type: clGlObjectType; var gl_object_name: UInt32): clErrorCode>(GetGLObjectInfo_adr);
    private ntv_GetGLObjectInfo_2 := GetProcOrNil&<function(memobj: cl_mem; var gl_object_type: clGlObjectType; gl_object_name: IntPtr): clErrorCode>(GetGLObjectInfo_adr);
    private ntv_GetGLObjectInfo_3 := GetProcOrNil&<function(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): clErrorCode>(GetGLObjectInfo_adr);
    private ntv_GetGLObjectInfo_4 := GetProcOrNil&<function(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): clErrorCode>(GetGLObjectInfo_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLObjectInfo(memobj: cl_mem; var gl_object_type: clGlObjectType; var gl_object_name: UInt32): clErrorCode :=
      ntv_GetGLObjectInfo_1(memobj, gl_object_type, gl_object_name);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLObjectInfo(memobj: cl_mem; var gl_object_type: clGlObjectType; gl_object_name: IntPtr): clErrorCode :=
      ntv_GetGLObjectInfo_2(memobj, gl_object_type, gl_object_name);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLObjectInfo(memobj: cl_mem; gl_object_type: IntPtr; var gl_object_name: UInt32): clErrorCode :=
      ntv_GetGLObjectInfo_3(memobj, gl_object_type, gl_object_name);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLObjectInfo(memobj: cl_mem; gl_object_type: IntPtr; gl_object_name: IntPtr): clErrorCode :=
      ntv_GetGLObjectInfo_4(memobj, gl_object_type, gl_object_name);
    
    public GetGLTextureInfo_adr := GetProcAddress('clGetGLTextureInfo');
    private ntv_GetGLTextureInfo_1 := GetProcOrNil&<function(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetGLTextureInfo_adr);
    private ntv_GetGLTextureInfo_2 := GetProcOrNil&<function(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetGLTextureInfo_adr);
    private ntv_GetGLTextureInfo_3 := GetProcOrNil&<function(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetGLTextureInfo_adr);
    private ntv_GetGLTextureInfo_4 := GetProcOrNil&<function(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetGLTextureInfo_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo<T>(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetGLTextureInfo_1(memobj, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo<T>(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetGLTextureInfo_2(memobj, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo_GL_TEXTURE_TARGET(memobj: cl_mem; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetGLTextureInfo(memobj, clGlTextureInfo.GL_TEXTURE_TARGET, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo_GL_MIPMAP_LEVEL(memobj: cl_mem; var param_value: Int32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<Int32>);
      var param_value_ret_size: UIntPtr;
      Result := GetGLTextureInfo(memobj, clGlTextureInfo.GL_MIPMAP_LEVEL, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo_GL_NUM_SAMPLES(memobj: cl_mem; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetGLTextureInfo(memobj, clGlTextureInfo.GL_NUM_SAMPLES, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetGLTextureInfo_3(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetGLTextureInfo(memobj: cl_mem; param_name: clGlTextureInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetGLTextureInfo_4(memobj, param_name, param_value_size, param_value, param_value_size_ret);
    
    public EnqueueAcquireGLObjects_adr := GetProcAddress('clEnqueueAcquireGLObjects');
    private ntv_EnqueueAcquireGLObjects_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueAcquireGLObjects_adr);
    private ntv_EnqueueAcquireGLObjects_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueAcquireGLObjects_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueAcquireGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueAcquireGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGLObjects_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGLObjects_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGLObjects_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGLObjects_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGLObjects_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGLObjects_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueAcquireGLObjects_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueAcquireGLObjects_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueAcquireGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueAcquireGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueAcquireGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueAcquireGLObjects_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public EnqueueReleaseGLObjects_adr := GetProcAddress('clEnqueueReleaseGLObjects');
    private ntv_EnqueueReleaseGLObjects_1 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_2 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_3 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_4 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_5 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_6 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_7 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode>(EnqueueReleaseGLObjects_adr);
    private ntv_EnqueueReleaseGLObjects_8 := GetProcOrNil&<function(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode>(EnqueueReleaseGLObjects_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        EnqueueReleaseGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        EnqueueReleaseGLObjects(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGLObjects_1(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGLObjects_1(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGLObjects_2(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGLObjects_2(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGLObjects_3(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGLObjects_3(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: array of cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode;
      type PCl_mem = ^cl_mem;
    begin
      Result := if (mem_objects<>nil) and (mem_objects.Length<>0) then
        ntv_EnqueueReleaseGLObjects_4(command_queue, num_objects, mem_objects[0], num_events_in_wait_list, event_wait_list, &event) else
        ntv_EnqueueReleaseGLObjects_4(command_queue, num_objects, PCl_mem(nil)^, num_events_in_wait_list, event_wait_list, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_1(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_2(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_3(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; var mem_objects: cl_mem; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_4(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; var &event: cl_event): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: array of cl_event; &event: IntPtr): clErrorCode;
      type PCl_event = ^cl_event;
    begin
      Result := if (event_wait_list<>nil) and (event_wait_list.Length<>0) then
        ntv_EnqueueReleaseGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list[0], &event) else
        ntv_EnqueueReleaseGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, PCl_event(nil)^, &event);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_5(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; var event_wait_list: cl_event; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_6(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; var &event: cl_event): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_7(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function EnqueueReleaseGLObjects(command_queue: cl_command_queue; num_objects: UInt32; mem_objects: IntPtr; num_events_in_wait_list: UInt32; event_wait_list: IntPtr; &event: IntPtr): clErrorCode :=
      ntv_EnqueueReleaseGLObjects_8(command_queue, num_objects, mem_objects, num_events_in_wait_list, event_wait_list, &event);
    
    public CreateFromGLTexture2D_adr := GetProcAddress('clCreateFromGLTexture2D');
    private ntv_CreateFromGLTexture2D_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromGLTexture2D_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromGLTexture2D(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromGLTexture2D_1(context, flags, target, miplevel, texture, errcode_ret);
    
    public CreateFromGLTexture3D_adr := GetProcAddress('clCreateFromGLTexture3D');
    private ntv_CreateFromGLTexture3D_1 := GetProcOrNil&<function(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem>(CreateFromGLTexture3D_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateFromGLTexture3D(context: cl_context; flags: clMemFlags; target: UInt32; miplevel: Int32; texture: UInt32; var errcode_ret: clErrorCode): cl_mem :=
      ntv_CreateFromGLTexture3D_1(context, flags, target, miplevel, texture, errcode_ret);
    
  end;
  
  /// id: cl_khr_gl_depth_images
  /// ext dependencies:
  /// - cl_khr_gl_sharing (clGLSharingKHR)
  clGLDepthImagesKHR = static class
    public const ExtensionString = 'cl_khr_gl_depth_images';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_gl_event
  /// ext dependencies:
  /// - cl_khr_gl_sharing (clGLSharingKHR)
  clGLEventKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clGLEventKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_gl_event';
    
    public CreateEventFromGLsyncKHR_adr := GetProcAddress('clCreateEventFromGLsyncKHR');
    private ntv_CreateEventFromGLsyncKHR_1 := GetProcOrNil&<function(context: cl_context; sync: cl_GLsync; var errcode_ret: clErrorCode): cl_event>(CreateEventFromGLsyncKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateEventFromGLsyncKHR(context: cl_context; sync: cl_GLsync; var errcode_ret: clErrorCode): cl_event :=
      ntv_CreateEventFromGLsyncKHR_1(context, sync, errcode_ret);
    
  end;
  
  /// id: cl_khr_gl_msaa_sharing
  /// ext dependencies:
  /// - cl_khr_gl_depth_images (clGLDepthImagesKHR)
  /// - cl_khr_gl_sharing (clGLSharingKHR)
  clGlMsaaSharingKHR = static class
    public const ExtensionString = 'cl_khr_gl_msaa_sharing';
  end;
  
  /// id: cl_khr_global_int32_base_atomics
  /// promoted to: cl 1.1
  clGlobalInt32BaseAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_global_int32_base_atomics';
  end;
  
  /// id: cl_khr_global_int32_extended_atomics
  /// promoted to: cl 1.1
  clGlobalInt32ExtendedAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_global_int32_extended_atomics';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_icd
  clIcdKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clIcdKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_icd';
    
    public IcdGetPlatformIDsKHR_adr := GetProcAddress('clIcdGetPlatformIDsKHR');
    private ntv_IcdGetPlatformIDsKHR_1 := GetProcOrNil&<function(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): clErrorCode>(IcdGetPlatformIDsKHR_adr);
    private ntv_IcdGetPlatformIDsKHR_2 := GetProcOrNil&<function(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): clErrorCode>(IcdGetPlatformIDsKHR_adr);
    private ntv_IcdGetPlatformIDsKHR_3 := GetProcOrNil&<function(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): clErrorCode>(IcdGetPlatformIDsKHR_adr);
    private ntv_IcdGetPlatformIDsKHR_4 := GetProcOrNil&<function(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): clErrorCode>(IcdGetPlatformIDsKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: array of cl_platform_id; num_platforms: array of UInt32): clErrorCode;
      type PCl_platform_id = ^cl_platform_id;
      type PUInt32 = ^UInt32;
    begin
      Result := if (num_platforms<>nil) and (num_platforms.Length<>0) then
        if (platforms<>nil) and (platforms.Length<>0) then
          ntv_IcdGetPlatformIDsKHR_1(num_entries, platforms[0], num_platforms[0]) else
          ntv_IcdGetPlatformIDsKHR_1(num_entries, PCl_platform_id(nil)^, num_platforms[0]) else
        if (platforms<>nil) and (platforms.Length<>0) then
          ntv_IcdGetPlatformIDsKHR_1(num_entries, platforms[0], PUInt32(nil)^) else
          ntv_IcdGetPlatformIDsKHR_1(num_entries, PCl_platform_id(nil)^, PUInt32(nil)^);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function IcdGetPlatformIDsKHR(num_entries: UInt32; var platforms: cl_platform_id; var num_platforms: UInt32): clErrorCode :=
      ntv_IcdGetPlatformIDsKHR_1(num_entries, platforms, num_platforms);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function IcdGetPlatformIDsKHR(num_entries: UInt32; var platforms: cl_platform_id; num_platforms: IntPtr): clErrorCode :=
      ntv_IcdGetPlatformIDsKHR_2(num_entries, platforms, num_platforms);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: IntPtr; var num_platforms: UInt32): clErrorCode :=
      ntv_IcdGetPlatformIDsKHR_3(num_entries, platforms, num_platforms);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function IcdGetPlatformIDsKHR(num_entries: UInt32; platforms: IntPtr; num_platforms: IntPtr): clErrorCode :=
      ntv_IcdGetPlatformIDsKHR_4(num_entries, platforms, num_platforms);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_il_program
  /// promoted to: cl 2.1
  clIlProgramKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clIlProgramKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_il_program';
    
    public CreateProgramWithILKHR_adr := GetProcAddress('clCreateProgramWithILKHR');
    private ntv_CreateProgramWithILKHR_1 := GetProcOrNil&<function(context: cl_context; var il: Byte; length: UIntPtr; var errcode_ret: clErrorCode): cl_program>(CreateProgramWithILKHR_adr);
    private ntv_CreateProgramWithILKHR_2 := GetProcOrNil&<function(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: clErrorCode): cl_program>(CreateProgramWithILKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateProgramWithILKHR(context: cl_context; il: array of Byte; length: UIntPtr; var errcode_ret: clErrorCode): cl_program;
      type PByte = ^Byte;
    begin
      Result := if (il<>nil) and (il.Length<>0) then
        ntv_CreateProgramWithILKHR_1(context, il[0], length, errcode_ret) else
        ntv_CreateProgramWithILKHR_1(context, PByte(nil)^, length, errcode_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateProgramWithILKHR(context: cl_context; var il: Byte; length: UIntPtr; var errcode_ret: clErrorCode): cl_program :=
      ntv_CreateProgramWithILKHR_1(context, il, length, errcode_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function CreateProgramWithILKHR(context: cl_context; il: IntPtr; length: UIntPtr; var errcode_ret: clErrorCode): cl_program :=
      ntv_CreateProgramWithILKHR_2(context, il, length, errcode_ret);
    
  end;
  
  /// id: cl_khr_image2d_from_buffer
  /// promoted to: cl 2.0
  clImage2dFromBufferKHR = static class
    public const ExtensionString = 'cl_khr_image2d_from_buffer';
  end;
  
  /// id: cl_khr_initialize_memory
  clInitializeMemoryKHR = static class
    public const ExtensionString = 'cl_khr_initialize_memory';
  end;
  
  /// id: cl_khr_int64_base_atomics
  clInt64BaseAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_int64_base_atomics';
  end;
  
  /// id: cl_khr_int64_extended_atomics
  clInt64ExtendedAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_int64_extended_atomics';
  end;
  
  /// id: cl_khr_integer_dot_product
  /// version: 2.0.0
  clIntegerDotProductKHR = static class
    public const ExtensionString = 'cl_khr_integer_dot_product';
  end;
  
  /// id: cl_khr_kernel_clock
  /// version: provisional
  clKernelClockKHR = static class
    public const ExtensionString = 'cl_khr_kernel_clock';
  end;
  
  /// id: cl_khr_local_int32_base_atomics
  /// promoted to: cl 1.1
  clLocalInt32BaseAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_local_int32_base_atomics';
  end;
  
  /// id: cl_khr_local_int32_extended_atomics
  /// promoted to: cl 1.1
  clLocalInt32ExtendedAtomicsKHR = static class
    public const ExtensionString = 'cl_khr_local_int32_extended_atomics';
  end;
  
  /// id: cl_khr_mipmap_image
  clMipmapImageKHR = static class
    public const ExtensionString = 'cl_khr_mipmap_image';
  end;
  
  /// id: cl_khr_mipmap_image_writes
  /// ext dependencies:
  /// - cl_khr_mipmap_image (clMipmapImageKHR)
  clMipmapImageWritesKHR = static class
    public const ExtensionString = 'cl_khr_mipmap_image_writes';
  end;
  
  /// id: cl_khr_pci_bus_info
  clPciBusInfoKHR = static class
    public const ExtensionString = 'cl_khr_pci_bus_info';
  end;
  
  /// id: cl_khr_priority_hints
  clPriorityHintsKHR = static class
    public const ExtensionString = 'cl_khr_priority_hints';
  end;
  
  /// id: cl_khr_select_fprounding_mode
  /// obsoleted by: cl 1.1
  clSelectFproundingModeKHR = static class
    public const ExtensionString = 'cl_khr_select_fprounding_mode';
  end;
  
  /// id: cl_khr_spir
  /// obsoleted by: cl_khr_il_program (clIlProgramKHR)
  clSpirKHR = static class
    public const ExtensionString = 'cl_khr_spir';
  end;
  
  /// id: cl_khr_spirv_extended_debug_info
  clSpirvExtendedDebugInfoKHR = static class
    public const ExtensionString = 'cl_khr_spirv_extended_debug_info';
  end;
  
  /// id: cl_khr_spirv_linkonce_odr
  clSpirvLinkonceOdrKHR = static class
    public const ExtensionString = 'cl_khr_spirv_linkonce_odr';
  end;
  
  /// id: cl_khr_spirv_no_integer_wrap_decoration
  clSpirvNoIntegerWrapDecorationKHR = static class
    public const ExtensionString = 'cl_khr_spirv_no_integer_wrap_decoration';
  end;
  
  /// id: cl_khr_srgb_image_writes
  clSrgbImageWritesKHR = static class
    public const ExtensionString = 'cl_khr_srgb_image_writes';
  end;
  
  /// id: cl_khr_subgroup_ballot
  clSubgroupBallotKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_ballot';
  end;
  
  /// id: cl_khr_subgroup_clustered_reduce
  clSubgroupClusteredReduceKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_clustered_reduce';
  end;
  
  /// id: cl_khr_subgroup_extended_types
  clSubgroupExtendedTypesKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_extended_types';
  end;
  
  /// id: cl_khr_subgroup_named_barrier
  clSubgroupNamedBarrierKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_named_barrier';
  end;
  
  /// id: cl_khr_subgroup_non_uniform_arithmetic
  clSubgroupNonUniformArithmeticKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_non_uniform_arithmetic';
  end;
  
  /// id: cl_khr_subgroup_non_uniform_vote
  clSubgroupNonUniformVoteKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_non_uniform_vote';
  end;
  
  /// id: cl_khr_subgroup_rotate
  clSubgroupRotateKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_rotate';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_subgroups
  /// promoted to: cl 2.1
  clSubgroupsKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSubgroupsKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_subgroups';
    
    public GetKernelSubGroupInfoKHR_adr := GetProcAddress('clGetKernelSubGroupInfoKHR');
    private ntv_GetKernelSubGroupInfoKHR_1 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: Byte; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_2 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: Byte; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_3 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: Byte; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_4 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: Byte; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_5 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_6 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_7 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    private ntv_GetKernelSubGroupInfoKHR_8 := GetProcOrNil&<function(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetKernelSubGroupInfoKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<TInp,T>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: TInp; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where TInp, T: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_1(in_kernel, in_device, param_name, input_value_size, PByte(pointer(@input_value))^, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<TInp,T>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: TInp; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where TInp, T: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_2(in_kernel, in_device, param_name, input_value_size, PByte(pointer(@input_value))^, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<TInp>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: TInp; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode; where TInp: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_3(in_kernel, in_device, param_name, input_value_size, PByte(pointer(@input_value))^, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<TInp>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; var input_value: TInp; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode; where TInp: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_4(in_kernel, in_device, param_name, input_value_size, PByte(pointer(@input_value))^, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<T>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_5(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR<T>(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetKernelSubGroupInfoKHR_6(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetKernelSubGroupInfoKHR_7(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR(in_kernel: cl_kernel; in_device: cl_device_id; param_name: clKernelSubGroupInfo; input_value_size: UIntPtr; input_value: pointer; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetKernelSubGroupInfoKHR_8(in_kernel, in_device, param_name, input_value_size, input_value, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT(in_kernel: cl_kernel; in_device: cl_device_id; input_value: UIntPtr; var param_value: array of UIntPtr): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_sz: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT, input_value_sz,input_value, UIntPtr.Zero,nil,param_value_sz);
      if Result.IS_ERROR then exit;
      if param_value_sz = UIntPtr.Zero then
      begin
        param_value := nil;
        exit;
      end;
      var param_value_temp_res := new UIntPtr[param_value_sz.ToUInt64 div Marshal.SizeOf&<UIntPtr>];
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT, input_value_sz,input_value, param_value_sz,param_value_temp_res[0],IntPtr.Zero);
      param_value := param_value_temp_res;
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT(in_kernel: cl_kernel; in_device: cl_device_id; input_value: UIntPtr; param_value_count: UInt32; var param_value: UIntPtr): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_sz := new UIntPtr(param_value_count*Marshal.SizeOf&<UIntPtr>);
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_LOCAL_SIZE_FOR_SUB_GROUP_COUNT, input_value_sz,input_value, param_value_sz,param_value,IntPtr.Zero);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_MAX_NUM_SUB_GROUPS(in_kernel: cl_kernel; in_device: cl_device_id; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_MAX_NUM_SUB_GROUPS, UIntPtr.Zero,nil, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_COMPILE_NUM_SUB_GROUPS(in_kernel: cl_kernel; in_device: cl_device_id; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_COMPILE_NUM_SUB_GROUPS, UIntPtr.Zero,nil, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE(in_kernel: cl_kernel; in_device: cl_device_id; input_value: array of UIntPtr; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(input_value.Length*Marshal.SizeOf&<UIntPtr>);
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE, input_value_sz,input_value[0], param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE(in_kernel: cl_kernel; in_device: cl_device_id; input_value_count: UInt32; var input_value: UIntPtr; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(input_value_count*Marshal.SizeOf&<UIntPtr>);
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_MAX_SUB_GROUP_SIZE_FOR_NDRANGE, input_value_sz,input_value, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE(in_kernel: cl_kernel; in_device: cl_device_id; input_value: array of UIntPtr; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(input_value.Length*Marshal.SizeOf&<UIntPtr>);
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE, input_value_sz,input_value[0], param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE(in_kernel: cl_kernel; in_device: cl_device_id; input_value_count: UInt32; var input_value: UIntPtr; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var input_value_sz := new UIntPtr(input_value_count*Marshal.SizeOf&<UIntPtr>);
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_SUB_GROUP_COUNT_FOR_NDRANGE, input_value_sz,input_value, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSubGroupInfoKHR_KERNEL_COMPILE_SUB_GROUP_SIZE(in_kernel: cl_kernel; in_device: cl_device_id; var param_value: UIntPtr; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UIntPtr>);
      var param_value_ret_size: UIntPtr;
      Result := GetKernelSubGroupInfoKHR(in_kernel, in_device, clKernelSubGroupInfo.KERNEL_COMPILE_SUB_GROUP_SIZE, UIntPtr.Zero,nil, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    
  end;
  
  /// id: cl_khr_subgroup_shuffle
  clSubgroupShuffleKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_shuffle';
  end;
  
  /// id: cl_khr_subgroup_shuffle_relative
  clSubgroupShuffleRelativeKHR = static class
    public const ExtensionString = 'cl_khr_subgroup_shuffle_relative';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_suggested_local_work_size
  clSuggestedLocalWorkSizeKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clSuggestedLocalWorkSizeKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_suggested_local_work_size';
    
    public GetKernelSuggestedLocalWorkSizeKHR_adr := GetProcAddress('clGetKernelSuggestedLocalWorkSizeKHR');
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_1 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var suggested_local_work_size: UIntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_2 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; suggested_local_work_size: IntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_3 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var suggested_local_work_size: UIntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_4 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; suggested_local_work_size: IntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_5 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var suggested_local_work_size: UIntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_6 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; suggested_local_work_size: IntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_7 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var suggested_local_work_size: UIntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    private ntv_GetKernelSuggestedLocalWorkSizeKHR_8 := GetProcOrNil&<function(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; suggested_local_work_size: IntPtr): clErrorCode>(GetKernelSuggestedLocalWorkSizeKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; var suggested_local_work_size: UIntPtr): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
        if (global_work_size<>nil) and (global_work_size.Length<>0) then
          ntv_GetKernelSuggestedLocalWorkSizeKHR_1(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], suggested_local_work_size) else
          ntv_GetKernelSuggestedLocalWorkSizeKHR_1(command_queue, kernel, work_dim, global_work_offset[0], PUIntPtr(nil)^, suggested_local_work_size) else
        if (global_work_size<>nil) and (global_work_size.Length<>0) then
          ntv_GetKernelSuggestedLocalWorkSizeKHR_1(command_queue, kernel, work_dim, PUIntPtr(nil)^, global_work_size[0], suggested_local_work_size) else
          ntv_GetKernelSuggestedLocalWorkSizeKHR_1(command_queue, kernel, work_dim, PUIntPtr(nil)^, PUIntPtr(nil)^, suggested_local_work_size);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: array of UIntPtr; global_work_size: array of UIntPtr; suggested_local_work_size: IntPtr): clErrorCode;
      type PUIntPtr = ^UIntPtr;
    begin
      Result := if (global_work_offset<>nil) and (global_work_offset.Length<>0) then
        if (global_work_size<>nil) and (global_work_size.Length<>0) then
          ntv_GetKernelSuggestedLocalWorkSizeKHR_2(command_queue, kernel, work_dim, global_work_offset[0], global_work_size[0], suggested_local_work_size) else
          ntv_GetKernelSuggestedLocalWorkSizeKHR_2(command_queue, kernel, work_dim, global_work_offset[0], PUIntPtr(nil)^, suggested_local_work_size) else
        if (global_work_size<>nil) and (global_work_size.Length<>0) then
          ntv_GetKernelSuggestedLocalWorkSizeKHR_2(command_queue, kernel, work_dim, PUIntPtr(nil)^, global_work_size[0], suggested_local_work_size) else
          ntv_GetKernelSuggestedLocalWorkSizeKHR_2(command_queue, kernel, work_dim, PUIntPtr(nil)^, PUIntPtr(nil)^, suggested_local_work_size);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; var suggested_local_work_size: UIntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_1(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; var global_work_size: UIntPtr; suggested_local_work_size: IntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_2(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; var suggested_local_work_size: UIntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_3(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; var global_work_offset: UIntPtr; global_work_size: IntPtr; suggested_local_work_size: IntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_4(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; var suggested_local_work_size: UIntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_5(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; var global_work_size: UIntPtr; suggested_local_work_size: IntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_6(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; var suggested_local_work_size: UIntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_7(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetKernelSuggestedLocalWorkSizeKHR(command_queue: cl_command_queue; kernel: cl_kernel; work_dim: UInt32; global_work_offset: IntPtr; global_work_size: IntPtr; suggested_local_work_size: IntPtr): clErrorCode :=
      ntv_GetKernelSuggestedLocalWorkSizeKHR_8(command_queue, kernel, work_dim, global_work_offset, global_work_size, suggested_local_work_size);
    
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_khr_terminate_context
  clTerminateContextKHR = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clTerminateContextKHR(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_khr_terminate_context';
    
    public TerminateContextKHR_adr := GetProcAddress('clTerminateContextKHR');
    private ntv_TerminateContextKHR_1 := GetProcOrNil&<function(context: cl_context): clErrorCode>(TerminateContextKHR_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function TerminateContextKHR(context: cl_context): clErrorCode :=
      ntv_TerminateContextKHR_1(context);
    
  end;
  
  /// id: cl_khr_throttle_hints
  clThrottleHintsKHR = static class
    public const ExtensionString = 'cl_khr_throttle_hints';
  end;
  
  /// id: cl_khr_work_group_uniform_arithmetic
  clWorkGroupUniformArithmeticKHR = static class
    public const ExtensionString = 'cl_khr_work_group_uniform_arithmetic';
  end;
  
  /// id: cl_nv_device_attribute_query
  clDeviceAttributeQueryNV = static class
    public const ExtensionString = 'cl_nv_device_attribute_query';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_pocl_content_size
  clContentSizePOCL = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clContentSizePOCL(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_pocl_content_size';
    
    public SetContentSizeBufferPOCL_adr := GetProcAddress('clSetContentSizeBufferPoCL');
    private ntv_SetContentSizeBufferPOCL_1 := GetProcOrNil&<function(buffer: cl_mem; content_size_buffer: cl_mem): clErrorCode>(SetContentSizeBufferPOCL_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function SetContentSizeBufferPOCL(buffer: cl_mem; content_size_buffer: cl_mem): clErrorCode :=
      ntv_SetContentSizeBufferPOCL_1(buffer, content_size_buffer);
    
  end;
  
  /// id: cl_qcom_android_native_buffer_host_ptr
  clAndroidNativeBufferHostPtrQCOM = static class
    public const ExtensionString = 'cl_qcom_android_native_buffer_host_ptr';
  end;
  
  {$ifndef DEBUG}
  [System.Security.SuppressUnmanagedCodeSecurity]
  {$endif DEBUG}
  [PCUNotRestore]
  /// id: cl_qcom_ext_host_ptr
  clExtHostPtrQCOM = sealed partial class
    public constructor(pl: cl_platform_id);
    private constructor := raise new System.NotSupportedException;
    public static PlatformLess := new clExtHostPtrQCOM(default(cl_platform_id));
    private function GetProcAddress(name: string): IntPtr;
    private static function GetProcOrNil<T>(fadr: IntPtr) :=
      fadr=IntPtr.Zero ? default(T) :
        Marshal.GetDelegateForFunctionPointer&<T>(fadr);
    public const ExtensionString = 'cl_qcom_ext_host_ptr';
    
    public GetDeviceImageInfoQCOM_adr := GetProcAddress('clGetDeviceImageInfoQCOM');
    private ntv_GetDeviceImageInfoQCOM_1 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; var param_value: Byte; var param_value_size_ret: UIntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    private ntv_GetDeviceImageInfoQCOM_2 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; var param_value: Byte; param_value_size_ret: IntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    private ntv_GetDeviceImageInfoQCOM_3 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    private ntv_GetDeviceImageInfoQCOM_4 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    private ntv_GetDeviceImageInfoQCOM_5 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    private ntv_GetDeviceImageInfoQCOM_6 := GetProcOrNil&<function(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode>(GetDeviceImageInfoQCOM_adr);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM<T>(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; var param_value: T; var param_value_size_ret: UIntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetDeviceImageInfoQCOM_1(device, image_width, image_height, image_format, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM<T>(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; var param_value: T; param_value_size_ret: IntPtr): clErrorCode; where T: record;
    begin
      Result := ntv_GetDeviceImageInfoQCOM_2(device, image_width, image_height, image_format, param_name, param_value_size, PByte(pointer(@param_value))^, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM_IMAGE_ROW_PITCH(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetDeviceImageInfoQCOM(device, image_width, image_height, image_format, clImagePitchInfo.IMAGE_ROW_PITCH, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM_IMAGE_SLICE_PITCH(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetDeviceImageInfoQCOM(device, image_width, image_height, image_format, clImagePitchInfo.IMAGE_SLICE_PITCH, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM_IMAGE_ROW_ALIGNMENT(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetDeviceImageInfoQCOM(device, image_width, image_height, image_format, clImagePitchInfo.IMAGE_ROW_ALIGNMENT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM_IMAGE_SLICE_ALIGNMENT(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; var param_value: UInt32; param_value_validate_size: boolean := false): clErrorCode;
    begin
      var param_value_sz := new UIntPtr(Marshal.SizeOf&<UInt32>);
      var param_value_ret_size: UIntPtr;
      Result := GetDeviceImageInfoQCOM(device, image_width, image_height, image_format, clImagePitchInfo.IMAGE_SLICE_ALIGNMENT, param_value_sz,param_value,param_value_ret_size);
      if param_value_validate_size and (param_value_ret_size<>param_value_sz) then
        raise new InvalidOperationException($'Implementation returned a size of {param_value_ret_size} instead of {param_value_sz}');
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: array of cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode;
      type PCl_image_format = ^cl_image_format;
    begin
      Result := if (image_format<>nil) and (image_format.Length<>0) then
        ntv_GetDeviceImageInfoQCOM_3(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetDeviceImageInfoQCOM_3(device, image_width, image_height, PCl_image_format(nil)^, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: array of cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode;
      type PCl_image_format = ^cl_image_format;
    begin
      Result := if (image_format<>nil) and (image_format.Length<>0) then
        ntv_GetDeviceImageInfoQCOM_4(device, image_width, image_height, image_format[0], param_name, param_value_size, param_value, param_value_size_ret) else
        ntv_GetDeviceImageInfoQCOM_4(device, image_width, image_height, PCl_image_format(nil)^, param_name, param_value_size, param_value, param_value_size_ret);
    end;
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetDeviceImageInfoQCOM_3(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; var image_format: cl_image_format; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetDeviceImageInfoQCOM_4(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; var param_value_size_ret: UIntPtr): clErrorCode :=
      ntv_GetDeviceImageInfoQCOM_5(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    public [MethodImpl(MethodImplOptions.AggressiveInlining)] function GetDeviceImageInfoQCOM(device: cl_device_id; image_width: UIntPtr; image_height: UIntPtr; image_format: IntPtr; param_name: clImagePitchInfo; param_value_size: UIntPtr; param_value: pointer; param_value_size_ret: IntPtr): clErrorCode :=
      ntv_GetDeviceImageInfoQCOM_6(device, image_width, image_height, image_format, param_name, param_value_size, param_value, param_value_size_ret);
    
  end;
  
  /// id: cl_qcom_ext_host_ptr_iocoherent
  clExtHostPtrIocoherentQCOM = static class
    public const ExtensionString = 'cl_qcom_ext_host_ptr_iocoherent';
  end;
  
  /// id: cl_qcom_ion_host_ptr
  clIonHostPtrQCOM = static class
    public const ExtensionString = 'cl_qcom_ion_host_ptr';
  end;
  
  
  