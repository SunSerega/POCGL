


//--------------------------------------------------
//                  Basic type's
//--------------------------------------------------

GLboolean				=boolean
BOOL					=Bool
Bool					=Bool

GLbyte					=SByte
GLubyte					=Byte
GLchar					=ntv_char
GLcharARB				=ntv_char
char					=ntv_char
LPCSTR					=const ntv_char *

GLshort					=Int16
GLushort				=UInt16
USHORT					=UInt16

GLint					=Int32
GLsizei					=Int32
int						=Int32
INT						=Int32
INT32					=Int32
int32_t					=Int32
GLuint					=UInt32
UINT					=UInt32
unsigned int			=UInt32
DWORD					=UInt32

GLint64					=Int64
GLint64EXT				=Int64
INT64					=Int64
int64_t					=Int64
GLuint64				=UInt64
GLuint64EXT				=UInt64
unsigned long			=UInt64

GLintptr				=IntPtr
GLintptrARB				=IntPtr
GLsizeiptr				=UIntPtr
GLsizeiptrARB			=UIntPtr

GLfloat					=single
GLclampf				=single
FLOAT					=single
float					=single
GLdouble				=real
GLclampd				=real

GLhalfNV				=Half
GLfixed					=Fixed

void 					=IntPtr -
LPVOID					=IntPtr
HANDLE					=IntPtr

GLenum					=DummyEnum
GLbitfield				=DummyFlags
GLhandleARB				=gl_handle_ARB

// GL_NV_vdpau_interop
GLvdpauSurfaceNV		=gl_vdpau_surface_NV

//--------------------------------------------------
//                    Delegate's
//--------------------------------------------------

GLDEBUGPROC				=GL_DEBUG_PROC
GLDEBUGPROCAMD			=GL_DEBUG_PROC
GLDEBUGPROCARB			=GL_DEBUG_PROC
GLVULKANPROCNV			=GL_VULKAN_PROC_NV
PROC					=IntPtr			=// Result of wglGetProcAddress
__GLXextFuncPtr			=IntPtr			=// Result of glXGetProcAddress

//--------------------------------------------------
//                        cl
//--------------------------------------------------

struct _cl_context		=gl_cl_context
struct _cl_event		=gl_cl_event

//--------------------------------------------------
//                       gdi
//--------------------------------------------------

// core
HDC						=gdi_device_context
HGLRC					=wgl_context
HENHMETAFILE			=gdi_h_enh_metafile
COLORREF				=gdi_colorref
LPGLYPHMETRICSFLOAT		=gdi_glyphmetrics_float *
PIXELFORMATDESCRIPTOR	=gdi_pixel_format_descriptor
LAYERPLANEDESCRIPTOR	=gdi_layer_plane_descriptor

// WGL_ARB_pbuffer
HPBUFFERARB				=wgl_pbuffer_ARB
HPBUFFEREXT				=wgl_pbuffer_EXT

// WGL_NV_gpu_affinity
PGPU_DEVICE				=wgl_GPU_device_NV *
HGPUNV					=wgl_GPU_NV

// GL_NV_video_capture
// WGL_NV_video_capture
HVIDEOINPUTDEVICENV		=wgl_h_video_input_device_NV

// GL_NV_present_video
// WGL_NV_present_video
HVIDEOOUTPUTDEVICENV	=wgl_h_video_output_device_NV

// WGL_NV_video_output
HPVIDEODEV				=wgl_h_video_device_NV

//--------------------------------------------------
//                       glx
//--------------------------------------------------

// x types
XVisualInfo				=x_p_visual_info -
Display					=x_p_display -
Pixmap					=x_pixmap
Font					=x_font
Window					=x_window
DMparams				=x_dm_params
DMbuffer				=x_dm_buffer
Colormap				=x_colormap

//ToDo что это вообще за типы? я не могу найти ничего про них
VLServer				=x_vl_server
VLPath					=x_vl_path
VLNode					=x_vl_node

// core
Status					=Bool

GLXContext				=glx_context
GLXContextID			=glx_context_id
GLXDrawable				=glx_drawable
GLXPixmap				=glx_pixmap
GLXFBConfig				=glx_fb_config
GLXFBConfigSGIX			=glx_fb_config
GLXWindow				=glx_window
GLXPbuffer				=glx_pbuffer
GLXPbufferSGIX			=glx_pbuffer

// GLX_SGIX_hyperpipe
GLXHyperpipeNetworkSGIX	=glx_hyperpipe_network_SGIX
GLXHyperpipeConfigSGIX	=glx_hyperpipe_config_SGIX

// GLX_NV_video_out
GLXVideoDeviceNV		=glx_video_device_NV

// GL_NV_video_capture
// GLX_NV_video_capture
GLXVideoCaptureDeviceNV	=glx_video_capture_device_NV

// GLX_SGIX_video_source
GLXVideoSourceSGIX		=glx_video_source_SGIX

//--------------------------------------------------
//                       egl
//--------------------------------------------------

// GL_OES_EGL_image
GLeglImageOES			=egl_image_OES

// GL_EXT_external_buffer
GLeglClientBufferEXT	=egl_chient_buffer_EXT


