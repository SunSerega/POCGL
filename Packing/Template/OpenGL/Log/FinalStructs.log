


# Fixed
	val: UInt32

# gdi_colorref
	a: byte
	r: byte
	g: byte
	b: byte

# gdi_glyphmetrics_float
	gmfBlackBoxX: single
	gmfBlackBoxY: single
	gmfptGlyphOriginX: single
	gmfptGlyphOriginY: single
	gmfCellIncX: single
	gmfCellIncY: single

# gdi_layer_plane_descriptor
	nSize: UInt16
	nVersion: UInt16
	: 
	dwFlags: GDI_LayerPlaneFlags
	iPixelType: GDI_PixelDataType
	: 
	cColorBits: Byte
	cRedBits: Byte
	cRedShift: Byte
	cGreenBits: Byte
	cGreenShift: Byte
	cBlueBits: Byte
	cBlueShift: Byte
	cAlphaBits: Byte
	cAlphaShift: Byte
	: 
	cAccumBits: Byte
	cAccumRedBits: Byte
	cAccumGreenBits: Byte
	cAccumBlueBits: Byte
	cAccumAlphaBits: Byte
	cDepthBits: Byte
	cStencilBits: Byte
	: 
	cAuxBuffers: Byte
	iLayerPlane: Byte
	bReserved: Byte
	: 
	crTransparent: gdi_colorref

# gdi_pixel_format_descriptor
	nSize: UInt16
	nVersion: UInt16
	: 
	dwFlags: GDI_PixelFormatFlags
	iPixelType: GDI_PixelDataType
	: 
	cColorBits: Byte
	cRedBits: Byte
	cRedShift: Byte
	cGreenBits: Byte
	cGreenShift: Byte
	cBlueBits: Byte
	cBlueShift: Byte
	cAlphaBits: Byte
	cAlphaShift: Byte
	: 
	cAccumBits: Byte
	cAccumRedBits: Byte
	cAccumGreenBits: Byte
	cAccumBlueBits: Byte
	cAccumAlphaBits: Byte
	: 
	cDepthBits: Byte
	cStencilBits: Byte
	cAuxBuffers: Byte
	: 
	iLayerType: Byte
	bLayersSize: Byte
	: 
	dwLayerMask: UInt32
	dwVisibleMask: UInt32
	dwDamageMask: UInt32

# ValueAnsiString_80
	body: ntv_char[80]

# glx_hyperpipe_config_SGIX
	pipeName: ValueAnsiString_80
	channel: Int32
	participationType: PipeParticipationTypeFlags
	timeSlice: Int32

# glx_hyperpipe_network_SGIX
	pipeName: ValueAnsiString_80
	networkId: Int32

# glx_pipe_rect_limits_SGIX
	pipeName: ValueAnsiString_80
	XOrigin: Int32
	YOrigin: Int32
	maxHeight: Int32
	maxWidth: Int32

# glx_pipe_rect_SGIX
	pipeName: ValueAnsiString_80
	srcXOrigin: Int32
	srcYOrigin: Int32
	srcWidth: Int32
	srcHeight: Int32
	destXOrigin: Int32
	destYOrigin: Int32
	destWidth: Int32
	destHeight: Int32

# Half
	val: UInt16

# ValueAnsiString_32
	body: ntv_char[32]

# ValueAnsiString_128
	body: ntv_char[128]

# wgl_GPU_device_NV
	cb: UInt32
	DeviceName: ValueAnsiString_32
	DeviceString: ValueAnsiString_128
	Flags: GPUDisplayDeviceFlags
	rcVirtualScreen: record left, top, right, bottom: Int64; end


