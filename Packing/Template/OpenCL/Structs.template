  
  
  
  cl_buffer_region = record
    public origin: UIntPtr;
    public size: UIntPtr;
    
    public constructor(origin: UIntPtr; size: UIntPtr);
    begin
      self.origin := origin;
      self.size := size;
    end;
    
  end;
  
  cl_image_desc = record
    public image_type: MemObjectType;
    public image_width: UIntPtr;
    public image_height: UIntPtr;
    public image_depth: UIntPtr;
    public image_array_size: UIntPtr;
    public image_row_pitch: UIntPtr;
    public image_slice_pitch: UIntPtr;
    public num_mip_levels: UInt32;
    public num_samples: UInt32;
    public mem_object: cl_mem;
    
    public constructor(image_type: MemObjectType; image_width: UIntPtr; image_height: UIntPtr; image_depth: UIntPtr; image_array_size: UIntPtr; image_row_pitch: UIntPtr; image_slice_pitch: UIntPtr; num_mip_levels: UInt32; num_samples: UInt32; mem_object: cl_mem);
    begin
      self.image_type := image_type;
      self.image_width := image_width;
      self.image_height := image_height;
      self.image_depth := image_depth;
      self.image_array_size := image_array_size;
      self.image_row_pitch := image_row_pitch;
      self.image_slice_pitch := image_slice_pitch;
      self.num_mip_levels := num_mip_levels;
      self.num_samples := num_samples;
      self.mem_object := mem_object;
    end;
    
  end;
  
  cl_image_format = record
    public image_channel_order: ChannelOrder;
    public image_channel_data_type: ChannelType;
    
    public constructor(image_channel_order: ChannelOrder; image_channel_data_type: ChannelType);
    begin
      self.image_channel_order := image_channel_order;
      self.image_channel_data_type := image_channel_data_type;
    end;
    
  end;
  
  cl_mutable_dispatch_arg_khr = record
    public arg_index: UInt32;
    public arg_size: UIntPtr;
    public arg_value: IntPtr;
    
    public constructor(arg_index: UInt32; arg_size: UIntPtr; arg_value: IntPtr);
    begin
      self.arg_index := arg_index;
      self.arg_size := arg_size;
      self.arg_value := arg_value;
    end;
    
  end;
  
  cl_mutable_dispatch_exec_info_khr = record
    public param_name: UInt32;
    public param_value_size: UIntPtr;
    public param_value: IntPtr;
    
    public constructor(param_name: UInt32; param_value_size: UIntPtr; param_value: IntPtr);
    begin
      self.param_name := param_name;
      self.param_value_size := param_value_size;
      self.param_value := param_value;
    end;
    
  end;
  
  cl_mutable_dispatch_config_khr = record
    public &type: CommandBufferStructureTypeKhr;
    public next: IntPtr;
    public command: cl_mutable_command;
    public num_args: UInt32;
    public num_svm_args: UInt32;
    public num_exec_infos: UInt32;
    public work_dim: UInt32;
    public arg_list: ^cl_mutable_dispatch_arg_khr;
    public arg_svm_list: ^cl_mutable_dispatch_arg_khr;
    public exec_info_list: ^cl_mutable_dispatch_exec_info_khr;
    public global_work_offset: ^UIntPtr;
    public global_work_size: ^UIntPtr;
    public local_work_size: ^UIntPtr;
    
    public constructor(&type: CommandBufferStructureTypeKhr; next: IntPtr; command: cl_mutable_command; num_args: UInt32; num_svm_args: UInt32; num_exec_infos: UInt32; work_dim: UInt32; arg_list: ^cl_mutable_dispatch_arg_khr; arg_svm_list: ^cl_mutable_dispatch_arg_khr; exec_info_list: ^cl_mutable_dispatch_exec_info_khr; global_work_offset: ^UIntPtr; global_work_size: ^UIntPtr; local_work_size: ^UIntPtr);
    begin
      self.type := &type;
      self.next := next;
      self.command := command;
      self.num_args := num_args;
      self.num_svm_args := num_svm_args;
      self.num_exec_infos := num_exec_infos;
      self.work_dim := work_dim;
      self.arg_list := arg_list;
      self.arg_svm_list := arg_svm_list;
      self.exec_info_list := exec_info_list;
      self.global_work_offset := global_work_offset;
      self.global_work_size := global_work_size;
      self.local_work_size := local_work_size;
    end;
    
  end;
  
  cl_mutable_base_config_khr = record
    public &type: CommandBufferStructureTypeKhr;
    public next: IntPtr;
    public num_mutable_dispatch: UInt32;
    public mutable_dispatch_list: ^cl_mutable_dispatch_config_khr;
    
    public constructor(&type: CommandBufferStructureTypeKhr; next: IntPtr; num_mutable_dispatch: UInt32; mutable_dispatch_list: ^cl_mutable_dispatch_config_khr);
    begin
      self.type := &type;
      self.next := next;
      self.num_mutable_dispatch := num_mutable_dispatch;
      self.mutable_dispatch_list := mutable_dispatch_list;
    end;
    
  end;
  
  
  