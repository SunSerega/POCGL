


# clGetPlatformInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt64	| *	|

# clGetDeviceInfo
!possible_par_types
 *	| *	| *	| *	| +var DeviceType +var UInt32 +var UIntPtr +var UInt64 +var Bool +var DeviceFPConfig +var DeviceMemCacheType +var DeviceLocalMemType +var DeviceExecCapabilities +var CommandQueueProperties +var cl_platform_id +var cl_device_id +var DevicePartitionProperty +var DeviceAffinityDomain +var DeviceSVMCapabilities	| *	|

# clCreateSubDevices
# clCreateSubDevicesEXT
!possible_par_types
 *	| *	| *	| *	| -array of cl_device_id	| *	|

# clGetContextInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt32 +var cl_device_id +var ContextProperties	| *	|



# clGetCommandQueueInfo
!possible_par_types
 *	| *	| *	| *	| +var cl_context +var cl_device_id +var UInt32 +var CommandQueueProperties +var cl_command_queue	| *	|

# clCreateBuffer
!possible_par_types
 *	| *	| *	| *	| +array of T +var T	| *	|

# clCreateSubBuffer
!possible_par_types
 *	| *	| *	| *	| +var cl_buffer_region	| *	|

# clEnqueue[%Read,Write%]Buffer
!possible_par_types
 *	| *	| *	| *	| *	| *	| +array of T +var T	| *	| *	| *	|

# clEnqueue[%Read,Write%]BufferRect
!possible_par_types
 *	| *	| *	| *	| -array of UIntPtr -IntPtr | -array of UIntPtr -IntPtr	| -array of UIntPtr -IntPtr	| *	| *	| *	| *	| +var T	| *	| *	| *	|

# clEnqueueCopyBufferRect
!possible_par_types
 *	| *	| *	| *	| -IntPtr			| -IntPtr			| -IntPtr			| *	| *	| *	| *	| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| array of UIntPtr	| *	| *	| *	| *	| *	| *	| *	|
 *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| var UIntPtr		| *	| *	| *	| *	| *	| *	| *	|

# clEnqueueFillBuffer
!possible_par_types
 *	| *	| *	| +array of T +var T	| *	| *	| *	| *	| *	| *	|

# clEnqueueMapBuffer

# clCreateImage
!possible_par_types
 *	| *	| *	| -array of cl_image_format -IntPtr	| -array of cl_image_desc -IntPtr	| +array of T +var T	| *	|

# clCreateImageWithProperties
!possible_par_types
 *	| *	| *	| *	| -array of cl_image_format -IntPtr	| -array of cl_image_desc -IntPtr	| +array of T +var T	| *	|

# clCreateImage2D
!possible_par_types
 *	| *	| *	| -array of cl_image_format -IntPtr	| *	| *	| *	| *	| *	|

# clCreateImage3D
!possible_par_types
 *	| *	| *	| -array of cl_image_format -IntPtr	| *	| *	| *	| *	| *	| *	| *	|

# clEnqueue[%Read,Write%]Image
!possible_par_types
 *	| *	| *	| *	| -array of UIntPtr -IntPtr	| -array of UIntPtr -IntPtr	| *	| *	| +var T	| *	| *	| *	|

# clEnqueueFillImage
!possible_par_types
 *	| *	| *	| +var T	| -array of UIntPtr -IntPtr | -array of UIntPtr -IntPtr	| *	| *	| *	|

# clEnqueueCopyImage
!possible_par_types
 *	| *	| *	| *	| -IntPtr			| -IntPtr			| -IntPtr			| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| array of UIntPtr	| *	| *	| *	|
 *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| var UIntPtr		| *	| *	| *	|

# clEnqueueCopyImageToBuffer
!possible_par_types
 *	| *	| *	| *	| -IntPtr			| -IntPtr			| *	| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| *	| *	| *	| *	|
 *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| *	| *	| *	| *	|

# clEnqueueCopyBufferToImage
!possible_par_types
 *	| *	| *	| *	| *	| -IntPtr			| -IntPtr			| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| *	| *	| *	|
 *	| *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| *	| *	| *	|

# clEnqueueMapImage
!possible_par_types
 *	| *	| *	| *	| *	| *					| *					| -array of UIntPtr -IntPtr	| -array of UIntPtr -IntPtr	| *	| *	|*	| *	|
!limit_ovrs
 *	| *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| *							| *							| *	| *	| *	| *	|
 *	| *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| *							| *							| *	| *	| *	| *	|
 *	| *	| *	| *	| *	| IntPtr			| IntPtr			| *							| *							| *	| *	| *	| *	|

# clGetImageInfo
!possible_par_types
 *	| *	| *	| *	| +var cl_image_format +var UIntPtr +var UInt32	| *	|

# clCreatePipe
!possible_par_types
 *	| *	| *	| *	| *	| -array of IntPtr -var IntPtr	| *	|

# clGetPipeInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt32	| *	|

# clGetMemObjectInfo
!possible_par_types
 *	| *	| *	| *	| +var MemObjectType +var MemFlags +var UIntPtr +var IntPtr +var UInt32 +var cl_context +var cl_mem +var Bool	| *	|

# clEnqueueSVMMemFill
# clEnqueueSVMMemFillARM
!possible_par_types
 *	| *	| *	| +array of T +var T	| *	| *	| *	| *	| *	|

# clEnqueueSVMMigrateMem
!limit_ovrs
 *	| *	| *	| array of IntPtr	| array of UIntPtr	| *	| *	| *	| *	|
 *	| *	| *	| var IntPtr		| var UIntPtr		| *	| *	| *	| *	|
 *	| *	| *	| pointer			| IntPtr			| *	| *	| *	| *	|

# clGetSamplerInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt32 +var cl_context +var Bool +var AddressingMode +var FilterMode	| *	|

# clCreateProgramWithSource

# clCreateProgramWithIL
# clCreateProgramWithILKHR
!possible_par_types
 *	| *	| +array of byte +var byte	| *	| *	|

# clCreateProgramWithBinary
!repl_par_t
     var Int32 =      var ErrorCode
array of Int32 = array of ErrorCode
!possible_par_types
 *	| *	| *	| *						| *					| *							| *						| +IntPtr		|
!limit_ovrs
 *	| *	| *	| *						| *					| *							| array of ErrorCode	| var ErrorCode	|
 *	| *	| *	| *						| *					| *							| array of ErrorCode	| IntPtr		|
 *	| *	| *	| *						| *					| *							| var ErrorCode			| var ErrorCode	|
 *	| *	| *	| *						| *					| *							| var ErrorCode			| IntPtr		|
 *	| *	| *	| *						| *					| *							| IntPtr				| var ErrorCode	|
# clCreateProgramWithBinary
!limit_ovrs
 *	| *	| *	| array of cl_device_id	| array of UIntPtr	| array of array of Byte	| *						| *				|
 *	| *	| *	| var cl_device_id		| var UIntPtr		| var IntPtr				| *						| *				|
 *	| *	| *	| IntPtr				| IntPtr			| pointer					| *						| *				|

# clSetProgramSpecializationConstant
!possible_par_types
 *	| *	| *	| *	| +array of T +var T	|

# clCompileProgram

# clGetProgramInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt32 +var cl_context +var cl_device_id +var IntPtr +var UIntPtr +var Byte +var Bool	| *	|

# clGetProgramBuildInfo
!possible_par_types
 *	| *	| *	| *	| *	| +var BuildStatus +var ProgramBinaryType +var UIntPtr	| *	|



# clCreateKernelsInProgram
!possible_par_types
 *	| *	| *	| -array of cl_kernel	| *	|

# clSetKernelArg
!possible_par_types
 *	| *	| *	| *	| +var T	|

# clSetKernelExecInfo
# clSetKernelExecInfoARM
!possible_par_types
 *	| *	| *	| *	|  +var IntPtr +var Bool	|

# clGetKernelInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt32 +var cl_context +var cl_program	| *	|

# clGetKernelWorkGroupInfo
!possible_par_types
 *	| *	| *	| *	| *	| +var UIntPtr +var UInt64	| *	|

# clGetKernelSubGroupInfo
# clGetKernelSubGroupInfoKHR
!possible_par_types
 *	| *	| *	| *	| *	| +var UIntPtr	| *	| +var UIntPtr	| *	|
!limit_ovrs
 *	| *	| *	| *	| *	| var UIntPtr	| *	| var UIntPtr	| *	|
 *	| *	| *	| *	| *	| IntPtr		| *	| var UIntPtr	| *	|
 *	| *	| *	| *	| *	| IntPtr		| *	| IntPtr		| *	|

# clGetKernelArgInfo
!possible_par_types
 *	| *	| *	| *	| *	| +var KernelArgAddressQualifier +var KernelArgAccessQualifier +var KernelArgTypeQualifier	| *	|

# clEnqueueNDRangeKernel
!possible_par_types
 *	| *	| *	| *	| *					| -IntPtr			| *					| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| array of UIntPtr	| array of UIntPtr	| *					| *	| *	| *	|
 *	| *	| *	| *	| var UIntPtr		| var UIntPtr		| *					| *	| *	| *	|
 *	| *	| *	| *	| IntPtr			| var UIntPtr		| *					| *	| *	| *	|
!limit_ovrs
 *	| *	| *	| *	| *					| array of UIntPtr	| array of UIntPtr	| *	| *	| *	|
 *	| *	| *	| *	| *					| var UIntPtr		| var UIntPtr		| *	| *	| *	|
 *	| *	| *	| *	| *					| var UIntPtr		| IntPtr			| *	| *	| *	|

# clEnqueueNativeKernel
!limit_ovrs
 *	| *	| *	| *	| *	| *	| array of cl_mem	| array of IntPtr	| *	| *	| *	|
 *	| *	| *	| *	| *	| *	| var cl_mem		| var IntPtr		| *	| *	| *	|
 *	| *	| *	| *	| *	| *	| IntPtr			| pointer			| *	| *	| *	|



# clSetUserEventStatus
!repl_par_t
Int32 = CommandExecutionStatus

# clGetEventInfo
!possible_par_types
 *	| *	| *	| *	| +var cl_command_queue +var cl_context +var CommandType +var CommandExecutionStatus +var UInt32	| *	|

# clSetEventCallback
!repl_par_t
Int32 = CommandExecutionStatus

# clEnqueueMarkerWithWaitList
!possible_par_types
 *	| *	| *	| *	| -IntPtr	|

# clGetEventProfilingInfo
!possible_par_types
 *	| *	| *	| *	| +var UInt64	| *	|


