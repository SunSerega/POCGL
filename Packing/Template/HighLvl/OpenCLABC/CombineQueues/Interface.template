


{$region Sync}

{$region Simple}

function CombineSyncQueue(params qs: array of CommandQueueBase): CommandQueueBase;
function CombineSyncQueue(params qs: array of CommandQueueNil): CommandQueueNil;
function CombineSyncQueue<T>(params qs: array of CommandQueue<T>): CommandQueue<T>;

function CombineSyncQueue<TQ>(qs: array of TQ; last: CommandQueueBase): CommandQueueBase; where TQ: CommandQueueBase;
function CombineSyncQueue<TQ>(qs: array of TQ; last: CommandQueueNil): CommandQueueNil; where TQ: CommandQueueBase;
function CombineSyncQueue<T, TQ>(qs: array of TQ; last: CommandQueue<T>): CommandQueue<T>; where TQ: CommandQueueBase;

{$endregion Simple}

{$region Conv}

{$region NonContext}

function CombineConvSyncQueue<TInp, TRes>(conv: Func<array of TInp, TRes>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

function CombineConvSyncQueueN2<TInp1,TInp2, TRes>(conv: Func<TInp1, TInp2, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN3<TInp1,TInp2,TInp3, TRes>(conv: Func<TInp1, TInp2, TInp3, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN4<TInp1,TInp2,TInp3,TInp4, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

{$endregion NonContext}

{$region Context}

function CombineConvSyncQueue<TInp, TRes>(conv: Func<array of TInp, CLContext, TRes>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

function CombineConvSyncQueueN2<TInp1,TInp2, TRes>(conv: Func<TInp1, TInp2, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN3<TInp1,TInp2,TInp3, TRes>(conv: Func<TInp1, TInp2, TInp3, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN4<TInp1,TInp2,TInp3,TInp4, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvSyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

{$endregion Context}

{$endregion Conv}

{$region Use}

{$region NonContext}

function CombineUseSyncQueue<TInp>(use: Action<array of TInp>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<array of TInp>;

function CombineUseSyncQueueN2<TInp1,TInp2>(use: Action<TInp1, TInp2>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2>>;
function CombineUseSyncQueueN3<TInp1,TInp2,TInp3>(use: Action<TInp1, TInp2, TInp3>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3>>;
function CombineUseSyncQueueN4<TInp1,TInp2,TInp3,TInp4>(use: Action<TInp1, TInp2, TInp3, TInp4>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4>>;
function CombineUseSyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5>>;
function CombineUseSyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>>;
function CombineUseSyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>>;

{$endregion NonContext}

{$region Context}

function CombineUseSyncQueue<TInp>(use: Action<array of TInp, CLContext>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<array of TInp>;

function CombineUseSyncQueueN2<TInp1,TInp2>(use: Action<TInp1, TInp2, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2>>;
function CombineUseSyncQueueN3<TInp1,TInp2,TInp3>(use: Action<TInp1, TInp2, TInp3, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3>>;
function CombineUseSyncQueueN4<TInp1,TInp2,TInp3,TInp4>(use: Action<TInp1, TInp2, TInp3, TInp4, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4>>;
function CombineUseSyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5>>;
function CombineUseSyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>>;
function CombineUseSyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>>;

{$endregion Context}

{$endregion Use}

{$endregion Sync}

{$region Async}

{$region Simple}

function CombineAsyncQueue(params qs: array of CommandQueueBase): CommandQueueBase;
function CombineAsyncQueue(params qs: array of CommandQueueNil): CommandQueueNil;
function CombineAsyncQueue<T>(params qs: array of CommandQueue<T>): CommandQueue<T>;

function CombineAsyncQueue<TQ>(qs: array of TQ; last: CommandQueueBase): CommandQueueBase; where TQ: CommandQueueBase;
function CombineAsyncQueue<TQ>(qs: array of TQ; last: CommandQueueNil): CommandQueueNil; where TQ: CommandQueueBase;
function CombineAsyncQueue<T, TQ>(qs: array of TQ; last: CommandQueue<T>): CommandQueue<T>; where TQ: CommandQueueBase;

{$endregion Simple}

{$region Conv}

{$region NonContext}

function CombineConvAsyncQueue<TInp, TRes>(conv: Func<array of TInp, TRes>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

function CombineConvAsyncQueueN2<TInp1,TInp2, TRes>(conv: Func<TInp1, TInp2, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN3<TInp1,TInp2,TInp3, TRes>(conv: Func<TInp1, TInp2, TInp3, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN4<TInp1,TInp2,TInp3,TInp4, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

{$endregion NonContext}

{$region Context}

function CombineConvAsyncQueue<TInp, TRes>(conv: Func<array of TInp, CLContext, TRes>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

function CombineConvAsyncQueueN2<TInp1,TInp2, TRes>(conv: Func<TInp1, TInp2, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN3<TInp1,TInp2,TInp3, TRes>(conv: Func<TInp1, TInp2, TInp3, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN4<TInp1,TInp2,TInp3,TInp4, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;
function CombineConvAsyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7, TRes>(conv: Func<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, CLContext, TRes>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<TRes>;

{$endregion Context}

{$endregion Conv}

{$region Use}

{$region NonContext}

function CombineUseAsyncQueue<TInp>(use: Action<array of TInp>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<array of TInp>;

function CombineUseAsyncQueueN2<TInp1,TInp2>(use: Action<TInp1, TInp2>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2>>;
function CombineUseAsyncQueueN3<TInp1,TInp2,TInp3>(use: Action<TInp1, TInp2, TInp3>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3>>;
function CombineUseAsyncQueueN4<TInp1,TInp2,TInp3,TInp4>(use: Action<TInp1, TInp2, TInp3, TInp4>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4>>;
function CombineUseAsyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5>>;
function CombineUseAsyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>>;
function CombineUseAsyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>>;

{$endregion NonContext}

{$region Context}

function CombineUseAsyncQueue<TInp>(use: Action<array of TInp, CLContext>; qs: array of CommandQueue<TInp>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<array of TInp>;

function CombineUseAsyncQueueN2<TInp1,TInp2>(use: Action<TInp1, TInp2, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2>>;
function CombineUseAsyncQueueN3<TInp1,TInp2,TInp3>(use: Action<TInp1, TInp2, TInp3, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3>>;
function CombineUseAsyncQueueN4<TInp1,TInp2,TInp3,TInp4>(use: Action<TInp1, TInp2, TInp3, TInp4, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4>>;
function CombineUseAsyncQueueN5<TInp1,TInp2,TInp3,TInp4,TInp5>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5>>;
function CombineUseAsyncQueueN6<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6>>;
function CombineUseAsyncQueueN7<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>(use: Action<TInp1, TInp2, TInp3, TInp4, TInp5, TInp6, TInp7, CLContext>; q1: CommandQueue<TInp1>; q2: CommandQueue<TInp2>; q3: CommandQueue<TInp3>; q4: CommandQueue<TInp4>; q5: CommandQueue<TInp5>; q6: CommandQueue<TInp6>; q7: CommandQueue<TInp7>; need_own_thread: boolean := true; can_pre_calc: boolean := false): CommandQueue<ValueTuple<TInp1,TInp2,TInp3,TInp4,TInp5,TInp6,TInp7>>;

{$endregion Context}

{$endregion Use}

{$endregion Async}


