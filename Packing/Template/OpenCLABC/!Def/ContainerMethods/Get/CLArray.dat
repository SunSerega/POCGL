
!Generics
T: record



# GetValue
ind: CommandQueue<integer>
!ResultType
&T
!ForcePtrQr
!Enqueue
var ec := cl.EnqueueReadBuffer(
  cq, o.Native, Bool.NON_BLOCKING,
  new UIntPtr(int64(!ind!) * Marshal.SizeOf(default(T))), new UIntPtr(Marshal.SizeOf(default(T))),
  !res_ptr!,
  !evs!
);
OpenCLABCInternalException.RaiseIfError(ec);



# GetArray!AutoSize
!ResultType
array of &T
!SetRes
new T[o.Length]
!PinnRes
!Enqueue
var ec := cl.EnqueueReadBuffer(
  cq, o.Native, Bool.NON_BLOCKING,
  UIntPtr.Zero, new UIntPtr(o.ByteSize),
  !res_pinn_adr!,
  !evs!
);
OpenCLABCInternalException.RaiseIfError(ec);

# GetArray[%rank:,2,3%]
{%rank? len : len1,len2 : len1,len2,len3 %}: CommandQueue<integer>
!ResultType
array{%rank? : [,] : [,,] %} of &T
!SetRes
new &T[{%rank? !len! : !len1!,!len2! : !len1!,!len2!,!len3! %}]
!PinnRes
!Enqueue
var ec := cl.EnqueueReadBuffer(
  cq, o.Native, Bool.NON_BLOCKING,
  UIntPtr.Zero, new UIntPtr(!res!.Length * Marshal.SizeOf(default(T))),
  !res![{%rank? 0 : 0,0 : 0,0,0 %}],
  !evs!
);
OpenCLABCInternalException.RaiseIfError(ec);


