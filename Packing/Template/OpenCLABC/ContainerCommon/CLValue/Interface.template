    
    
    
    public constructor(o: CLValue<T>);
    public constructor(q: CommandQueue<CLValue<T>>);
    private constructor;
    
    {$region Special .Add's}
    
    public function ThenQueue(q: CommandQueueBase): CLValueCCQ<T>;
    
    public function ThenConstProc(p: CLValue<T>->()): CLValueCCQ<T>;
    public function ThenConstProc(p: (CLValue<T>, CLContext)->()): CLValueCCQ<T>;
    public function ThenQuickProc(p: CLValue<T>->()): CLValueCCQ<T>;
    public function ThenQuickProc(p: (CLValue<T>, CLContext)->()): CLValueCCQ<T>;
    public function ThenThreadedProc(p: CLValue<T>->()): CLValueCCQ<T>;
    public function ThenThreadedProc(p: (CLValue<T>, CLContext)->()): CLValueCCQ<T>;
    
    public function ThenWait(marker: WaitMarker): CLValueCCQ<T>;
    
    {$endregion Special .Add's}
    
    
    