    
    
    
    {$region 1#Write&Read}
    
    public function WriteValue(val: &T): CLValue<T>;
    
    public function WriteValue(val: CommandQueue<&T>): CLValue<T>;
    
    public function WriteNativeValueArea(native_data: CommandQueue<NativeValueArea<&T>>): CLValue<T>;
    
    public function WriteNativeValue(native_data: CommandQueue<NativeValue<&T>>): CLValue<T>;
    
    public function ReadNativeValueArea(native_data: CommandQueue<NativeValueArea<&T>>): CLValue<T>;
    
    public function ReadNativeValue(native_data: CommandQueue<NativeValue<&T>>): CLValue<T>;
    
    {$endregion 1#Write&Read}
    
    {$region 3#Copy}
    
    public function CopyTo(mem: CommandQueue<CLMemory>): CLValue<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemory>): CLValue<T>;
    
    public function CopyTo(mem: CommandQueue<CLMemory>; mem_offset: CommandQueue<integer>): CLValue<T>;
    
    public function CopyFrom(mem: CommandQueue<CLMemory>; mem_offset: CommandQueue<integer>): CLValue<T>;
    
    public function CopyTo(val: CommandQueue<CLValue<&T>>): CLValue<T>;
    
    public function CopyFrom(val: CommandQueue<CLValue<&T>>): CLValue<T>;
    
    {$endregion 3#Copy}
    
    
    